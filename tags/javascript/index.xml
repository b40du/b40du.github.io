<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on 爆肚的杂货铺</title>
    <link>https://b40du.github.io/tags/javascript/</link>
    <description>Recent content in javascript on 爆肚的杂货铺</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Fri, 01 May 2020 16:26:46 +0800</lastBuildDate>
    
	<atom:link href="https://b40du.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>笔记-JavaScript基础</title>
      <link>https://b40du.github.io/posts/note-heima-javascript-basic/</link>
      <pubDate>Fri, 01 May 2020 16:26:46 +0800</pubDate>
      
      <guid>https://b40du.github.io/posts/note-heima-javascript-basic/</guid>
      <description>2. 初识JavaScript 目标  能够说出JavaScript是什么 能够知道JavaScript的发展历史 能够说出浏览器执行JavaScript的原理 能够说出JavaScript由哪三部分组成 能够写出JavaScript三个输入输出语句  目录  初识JavaScript JavaScript注释 JavaScript输入输出语句  2.1 初识JavaScript 2.1.1 JavaScript历史  布兰登·艾奇（BrendanEich，1961年~） 神奇的大哥在1995年利用10天完成JavaScript涉及 网景公司最初命名位LiveScript，后来在于Sun合作之后将其改名为JavaScript  2.1.2 JavaScript是什么  JavaScript是世界上最流行的语言之一，是一种运行在客户端的脚本语言（Script是脚本的意思） 脚本语言：不需要编译，运行过程中由js解释器（js引擎）逐行来进行解释并执行 现在也可以基于Node.js技术进行服务器端编程  2.1.3 JavaScript的作用  表单动态校验（密码强度检测）（JS产生最初的目的） 网页特效 服务端开发（Node.js） 桌面程序（Election） App（Cordova） 控制硬件-物联网（Ruff） 游戏开发（cocos2d-js）  2.1.4 HTML/CSS/JS的关系 2.1.5 浏览器执行JS简介 浏览器分为两部分 渲染引擎 和 JS引擎
 渲染引擎：用来解析HTML与CSS，俗称内核，比如chrome浏览器的blink，老版本的webkit JS引擎：也称为JS解释器。用来读取网页中的JavaScript代码，对其处理后运行，比如chrome浏览器的V8   浏览器本身并不会执行JS代码，而是通过内置JavaScript引擎（解释器）来执行JS代码。JS引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，所以JavaScript语言归为脚本语言，会逐行解释执行。
 2.1.6 JS的组成 2.1.6.1 ECMAScript ECMAScript是由ECMA国际（原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为JavaScript或JScript，但实际上后两者是ECMAScript语言的实现和扩展。
ECMAScript：ECMAScript规定了JS的编程语言和基础核心知识，是所有浏览器厂商共同遵守的一套JS语言工业标准。
更多参看MDN：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview
2.1.6.3 DOM——文档对象模型 文档对象模型（Document ObjectModel，简称DOM），是W3C组织推荐的处理可扩展标记语言的标准编程接口。
通过DOM提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。</description>
    </item>
    
  </channel>
</rss>